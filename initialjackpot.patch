From 0ea3a0487d6856c956a7007f15362c6f4ffa1270 Mon Sep 17 00:00:00 2001
From: FuriousDroid <furiousdroid@furiousdroid>
Date: Sun, 7 Apr 2024 22:24:14 -0400
Subject: [PATCH] Add initial jackpotlte support

---
 arch/arm64/Kconfig.exynos                     |    7 +
 arch/arm64/boot/dts/Makefile                  |   20 +
 .../dtb/battery_data_jackpotlte_can.dtsi      |   89 +
 .../dtb/battery_data_jackpotlte_common.dtsi   |  615 +++++
 .../dtb/exynos7885-jackpotlte_can_open_03.dts |  173 ++
 .../dtb/exynos7885-jackpotlte_can_open_04.dts |  164 ++
 .../dtb/exynos7885-jackpotlte_can_open_05.dts |  151 ++
 .../dtb/exynos7885-jackpotlte_can_open_06.dts |  168 ++
 .../dtb/exynos7885-jackpotlte_can_open_07.dts |  151 ++
 ...xynos7885-jackpotlte_can_open_gpio_03.dtsi |  171 ++
 ...xynos7885-jackpotlte_can_open_gpio_04.dtsi |  172 ++
 ...xynos7885-jackpotlte_can_open_gpio_05.dtsi |  177 ++
 ...xynos7885-jackpotlte_can_open_gpio_06.dtsi |  177 ++
 ...xynos7885-jackpotlte_can_open_gpio_07.dtsi |  177 ++
 .../dtb/exynos7885-jackpotlte_common.dtsi     | 2381 ++++++++++++++++
 .../dtb/exynos7885-jackpotlte_eur_open_03.dts |  166 ++
 .../dtb/exynos7885-jackpotlte_eur_open_04.dts |  157 ++
 .../dtb/exynos7885-jackpotlte_eur_open_05.dts |  144 +
 .../dtb/exynos7885-jackpotlte_eur_open_06.dts |  161 ++
 .../dtb/exynos7885-jackpotlte_eur_open_07.dts |  144 +
 ...xynos7885-jackpotlte_eur_open_gpio_03.dtsi |  171 ++
 ...xynos7885-jackpotlte_eur_open_gpio_04.dtsi |  172 ++
 ...xynos7885-jackpotlte_eur_open_gpio_05.dtsi |  177 ++
 ...xynos7885-jackpotlte_eur_open_gpio_06.dtsi |  177 ++
 ...xynos7885-jackpotlte_eur_open_gpio_07.dtsi |  177 ++
 ...7885-jackpotlte_fingerprint-sensor_00.dtsi |   95 +
 .../exynos7885-jackpotlte_kor-tdmb-00.dtsi    |   88 +
 .../dtb/exynos7885-jackpotlte_kor_03.dts      |  197 ++
 .../dtb/exynos7885-jackpotlte_kor_04.dts      |  189 ++
 .../dtb/exynos7885-jackpotlte_kor_05.dts      |  175 ++
 .../dtb/exynos7885-jackpotlte_kor_06.dts      |  192 ++
 .../dtb/exynos7885-jackpotlte_kor_07.dts      |  175 ++
 .../exynos7885-jackpotlte_kor_gpio_03.dtsi    |  163 ++
 .../exynos7885-jackpotlte_kor_gpio_04.dtsi    |  164 ++
 .../exynos7885-jackpotlte_kor_gpio_05.dtsi    |  170 ++
 .../exynos7885-jackpotlte_kor_gpio_06.dtsi    |  171 ++
 .../exynos7885-jackpotlte_kor_gpio_07.dtsi    |  171 ++
 .../dtb/exynos7885-jackpotlte_motor.dtsi      |   34 +
 .../dtb/exynos7885-jackpotlte_mst_02.dtsi     |   45 +
 .../dtb/exynos7885-jackpotlte_svcled.dtsi     |   23 +
 .../exynos/dtb/exynos_gpio_config_macros.dtsi |   81 +
 .../exynos/dtb/modem-s327ap-sipc-pdata.dtsi   |  417 +++
 .../exynos7885-jackpotlte_can_open_03.dts     |  173 ++
 .../exynos7885-jackpotlte_can_open_04.dts     |  164 ++
 .../exynos7885-jackpotlte_can_open_05.dts     |  151 ++
 .../exynos7885-jackpotlte_can_open_06.dts     |  168 ++
 .../exynos7885-jackpotlte_can_open_07.dts     |  151 ++
 ...xynos7885-jackpotlte_can_open_gpio_03.dtsi |  171 ++
 ...xynos7885-jackpotlte_can_open_gpio_04.dtsi |  172 ++
 ...xynos7885-jackpotlte_can_open_gpio_05.dtsi |  177 ++
 ...xynos7885-jackpotlte_can_open_gpio_06.dtsi |  177 ++
 ...xynos7885-jackpotlte_can_open_gpio_07.dtsi |  177 ++
 .../dtbo/exynos7885-jackpotlte_common.dtsi    | 2385 +++++++++++++++++
 .../dtbo/exynos7885-jackpotlte_dummy.dts      |   11 +
 .../exynos7885-jackpotlte_eur_open_03.dts     |  166 ++
 .../exynos7885-jackpotlte_eur_open_04.dts     |  157 ++
 .../exynos7885-jackpotlte_eur_open_05.dts     |  144 +
 .../exynos7885-jackpotlte_eur_open_06.dts     |  161 ++
 .../exynos7885-jackpotlte_eur_open_07.dts     |  144 +
 ...xynos7885-jackpotlte_eur_open_gpio_03.dtsi |  171 ++
 ...xynos7885-jackpotlte_eur_open_gpio_04.dtsi |  172 ++
 ...xynos7885-jackpotlte_eur_open_gpio_05.dtsi |  177 ++
 ...xynos7885-jackpotlte_eur_open_gpio_06.dtsi |  177 ++
 ...xynos7885-jackpotlte_eur_open_gpio_07.dtsi |  177 ++
 ...7885-jackpotlte_fingerprint-sensor_00.dtsi |   95 +
 .../exynos7885-jackpotlte_kor-tdmb-00.dtsi    |   88 +
 .../dtbo/exynos7885-jackpotlte_kor_03.dts     |  197 ++
 .../dtbo/exynos7885-jackpotlte_kor_04.dts     |  189 ++
 .../dtbo/exynos7885-jackpotlte_kor_05.dts     |  175 ++
 .../dtbo/exynos7885-jackpotlte_kor_06.dts     |  192 ++
 .../dtbo/exynos7885-jackpotlte_kor_07.dts     |  175 ++
 .../exynos7885-jackpotlte_kor_gpio_03.dtsi    |  163 ++
 .../exynos7885-jackpotlte_kor_gpio_04.dtsi    |  164 ++
 .../exynos7885-jackpotlte_kor_gpio_05.dtsi    |  170 ++
 .../exynos7885-jackpotlte_kor_gpio_06.dtsi    |  171 ++
 .../exynos7885-jackpotlte_kor_gpio_07.dtsi    |  171 ++
 .../dtbo/exynos7885-jackpotlte_motor.dtsi     |   34 +
 .../dtbo/exynos7885-jackpotlte_mst_02.dtsi    |   45 +
 .../dtbo/exynos7885-jackpotlte_svcled.dtsi    |   23 +
 .../configs/exynos7885-jackpotlte_defconfig   |  753 ++++++
 kernel/trace/ring_buffer.c                    |  116 +-
 security/sdp/dek_legacy.c                     |    4 +-
 sound/soc/codecs/tfa9872/Makefile             |    3 +
 sound/soc/codecs/tfa9872/tfa_init.c           |    4 +-
 drivers/mmc/host/dw_mmc-srpmb.c               |  2 +-
 buildjackpotlte.sh                            | 18 ++++++++
 86 files changed, 17567 insertions(+), 97 deletions(-)
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/battery_data_jackpotlte_can.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/battery_data_jackpotlte_common.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_03.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_04.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_05.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_06.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_07.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_03.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_04.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_05.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_06.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_07.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_common.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_03.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_04.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_05.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_06.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_07.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_03.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_04.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_05.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_06.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_07.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_fingerprint-sensor_00.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor-tdmb-00.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_03.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_04.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_05.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_06.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_07.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_03.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_04.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_05.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_06.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_07.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_motor.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_mst_02.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_svcled.dtsi
 create mode 100644 arch/arm64/boot/dts/exynos/dtb/exynos_gpio_config_macros.dtsi
 create mode 100644 arch/arm64/boot/dts/exynos/dtb/modem-s327ap-sipc-pdata.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_03.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_04.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_05.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_06.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_07.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_03.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_04.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_05.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_06.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_07.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_common.dtsi
 create mode 100644 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_dummy.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_03.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_04.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_05.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_06.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_07.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_03.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_04.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_05.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_06.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_07.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_fingerprint-sensor_00.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor-tdmb-00.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_03.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_04.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_05.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_06.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_07.dts
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_03.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_04.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_05.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_06.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_07.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_motor.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_mst_02.dtsi
 create mode 100755 arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_svcled.dtsi
 create mode 100644 arch/arm64/configs/exynos7885-jackpotlte_defconfig

diff --git a/arch/arm64/Kconfig.exynos b/arch/arm64/Kconfig.exynos
index 136f5cd5b1..fcbfee20a8 100755
--- a/arch/arm64/Kconfig.exynos
+++ b/arch/arm64/Kconfig.exynos
@@ -46,6 +46,13 @@ config MACH_EXYNOS7885_M20_OPEN
 	default n
 	help
 	Say Y here if you want to enable building dtbo for Galaxy M20.
+	
+config MACH_EXYNOS7885_JACKPOTLTE_GLOBAL
+	bool "Build Dtbo image for A8 2018"
+	depends on SOC_EXYNOS7885
+	default n
+	help
+	Say Y here if you want to enable building dtbo for Galaxy A8 2018
 
 config USE_STOCK_CONFIG_FOR_IKCONFIG
 	bool "Use stock config for /proc/config.gz"
diff --git a/arch/arm64/boot/dts/Makefile b/arch/arm64/boot/dts/Makefile
index b5dc717eac..afafb32231 100755
--- a/arch/arm64/boot/dts/Makefile
+++ b/arch/arm64/boot/dts/Makefile
@@ -51,5 +51,25 @@ dtbo-$(CONFIG_MACH_EXYNOS7885_A40_OPEN) := \
 dtbo-$(CONFIG_MACH_EXYNOS7885_M20_OPEN) := \
 	exynos/dtbo/exynos7904-m20lte_swa_open_04.dtbo
 
+dtbo-$(CONFIG_MACH_EXYNOS7885_JACKPOTLTE_GLOBAL) := \
+	exynos/dtbo/exynos7885-jackpotlte_dummy.dtbo
+
+dtb-$(CONFIG_MACH_EXYNOS7885_JACKPOTLTE_GLOBAL) := \
+	exynos/dtb/exynos7885-jackpotlte_eur_open_03.dtb \
+	exynos/dtb/exynos7885-jackpotlte_eur_open_04.dtb \
+	exynos/dtb/exynos7885-jackpotlte_eur_open_05.dtb \
+	exynos/dtb/exynos7885-jackpotlte_eur_open_06.dtb \
+	exynos/dtb/exynos7885-jackpotlte_eur_open_07.dtb \
+	exynos/dtb/exynos7885-jackpotlte_can_open_03.dtb \
+	exynos/dtb/exynos7885-jackpotlte_can_open_04.dtb \
+	exynos/dtb/exynos7885-jackpotlte_can_open_05.dtb \
+	exynos/dtb/exynos7885-jackpotlte_can_open_06.dtb \
+	exynos/dtb/exynos7885-jackpotlte_can_open_07.dtb \
+	exynos/dtb/exynos7885-jackpotlte_kor_03.dtb \
+	exynos/dtb/exynos7885-jackpotlte_kor_04.dtb \
+	exynos/dtb/exynos7885-jackpotlte_kor_05.dtb \
+	exynos/dtb/exynos7885-jackpotlte_kor_06.dtb \
+	exynos/dtb/exynos7885-jackpotlte_kor_07.dtb
+
 always         := $(dtb-y) $(dtbo-y)
 clean-files    := *.dtb *.dtbo
diff --git a/arch/arm64/boot/dts/exynos/dtb/battery_data_jackpotlte_can.dtsi b/arch/arm64/boot/dts/exynos/dtb/battery_data_jackpotlte_can.dtsi
new file mode 100755
index 0000000000..f042228f84
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/battery_data_jackpotlte_can.dtsi
@@ -0,0 +1,89 @@
+/*
+ * Jackpot Battery parameters device tree file for board IDs 04 and higher
+ *
+ * Copyright (C) 2017 Samsung Electronics, Inc.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/ {
+	battery {
+	
+			battery,standard_curr = <2050>;
+	};
+	
+	cable-info {
+		   default_input_current = <1800>;
+		   default_charging_current = <2000>;
+		   full_check_current_1st = <300>;
+		   full_check_current_2nd = <150>;
+
+		   current_group_1 {
+		   	       cable_number = <1 4 19 21 22 23 30>;
+			       input_current = <500>;
+			       charging_current = <500>;
+		   };
+		   current_group_2 {
+		   	       cable_number = <2 25>;
+			       input_current = <1000>;
+			       charging_current = <1000>;
+		  };
+		   current_group_3 {
+		   	       cable_number = <5>;
+			       input_current = <1500>;
+			       charging_current = <1500>;
+		  };
+		   current_group_4 {
+		   	       cable_number = <6 7 8>;
+			       input_current = <1650>;
+			       charging_current = <2050>;
+		  };
+		   current_group_5 {
+		   	       cable_number = <9>;
+			       input_current = <1650>;
+			       charging_current = <2050>;
+		  };
+		   current_group_6 {
+		   	       cable_number = <10 12 14 15 27>;
+			       input_current = <900>;
+			       charging_current = <1200>;
+		  };
+		   current_group_7 {
+		   	       cable_number = <13>;
+			       input_current = <700>;
+			       charging_current = <1200>;
+		  };
+		   current_group_8 {
+		   	       cable_number = <24>;
+			       input_current = <1000>;
+			       charging_current = <450>;
+		  };
+		   current_group_9 {
+		   	       cable_number = <26>;
+			       input_current = <2000>;
+			       charging_current = <1800>;
+		  };
+		   current_group_10 {
+		   	       cable_number = <11 16 28>;
+			       input_current = <650>;
+			       charging_current = <1200>;
+		  };
+		   current_group_11 {
+		   	       cable_number = <29>;
+			       input_current = <500>;
+			       charging_current = <1200>;
+		  };
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/battery_data_jackpotlte_common.dtsi b/arch/arm64/boot/dts/exynos/dtb/battery_data_jackpotlte_common.dtsi
new file mode 100755
index 0000000000..39d36d8bb4
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/battery_data_jackpotlte_common.dtsi
@@ -0,0 +1,615 @@
+/*
+ * Jackpot Battery parameters device tree file for board IDs 04 and higher
+ *
+ * Copyright (C) 2017 Samsung Electronics, Inc.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+/ {
+	pinctrl@11CB0000 {
+		fuel_irq: fuel-irq {
+			samsung,pins = "gpa2-4";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <2>;
+			samsung,pin-drv = <0>;
+		};
+
+		if_pmic_irq: if-pmic-irq {
+			samsung,pins = "gpa2-2";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		usbpd_irq: usbpd-irq {
+			samsung,pins = "gpa2-3";
+			samsung,pin-function = <0x0f>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		i2c-gpio,delay-us = <5>;
+		status = "okay";
+		s2mu004-fuelgauge@3B {
+			compatible = "samsung,s2mu004-fuelgauge";
+			reg = <0x3B>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&fuel_irq>;
+			fuelgauge,fuel_int = <&gpa2 4 0>;
+			fuelgauge,fuel_alert_soc = <1>;
+			fuelgauge,fuel_alert_vol = <3300>;
+			fuelgauge,low_temp_limit = <100>;
+			fuelgauge,sw_vbat_l_recovery_vol = <3465>;
+			fuelgauge,capacity_max = <1000>;
+			fuelgauge,capacity_max_margin = <200>;
+			fuelgauge,capacity_min = <0>;
+			fuelgauge,capacity_calculation_type = <28>;
+			fuelgauge,capacity_full = <3000>;
+			fuelgauge,type_str = "SDI";
+			fuelgauge,model_type = <1>;
+			fuelgauge,fg_log_enable = <1>;
+		};
+
+		usbpd-s2mu004@3C {
+			compatible = "sec-usbpd,i2c";
+			reg = <0x3C>;
+			pinctrl-names = "default";
+			pinctrl-0     = <&usbpd_irq>;
+			usbpd,usbpd_int = <&gpa2 3 0>;
+		};
+	};
+
+	battery_params {
+			battery,battery_data =
+				<
+				/***** battery data for 4.35 *****/
+				/* battery,battery_table3 */
+				136 11 5 11 131 10 1 10 140 9
+				29 9 181 8 87 8 214 7 155 7
+				62 7 222 6 167 6 126 6 93 6
+				66 6 34 6 250 5 196 5 146 5
+				7 5 196 1 215 8 106 8 253 7
+				143 7 34 7 181 6 71 6 218 5
+				108 5 255 4 146 4 36 4 183 3
+				73 3 220 2 111 2 1 2 148 1
+				38 1 185 0 76 0 222 15
+
+				/* battery,battery_table4 */
+				58 58 58 58 59 59 59 60 60 59
+				59 59 60 60 61 63 64 67 71 78
+				90 179
+
+				/* battery,batcap */
+				0x38 0x2C 0x0E 0x0B /* [0x0E] [0x0F] [0x10] [0x11] */
+				/* battery,accum */
+				0x7 0xD7 /* [0x45] [0x44] */
+
+				/* battery,soc_arr_val */
+				11052 10518 9984 9450 8916 8382 7848 7312 6778 6245
+				5711 5177 4643 4109 3575 3041 2507 1971 1438 903
+				370 (-164)
+				/* battery,ocv_arr_val */
+				44414 43777 43139 42504 41935 41392 40884 40426 39797 39508
+				39052 38582 38315 38113 37953 37820 37665 37471 37207 36964
+				36286 32208
+
+				/***** battery data for 4.33 *****/
+				/* battery,battery_table3 */
+				136 11 5 11 131 10 1 10 140 9
+				29 9 181 8 87 8 214 7 155 7
+				62 7 222 6 167 6 126 6 93 6
+				65 6 34 6 250 5 196 5 146 5
+				7 5 196 1 238 8 127 8 17 8
+				162 7 52 7 197 6 87 6 232 5
+				122 5 11 5 157 4 47 4 192 3
+				82 3 227 2 117 2 6 2 152 1
+				41 1 187 0 76 0 222 15
+
+				/* battery,battery_table4 */
+				58 58 58 58 59 59 59 60 60 59
+				59 59 60 60 61 63 64 67 71 78
+				90 179
+
+				/* battery,batcap */
+				0x68 0x2E 0x9A 0x0B /* [0x0E] [0x0F] [0x10] [0x11] */
+				/* battery,accum */
+				0x7 0xD7 /* [0x45] [0x44] */
+
+				/* battery,soc_arr_val */
+				11160 10621 10082 9542 9003 8464 7924 7385 6846 6306
+				5767 5228 4688 4149 3609 3070 2531 1991 1452 913
+				373 (-166)
+				/* battery,ocv_arr_val */
+				44414 43777 43139 42505 41935 41393 40884 40425 39797 39508
+				39053 38582 38315 38113 37953 37819 37665 37471 37207 36964
+				36285 32208
+		
+				/***** battery data for 4.31 *****/
+				/* battery,battery_table3 */
+				136 11 5 11 131 10 1 10 140 9
+				29 9 181 8 87 8 214 7 155 7
+				62 7 222 6 167 6 126 6 93 6
+				65 6 34 6 250 5 196 5 146 5
+				7 5 196 1 7 9 152 8 40 8
+				184 7 73 7 217 6 106 6 250 5
+				138 5 27 5 171 4 60 4 204 3
+				93 3 237 2 126 2 14 2 158 1
+				47 1 191 0 80 0 224 15
+
+				/* battery,battery_table4 */
+				58 58 58 58 59 59 59 60 60 59
+				59 59 60 60 61 63 64 67 71 78
+				90 179
+
+				/* battery,batcap */
+				0xA0 0x2D 0x68 0x0B /* [0x0E] [0x0F] [0x10] [0x11] */
+				/* battery,accum */
+				0x7 0xD7 /* [0x45] [0x44] */
+
+				/* battery,soc_arr_val */
+				11285 10740 10195 9650 9106 8561 8016 7471 6926 6382
+				5837 5292 4747 4202 3658 3113 2567 2023 1477 934
+				388 (-156)
+				/* battery,ocv_arr_val */
+				44414 43777 43139 42505 41936 41393 40884 40425 39797 39508
+				39053 38582 38315 38113 37953 37819 37665 37471 37207 36964
+				36285 32208
+
+				/***** battery data for 4.29 *****/
+				/* battery,battery_table3 */
+				136 11 5 11 131 10 1 10 140 9
+				29 9 181 8 87 8 214 7 155 7
+				62 7 222 6 167 6 126 6 93 6
+				66 6 34 6 250 5 196 5 146 5
+				8 5 196 1 61 9 203 8 89 8
+				231 7 116 7 2 7 144 6 29 6
+				171 5 57 5 198 4 84 4 226 3
+				111 3 253 2 139 2 25 2 166 1
+				52 1 194 0 79 0 221 15
+
+				/* battery,battery_table4 */
+				58 58 58 58 59 59 59 60 60 59
+				59 59 60 60 61 63 64 67 71 78
+				90 179
+
+				/* battery,batcap */
+				0xD8 0x2C 0x36 0x0B /* [0x0E] [0x0F] [0x10] [0x11] */
+				/* battery,accum */
+				0x7 0xD7 /* [0x45] [0x44] */
+
+				/* battery,soc_arr_val */
+				11550 10992 10434 9876 9318 8759 8201 7643 7085 6526
+				5969 5411 4852 4294 3736 3178 2620 2062 1503 945
+				387 (-171)
+
+				/* battery,ocv_arr_val */
+				44416 43777 43137 42505 41935 41393 40884 40425 39797 39508
+				39053 38582 38315 38113 37953 37820 37665 37471 37207 36964
+				36287 32208
+
+				/***** battery data for 4.24 *****/
+				/* battery,battery_table3 */
+				136 11 5 11 131 10 1 10 140 9
+				29 9 181 8 87 8 214 7 155 7
+				62 7 222 6 167 6 126 6 93 6
+				65 6 34 6 250 5 196 5 146 5
+				7 5 196 1 174 9 54 9 190 8
+				71 8 207 7 87 7 223 6 104 6
+				240 5 120 5 0 5 137 4 17 4
+				153 3 33 3 170 2 50 2 186 1
+				66 1 203 0 83 0 219 15
+
+				/* battery,battery_table4 */
+				58 58 58 58 59 59 59 60 60 59
+				59 59 60 60 61 63 64 67 71 78
+				90 179
+
+				/* battery,batcap */
+				0xD0 0x2A 0xB4 0x0A/* [0x0E] [0x0F] [0x10] [0x11] */
+				/* batteryaccum */
+				0x7 0xD7 /* [0x45] [0x44] */
+
+				/* batterysoc_arr_val */
+				12100 11515 10930 10345 9761 9176 8591 8006 7422 6837
+				6252 5667 5083 4498 3913 3328 2744 2159 1574 989
+				405 (-180)
+
+				/* batteryocv_arr_val */
+				44414 43777 43139 42504 41935 41393 40884 40425 39797 39508
+				39052 38582 38315 38113 37953 37819 37665 37471 37207 36964
+				36285 32208
+				>;
+
+			battery,battery_table3 = <
+						136 11 5 11 131 10 1 10 140 9
+						29 9 181 8 87 8 214 7 155 7
+						62 7 222 6 167 6 126 6 93 6
+						66 6 34 6 250 5 196 5 146 5
+						7 5 196 1 215 8 106 8 253 7
+						143 7 34 7 181 6 71 6 218 5
+						108 5 255 4 146 4 36 4 183 3
+						73 3 220 2 111 2 1 2 148 1
+						38 1 185 0 76 0 222 15
+						>;
+
+			battery,battery_table4 = <
+						58 58 58 58 59 59 59 60 60 59
+						59 59 60 60 61 63 64 67 71 78
+						90 179
+						>;
+
+			battery,batcap = <0x38 0x2C 0x0E 0x0B>; /* [0x0E] [0x0F] [0x10] [0x11] */
+			battery,accum = <0x7 0xD7>; /* [0x45] [0x44] */
+
+			battery,soc_arr_val = <
+						11052 10518 9984 9450 8916 8382 7848 7312 6778 6245
+						5711 5177 4643 4109 3575 3041 2507 1971 1438 903
+						370 (-164)
+						>;
+			battery,ocv_arr_val = <
+						44414 43777 43139 42504 41935 41392 40884 40426 39797 39508
+						39052 38582 38315 38113 37953 37820 37665 37471 37207 36964
+						36286 32208
+						>;
+	};
+
+	pdic-manager {
+		/* sink */
+		pdic,max_power = <5000>;
+		pdic,op_power = <2500>;
+		pdic,max_voltage = <6000>;
+		pdic,max_current = <2000>;
+		pdic,min_current = <500>;
+
+		pdic,giveback = <0>;
+		pdic,usb_com_capable = <1>;
+		pdic,no_usb_suspend = <1>;
+
+		/* source */
+		source,max_voltage = <5000>;
+		source,min_voltage = <4000>;
+		source,max_power = <2500>;
+
+		/* sink cap */
+		sink,capable_max_voltage = <9000>;
+	};
+
+	battery {
+		status = "okay";
+		compatible = "samsung,sec-battery";
+
+		pinctrl-names = "default";
+
+		battery,vendor = "Battery";
+		battery,charger_name = "s2mu004-charger";
+		battery,fuelgauge_name = "s2mu004-fuelgauge";
+		battery,technology = <2>; /* POWER_SUPPLY_TECHNOLOGY_LION */
+		battery,fgsrc_switch_name = "s2mu004-fuelgauge"; /* Fuelgauge voltage source */
+
+		battery,batt_data_version = <2>;
+
+		battery,chip_vendor = "LSI";
+		battery,temp_adc_type = <1>; /* SEC_BATTERY_ADC_TYPE_AP */
+
+		battery,temp_check_type = <2>; /* SEC_BATTERY_TEMP_CHECK_TEMP */
+		battery,chg_temp_check = <1>;
+
+		battery,thermal_source = <2>; /* SEC_BATTERY_THERMAL_SOURCE_ADC */
+		battery,chg_thermal_source = <2>; /* SEC_CHARGER_THERMAL_SOURCE_FG */
+
+		battery,polling_time = <10 30 30 30 3600>;
+
+		battery,temp_table_adc = <
+					236 308 397 462 542 635 690 738 789 867
+					1007 1178 1281 1357 1432 1551 1762 1983 2216 2460
+					2594 2683 2763 2898 3098 3264 3410 3508 3636
+					>;
+		battery,temp_table_data = <
+					900 850 800 750 700 650 620 600 580 550
+					500 450 420 400 380 350 300 250 200 150
+					120 100 80 50 0 (-50) (-100) (-150) (-200)
+					>;
+
+		battery,inbat_voltage = <1>;
+
+		battery,inbat_voltage_table_adc = <2810 2793 2765 2737 2711 2683 2656 2631 2602 2573
+						2545 2515 2486 2459 2434 2408 2379 2353 2324 2294 2266>;
+		battery,inbat_voltage_table_data = <4380 4350 4300 4250 4200 4150 4100 4050 4000 3950
+						3900 3850 3800 3750 3700 3650 3600 3550 3500 3450 3400>;
+
+		battery,adc_check_count = <5>;
+
+		battery,cable_check_type = <4>; /* SEC_BATTERY_CABLE_CHECK_PSY */
+		battery,cable_source_type = <1>; /* SEC_BATTERY_CABLE_SOURCE_EXTERNAL */
+		battery,polling_type = <1>; /* SEC_BATTERY_MONITOR_ALARM */
+		battery,monitor_initial_count = <0>;
+
+		battery,pre_afc_input_current = <500>;
+
+		battery,battery_check_type = <0>; /* SEC_BATTERY_CHECK_NONE */
+		battery,check_count = <0>;
+		battery,check_adc_max = <1440>;
+		battery,check_adc_min = <0>;
+
+		battery,ovp_uvlo_check_type = <3>; /* SEC_BATTERY_OVP_UVLO_CHGPOLLING */
+
+		battery,temp_check_count = <1>;
+		battery,temp_highlimit_threshold_event = <800>;
+		battery,temp_highlimit_recovery_event = <750>;
+		battery,temp_high_threshold_event = <500>;
+		battery,temp_high_recovery_event = <450>;
+		battery,temp_low_threshold_event = <0>;
+		battery,temp_low_recovery_event = <50>;
+		battery,temp_highlimit_threshold_normal = <800>;
+		battery,temp_highlimit_recovery_normal = <750>;
+		battery,temp_high_threshold_normal = <500>;
+		battery,temp_high_recovery_normal = <450>;
+		battery,temp_low_threshold_normal = <0>;
+		battery,temp_low_recovery_normal = <50>;
+		battery,temp_highlimit_threshold_lpm = <800>;
+		battery,temp_highlimit_recovery_lpm = <750>;
+		battery,temp_high_threshold_lpm = <500>;
+		battery,temp_high_recovery_lpm = <450>;
+		battery,temp_low_threshold_lpm = <0>;
+		battery,temp_low_recovery_lpm = <50>;
+		battery,wpc_high_threshold_normal = <450>;
+		battery,wpc_high_recovery_normal = <400>;
+		battery,wpc_low_threshold_normal = <0>;
+		battery,wpc_low_recovery_normal = <50>;
+
+		battery,full_check_type = <2>; /* SEC_BATTERY_FULLCHARGED_FG_CURRENT */
+		battery,full_check_type_2nd = <2>; /* SEC_BATTERY_FULLCHARGED_FG_CURRENT */
+		battery,full_check_count = <1>;
+		battery,chg_gpio_full_check = <0>;
+		battery,chg_polarity_full_check = <1>;
+
+		battery,chg_heating_prevention_method = <1>; /* SEC_BATTERY_BY_CHANGING_CURRENT */
+		battery,chg_high_temp = <460>;
+		battery,chg_high_temp_recovery = <440>;
+		battery,chg_input_limit_current = <1000>;
+		battery,chg_charging_limit_current = <1250>; 
+
+		battery,wpc_high_temp = <410>;
+		battery,wpc_high_temp_recovery = <400>;
+		battery,wpc_charging_limit_current = <450>;
+		battery,wpc_lcd_on_high_temp = <430>;
+		battery,wpc_lcd_on_high_temp_rec = <300>;
+
+		battery,wpc_store_high_temp = <410>;
+		battery,wpc_store_high_temp_recovery = <400>;
+		battery,wpc_store_lcd_on_high_temp = <380>;
+		battery,wpc_store_lcd_on_high_temp_rec = <300>;
+
+		battery,sleep_mode_limit_current = <500>;
+		battery,wc_full_input_limit_current = <100>;
+		battery,wc_cv_current = <820>;
+		battery,wc_cv_pack_current = <630>;
+		battery,wc_hero_stand_cc_cv = <70>;
+		battery,wc_hero_stand_cv_current = <600>;
+		battery,wc_hero_stand_hv_cv_current = <450>;
+
+		battery,mix_high_temp = <420>;
+		battery,mix_high_chg_temp = <500>;
+		battery,mix_high_temp_recovery = <390>;
+
+		/*
+		 * SEC_BATTERY_FULL_CONDITION_SOC |
+		 * SEC_BATTERY_FULL_CONDITION_NOTIMEFULL |
+		 * SEC_BATTERY_FULL_CONDITION_VCELL
+		 */
+		battery,full_condition_type = <13>;
+		battery,full_condition_soc = <93>;
+		battery,full_condition_vcell = <4250>;
+
+		battery,recharge_check_count = <1>;
+		battery,recharge_condition_type = <4>; /* SEC_BATTERY_RECHARGE_CONDITION_VCELL */
+		battery,recharge_condition_soc = <98>;
+		battery,recharge_condition_vcell = <4280>;
+
+		battery,charging_total_time = <14400>;
+		battery,hv_charging_total_time = <10800>;
+		battery,normal_charging_total_time = <18000>;
+		battery,usb_charging_total_time = <36000>;
+		battery,recharging_total_time = <5400>;
+		battery,charging_reset_time = <0>;
+
+		battery,chg_float_voltage = <4350>;
+
+		battery,swelling_high_temp_block = <410>;
+		battery,swelling_high_temp_recov = <390>;
+		battery,swelling_wc_high_temp_recov = <390>;
+		battery,swelling_low_temp_block_1st = <150>;
+		battery,swelling_low_temp_recov_1st = <200>;
+		battery,swelling_low_temp_block_2nd = <50>;
+		battery,swelling_low_temp_recov_2nd = <100>;
+
+		battery,swelling_low_temp_current = <700>;	/* 0.3C */
+		battery,swelling_low_temp_topoff = <150>;	/* 0.05C */
+		battery,swelling_high_temp_current = <1050>;	/* 0.45C */
+		battery,swelling_high_temp_topoff = <150>;	/* 0.05C */
+		battery,swelling_wc_high_temp_current = <700>;	/* 0.3C */
+		battery,swelling_wc_low_temp_current = <700>;	/* 0.3C */
+
+		battery,swelling_drop_float_voltage = <4150>;
+		battery,swelling_high_rechg_voltage = <4000>;
+		battery,swelling_low_rechg_voltage = <4000>;
+
+		battery,siop_event_check_type = <1>;
+		battery,siop_call_cv_current = <330>;
+		battery,siop_call_cc_current = <330>;
+
+		battery,siop_input_limit_current = <1200>;
+		battery,siop_charging_limit_current = <1000>;
+		battery,siop_hv_input_limit_current = <700>;
+		battery,siop_hv_charging_limit_current = <1000>;
+
+		battery,siop_wireless_input_limit_current = <600>;
+		battery,siop_wireless_charging_limit_current = <700>;
+		battery,siop_hv_wireless_input_limit_current = <600>;
+		battery,siop_hv_wireless_charging_limit_current = <700>;
+		battery,siop_store_hv_wireless_input_limit_current = <450>;
+
+		battery,ttf_hv_charge_current = <2150>;
+		battery,ttf_hv_wireless_charge_current = <1050>;
+		battery,ttf_wireless_charge_current = <900>;
+
+		battery,pd_charging_charge_power = <15000>;
+		battery,max_charging_current = <2150>;
+		battery,battery_full_capacity = <3000>;
+
+		/* cycle, chg_float_voltage, recharge_condition_vcell, full_condition_vcell, full_condition_soc */
+		battery,age_data = <0 4350 4280 4250 93	/*4.35*/
+				200 4330 4260 4230 92	/*4.33*/
+				250 4310 4240 4210 91	/*4.31*/
+				300 4290 4220 4190 90	/*4.29*/
+				1000 4240 4170 4140 89	/*4.24*/
+				>;
+
+		battery,max_input_voltage = <9000>; /* mV */
+		battery,max_input_current = <3000>;  /* mA */
+
+		battery,prepare_afc_delay = <0>;
+
+		battery,enable_water_resistance;
+
+		battery,standard_curr = <2150>;
+		battery,expired_time = <10380>; /* 113 + 60 minutes */
+		battery,recharging_expired_time = <5400>;
+
+		battery,cisd_max_voltage_thr = <5000>; /* battery ovp detection voltage */
+
+		battery,cisd_alg_index = <7>;
+
+		io-channels = <&exynos_adc 1>, <&exynos_adc 2>;
+		io-channel-names = "adc-temp", "adc-in-bat";
+		#io-channel-cells = <5>;
+		io-channel-ranges;
+	};
+
+/* sec_battery_cable
+ *   0	UNKNOWN,
+ *   1	NONE,
+ *   2	PREPARE_TA,
+ *   3	TA,
+ *   4	USB,
+ *   5	USB_CDP,
+ *   6	9V_TA,
+ *   7	9V_ERR,
+ *   8	9V_UNKNOWN,
+ *   9	12V_TA,
+ *  10	WIRELESS,
+ *  11	HV_WIRELESS,
+ *  12	PMA_WIRELESS,
+ *  13	WIRELESS_PACK,
+ *  14	WIRELESS_PACK_TA,
+ *  15	WIRELESS_STAND,
+ *  16	WIRELESS_HV_STAND,
+ *  17	QC20,
+ *  18	QC30,
+ *  19	PDIC,
+ *  20	UARTOFF,
+ *  21	OTG,
+ *  22	LAN_HUB,
+ *  23	POWER_SHARING,
+ *  24	HMT_CONNECTED,
+ *  25	HMT_CHARGE,
+ *  26	HV_TA_CHG_LIMIT,
+ *  27	WIRELESS_VEHICLE,
+ *  28	WIRELESS_HV_VEHICLE,
+ *  29	PREPARE_WIRELESS_HV,
+ *  30	TIMEOUT,
+ *  31	CABLE_MAX,
+ */
+	cable-info {
+		default_input_current = <1800>;
+		default_charging_current = <2100>;
+		full_check_current_1st = <300>;
+		full_check_current_2nd = <150>;
+
+		current_group_1 {
+			cable_number = <1 4 19 21 22 23 30>;
+			input_current = <500>;
+			charging_current = <500>;
+		};
+
+		current_group_2 {
+			cable_number = <2 25>;
+			input_current = <1000>;
+			charging_current = <1000>;
+		};
+
+		current_group_3 {
+			cable_number = <5>;
+			input_current = <1500>;
+			charging_current = <1500>;
+		};
+
+		current_group_4 {
+			cable_number = <6 7 8>;
+			input_current = <1650>;
+			charging_current = <2150>;
+		};
+
+		current_group_5 {
+			cable_number = <9>;
+			input_current = <1650>;
+			charging_current = <2150>;
+		};
+
+		current_group_6 {
+			cable_number = <10 12 14 15 27>;
+			input_current = <900>;
+			charging_current = <1200>;
+		};
+
+		current_group_7 {
+			cable_number = <13>;
+			input_current = <700>;
+			charging_current = <1200>;
+		};
+
+		current_group_8 {
+			cable_number = <24>;
+			input_current = <1000>;
+			charging_current = <450>;
+		};
+
+		current_group_9 {
+			cable_number = <26>;
+			input_current = <2000>;
+			charging_current = <1800>;
+		};
+
+		current_group_10 {
+			cable_number = <11 16 28>;
+			input_current = <650>;
+			charging_current = <1200>;
+		};
+
+		current_group_11 {
+			cable_number = <29>;
+			input_current = <500>;
+			charging_current = <1200>;
+		};
+	};
+
+	s2mu004-charger {
+		status = "disable";
+		compatible = "samsung,s2mu004-charger";
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_03.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_03.dts
new file mode 100755
index 0000000000..f923a36a52
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_03.dts
@@ -0,0 +1,173 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_03.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev04 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <3>;
+	model_info-hw_rev_end = <3>;
+	compatible = "samsung, JACKPOTLTE CAN rev04", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
+		gpio_reset = <&gpq0 1 0x1>; /* sensor reset - jackpot hw_rev = 000'b ~ 011'b */
+	};
+
+	/* sec-wf-thermistor */
+	sec_thermistor@6 {
+		status = "disabled";
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_04.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_04.dts
new file mode 100755
index 0000000000..d6ec66d9e4
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_04.dts
@@ -0,0 +1,164 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_04.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <4>;
+	model_info-hw_rev_end = <4>;
+	compatible = "samsung, JACKPOTLTE CAN rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_05.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_05.dts
new file mode 100755
index 0000000000..64fb9547c2
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_05.dts
@@ -0,0 +1,151 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_05.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <5>;
+	model_info-hw_rev_end = <5>;
+	compatible = "samsung, JACKPOTLTE CAN rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_06.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_06.dts
new file mode 100755
index 0000000000..d16c444d94
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_06.dts
@@ -0,0 +1,168 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_06.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev06 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <6>;
+	model_info-hw_rev_end = <6>;
+	compatible = "samsung, JACKPOTLTE CAN rev06", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	leds_ktd2692 {
+		compatible = "ktd2692";
+		flash_control = <&gpg1 2 0x1>;
+		max_current = <1360>; /* (IMax) */
+		flash_current = <1200>; /* (n/16)xIMax (1<=n<=16) */
+		movie_current = <175>; /* (n/16)*IMax/3 (1<=n<=16) */
+		factory_current = <175>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_current = <75>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_table_enable = <1>;
+		torch_table = <1 2 2 3 3 4 4 4 5 5>;
+		status = "okay";
+		pinctrl-names ="default","host","is";
+		pinctrl-0 = <&fimc_is_flash_is>;
+		pinctrl-1 = <&fimc_is_flash_host>;
+		pinctrl-2 = <&fimc_is_flash_is>;
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_07.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_07.dts
new file mode 100755
index 0000000000..efd56b5a8a
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_07.dts
@@ -0,0 +1,151 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_07.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev07 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <7>;
+	model_info-hw_rev_end = <255>;
+	compatible = "samsung, JACKPOTLTE CAN rev07", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_03.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_03.dtsi
new file mode 100755
index 0000000000..d467960c85
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_03.dtsi
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* FM_LNA_EN */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_04.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_04.dtsi
new file mode 100755
index 0000000000..67c7d2da79
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_04.dtsi
@@ -0,0 +1,172 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* FM_LNA_EN */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_05.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_05.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_05.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_06.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_06.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_06.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_07.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_07.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_can_open_gpio_07.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_common.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_common.dtsi
new file mode 100755
index 0000000000..c16bc02f8b
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_common.dtsi
@@ -0,0 +1,2381 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos7885-rmem.dtsi"
+#include "exynos7885.dtsi"
+#include "exynos7885-display-lcd.dtsi"
+#include "modem-s327ap-sipc-pdata.dtsi"
+#include "battery_data_jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_motor.dtsi"
+#include "exynos7885-mali.dtsi"
+/ {
+	model = "Samsung Universal7885 board based on EXYNOS7885";
+	compatible = "samsung,exynos7885", "samsung,Universal7885";
+
+	ect {
+		parameter_address = <0x90000000>;
+		parameter_size = <0x19000>;
+	};
+
+	memory@80000000 {
+		device_type = "memory";
+		reg = <0x0 0x80000000 0x3DA00000>;
+	};
+
+	memory@C0000000 {
+		device_type = "memory";
+		reg = <0x0 0xC0000000 0x40000000>;
+	};
+
+	memory@880000000 {
+		device_type = "memory";
+		reg = <0x00000008 0x80000000 0x40000000>;
+	};
+
+	chosen {
+		bootargs = "console=ram root=/dev/ram0 clk_ignore_unused androidboot.hardware=samsungexynos7885 androidboot.selinux=permissive ess_setup=0x86000000 androidboot.debug_level=0x4948";
+		linux,initrd-start = <0x84000000>;
+		linux,initrd-end = <0x840FFFFF>;
+	};
+
+	fixed-rate-clocks {
+		oscclk {
+			compatible = "samsung,exynos7885-oscclk";
+			clock-frequency = <26000000>;
+		};
+	};
+
+	firmware {
+		android {
+			compatible = "android,firmware";
+			fstab {
+				compatible = "android,fstab";
+				system {
+					compatible = "android,system";
+					dev = "/dev/block/platform/13500000.dwmmc0/by-name/SYSTEM";
+					type = "ext4";
+					mnt_flags = "ro";
+					fsmgr_flags = "wait";
+				};
+				vendor {
+					compatible = "android,vendor";
+					dev = "/dev/block/platform/13500000.dwmmc0/by-name/VENDOR";
+					type = "ext4";
+					mnt_flags = "ro";
+					fsmgr_flags = "wait";
+				};
+			};
+		};
+	};
+
+	/* USI MODE SETTINGS
+
+	usi_mode = "hsi2c0" or "hsi2c1" or "spi" or "uart"
+	or "hsi2c0_hsi2c1" or "uart_hsi2c1"
+	*/
+	usi_0: usi@10032000 {
+		usi_mode = "spi";
+		status = "okay";
+	};
+
+	usi_1: usi@10032004 {
+		usi_mode = "spi";
+		status = "okay";
+	};
+
+	usi_2: usi@10032008 {
+		usi_mode = "spi";
+		status = "okay";
+	};
+
+	serial_1: uart@13810000 {
+		status = "disabled";
+	};
+
+	fm@14840000 {
+		num-volume-level = <16>;
+		val-vol-level = <0 11 16 23 32 45 64
+				 90 128 181 256 362
+				 512 724 1024 1400>;
+	};
+
+	pinctrl@11CB0000 {
+		pmic_irq: pmic-irq {
+			samsung,pins = "gpa2-0";
+			samsung,pin-pud = <3>;
+			samsung,pin-drv = <3>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		/* Warm reset information from AP */
+		pm_wrsti: pm-wrsti {
+			samsung,pins = "gpg1-1";
+			samsung,pin-con-pdn = <3>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		/* SPI_FP */
+		spi1_bus_inactive: spi1-bus-inactive {
+			samsung,pins = "gpp6-0", "gpp6-1", "gpp6-3";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_miso_inactive: spi1-miso-inactive {
+			samsung,pins = "gpp6-2";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_clk: spi1-clk {
+			samsung,pins = "gpp6-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_cs: spi1-cs {
+			samsung,pins = "gpp6-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <3>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_miso: spi1-miso {
+			samsung,pins = "gpp6-2";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_mosi: spi1-mosi {
+			samsung,pins = "gpp6-3";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+	};
+
+	but_zones: but_zones {
+		#list-but-cells = <3>;
+	};
+
+	speedy@11CE0000 {
+		status = "okay";
+		audio_codec_cod3035x: cod3035x@03 {
+			compatible = "codec,cod3035x";
+			reg = <0x03>;
+			i2c-speedy-address;
+			vdd-supply = <&l36_reg>;
+			pinctrl-names = "default";
+			mic-bias1-voltage = <3>;
+			mic-bias2-voltage = <1>;
+			mic-bias-ldo-voltage = <3>;
+			use-btn-adc-mode;
+			use-det-gdet-adc-mode = <1>;
+			jack-imp-tuning = <7>;
+			io-channels = <&exynos_adc 3>,<&exynos_adc 7>;
+			io-channel-names = "adc-ear","adc-gdet";
+			#io-channel-cells = <1>;
+			io-channel-ranges;
+			but-zones-list = <&but_zones 226 0 376>,
+							 <&but_zones 582 377 447>,
+							 <&but_zones 115 448 627>,
+							 <&but_zones 114 628 1161>;
+			mic-adc-range = <1404>;
+			btn-release-value = <1404>;
+		};
+
+		s2mpu08mfd@00 {
+			compatible = "samsung,s2mpu08mfd";
+			acpm-ipc-channel = <2>;
+			i2c-speedy-address;
+			s2mpu08,wakeup = "enabled";
+			s2mpu08,irq-gpio = <&gpa2 0 0>;
+			reg = <0x00>;
+			interrupts = <2 0 0>;
+			interrupt-parent = <&gpa2>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&pmic_irq &pm_wrsti>;
+			/* RTC: wtsr/smpl */
+			wtsr_en = "enabled"; /* enable */
+			smpl_en = "enabled"; /* enable */
+			wtsr_timer_val = <3>;	/* 1000ms */
+			smpl_timer_val = <0>;	/* 100ms */
+			check_jigon = <0>; /* do not check jigon */
+			/* RTC: If it's first boot, reset rtc to 1/1/2017 12:00:00(Sun) */
+			init_time,sec = <0>;
+			init_time,min = <0>;
+			init_time,hour = <12>;
+			init_time,mday = <1>;
+			init_time,mon = <0>;
+			init_time,year = <117>;
+			init_time,wday = <0>;
+
+			samsung,codec-interrupt = <&audio_codec_cod3035x>;
+
+			regulators {
+				b1_reg: BUCK1 {
+					regulator-name = "vdd_mif";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1100000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <2>;
+				};
+
+				b2_reg: BUCK2 {
+					regulator-name = "vdd_cpucl0";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				b3_reg: BUCK3 {
+					regulator-name = "vdd_cpucl1_2";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				b4_reg: BUCK4 {
+					regulator-name = "vdd_int";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1200000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <2>;
+				};
+
+				b5_reg: BUCK5 {
+					regulator-name = "vdd_g3d";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				b6_reg: BUCK6 {
+					regulator-name = "vdd2_mem";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				b7_reg: BUCK7 {
+					regulator-name = "vdd_lldo";
+					regulator-min-microvolt = <1200000>;
+					regulator-max-microvolt = <1500000>;
+					regulator-always-on;
+					regulator-boot-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				b8_reg: BUCK8 {
+					regulator-name = "vdd_mldo";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <2100000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l1_reg: LDO1 {
+					regulator-name = "vdd_ldo1";
+					regulator-min-microvolt = <700000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l2_reg: LDO2 {
+					regulator-name = "vqmmc";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3375000>;
+					regulator-ramp-delay = <12000>;
+				};
+
+				l3_reg: LDO3 {
+					regulator-name = "vdd_ldo3";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l4_reg: LDO4 {
+					regulator-name = "vdd_ldo4";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l5_reg: LDO5 {
+					regulator-name = "vdd_ldo5";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1350000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l6_reg: LDO6 {
+					regulator-name = "vdd_ldo6";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1350000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l7_reg: LDO7 {
+					regulator-name = "vdd_ldo7";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l8_reg: LDO8 {
+					regulator-name = "vdd_ldo8";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l9_reg: LDO9 {
+					regulator-name = "vdd_ldo9";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l10_reg: LDO10 {
+					regulator-name = "vdd_ldo10";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l11_reg: LDO11 {
+					regulator-name = "vdd_ldo11";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l12_reg: LDO12 {
+					regulator-name = "vdd_ldo12";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1350000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l13_reg: LDO13 {
+					regulator-name = "vdd_ldo13";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l14_reg: LDO14 {
+					regulator-name = "vdd_ldo14";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3375000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l33_reg: LDO33 {
+					regulator-name = "vdd_ldo33";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l34_reg: LDO34 {
+					regulator-name = "vdd_ldo34";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3375000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l35_reg: LDO35 {
+					regulator-name = "vmmc";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3000000>;
+					regulator-ramp-delay = <12000>;
+				};
+
+				l36_reg: LDO36 {
+					regulator-name = "vdd_ldo36";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l37_reg: LDO37 {
+					regulator-name = "vdd_ldo37";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3375000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+			};
+		};
+	};
+
+	sec_thermistor@0 {
+		compatible = "samsung,sec-ap-thermistor";
+		status = "okay";
+
+		adc_array = <235 308 378 395 467 568 603 648 698 764
+				908 1066 1170 1242 1327 1430 1633 1830 2061 2282
+				2409 2500 2584 2697 2880 3069 3213 3337 3447>;
+		temp_array = <900 850 800 750 700 650 620 600 580 550
+				500 450 420 400 380 350 300 250 200 150
+				120 100 80 50 0 (-50) (-100) (-150) (-200)>;
+		io-channels = <&exynos_adc 0>;
+		io-channel-names = "adc-ap-temp";
+		io-channel-ranges;
+	};
+
+	sec_thermistor@6 {
+		compatible = "samsung,sec-wf-thermistor";
+		status = "okay";
+
+		adc_array = <235 308 378 395 467 568 603 648 698 764
+				908 1066 1170 1242 1327 1430 1633 1830 2061 2282
+				2409 2500 2584 2697 2880 3069 3213 3337 3447>;
+		temp_array = <900 850 800 750 700 650 620 600 580 550
+				500 450 420 400 380 350 300 250 200 150
+				120 100 80 50 0 (-50) (-100) (-150) (-200)>;
+		io-channels = <&exynos_adc 6>;
+		io-channel-names = "adc-wf-temp";
+		io-channel-ranges;
+	};
+
+	exynos_rgt {
+		compatible = "samsung,exynos-rgt";
+	};
+
+	serial_2: uart@13820000 {
+		status = "okay";
+	};
+
+	pinctrl@11CB0000 {
+		dwmmc2_cd_ext_irq: dwmmc2_cd_ext_irq {
+			samsung,pins = "gpa0-7";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <3>;
+		};
+	};
+
+	dwmmc0@13500000 {
+		status = "okay";
+		num-slots = <1>;
+		broken-cd;
+		fixed_voltage;
+		supports-highspeed;
+		mmc-ddr-1_8v;
+		mmc-hs200-1_8v;
+		mmc-hs400-1_8v;
+		supports-8bit;
+		supports-cmd23;
+		supports-erase;
+		supports-hs400-enhanced-strobe;
+		card-init-hwacg-ctrl;
+		support-cmdq;
+		qos-dvfs-level = <100000>;
+		fifo-depth = <0x40>;
+		non-removable;
+		desc-size = <4>;
+		card-detect-delay = <200>;
+		samsung,dw-mshc-ciu-div = <3>;
+		samsung,dw-mshc-txdt-crc-timer-fastlimit = <0x13>;
+		samsung,dw-mshc-txdt-crc-timer-initval = <0x15>;
+		samsung,dw-mshc-hs400-delay-line = <0x60>;
+		samsung,dw-mshc-sdr-timing = <3 0 4 0>;
+		samsung,dw-mshc-ddr-timing = <3 0 4 2>;
+		samsung,dw-mshc-hs200-timing = <3 0 3 0>;
+		samsung,dw-mshc-hs400-timing = <1 0 2 0>;
+		samsung,dw-mshc-hs400-ulp-timing = <3 0 2 0>;
+
+		num-ref-clks = <12>;
+		ciu_clkin = <25 50 50 25 50 100 200 50 50 200 200 200>;
+
+		/* Swapping clock drive strength */
+		clk-drive-number = <4>;
+		pinctrl-names = "default",
+			"fast-slew-rate-1x",
+			"fast-slew-rate-2x",
+			"fast-slew-rate-3x",
+			"fast-slew-rate-4x";
+		pinctrl-0 = <&sd0_clk &sd0_cmd &sd0_rdqs &sd0_bus1 &sd0_bus4 &sd0_bus8>;
+		pinctrl-1 = <&sd0_clk_fast_slew_rate_1x>;
+		pinctrl-2 = <&sd0_clk_fast_slew_rate_2x>;
+		pinctrl-3 = <&sd0_clk_fast_slew_rate_3x>;
+		pinctrl-4 = <&sd0_clk_fast_slew_rate_4x>;
+		slot@0 {
+			reg = <0>;
+			bus-width = <8>;
+		};
+
+	};
+
+	dwmmc1@13510000 {
+		status = "disabled";
+		num-slots = <1>;
+		channel = <1>;
+		fixed_voltage;
+		enable-cclk-on-suspend;
+		caps-control;
+		supports-highspeed;
+		supports-4bit;
+		keep-power-in-suspend;
+		pm-ignore-notify;
+		card-detect-type-external;
+		use-broken-voltage;
+		fifo-depth = <0x40>;
+		card-detect-delay = <200>;
+		qos-dvfs-level = <100000>;
+		data-timeout = <200>;
+		hto-timeout = <80>;
+		samsung,dw-mshc-ciu-div = <3>;
+		samsung,dw-mshc-sdr-timing = <3 0 2 0>;
+		samsung,dw-mshc-ddr-timing = <3 0 2 1>;
+		samsung,dw-mshc-sdr50-timing = <3 0 4 2>;
+		samsung,dw-mshc-sdr104-timing = <3 0 3 0>;
+
+		num-ref-clks = <9>;
+		ciu_clkin = <25 50 50 25 50 100 200 50 50>;
+
+		clk-drive-number = <4>;
+		pinctrl-names = "default",
+			"fast-slew-rate-1x",
+			"fast-slew-rate-2x",
+			"fast-slew-rate-3x",
+			"fast-slew-rate-4x";
+		pinctrl-0 = <&sd1_clk &sd1_cmd &sd1_bus1 &sd1_bus4>;
+		pinctrl-1 = <&sd1_clk_fast_slew_rate_1x>;
+		pinctrl-2 = <&sd1_clk_fast_slew_rate_2x>;
+		pinctrl-3 = <&sd1_clk_fast_slew_rate_3x>;
+		pinctrl-4 = <&sd1_clk_fast_slew_rate_4x>;
+		slot@0 {
+			reg = <0>;
+			bus-width = <4>;
+		};
+	};
+
+	tsp_ldo_en {
+		compatible = "regulator-fixed";
+		regulator-name = "tsp_ldo_en";
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		gpio = <&gpg3 0 0>;
+		enable-active-high;
+		regulator-boot-on;
+	};
+
+	i2c_4:i2c@13870000 {
+		status = "okay";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		samsung,i2c-sda-delay = <100>;
+		samsung,i2c-max-bus-freq = <400000>;
+		samsung,stop-after-trans;	/* LSI IC ONLY */
+		touchscreen@48 {
+			compatible = "sec,sec_ts";
+			reg = <0x48>;
+			pinctrl-names = "on_state", "off_state";
+			pinctrl-0 = <&attn_irq>;
+			pinctrl-1 = <&attn_input>;
+			sec,tsp-id_gpio = <&gpg3 6 0>;
+			sec,irq_gpio = <&gpa0 0 0>;
+			sec,irq_type = <8200>;
+			sec,num_lines = <30 15>;        /* rx tx */
+			sec,max_coords = <4096 4096>;   /* x y */
+			sec,use_ic_resolution;
+			sec,mis_cal_check = <1>;
+			sec,use_gpio_ldo;
+			sec,regulator_avdd = "tsp_ldo_en";
+			sec,regulator_boot_on;
+			sec,grip_area = <512>;
+			sec,bringup = <3>;
+			sec,project_name = "JACKPOT1", "A530";
+			sec,firmware_name = "tsp_sec/y661_a5y18.fw", "tsp_sec/y661_a5y18.fw";
+			sec,tclm_level = <2>;
+			sec,afe_base = <0x05>;
+			status = "okay";
+		};
+	};
+
+	pinctrl@11CB0000 {
+		attn_irq: attn-irq {
+			samsung,pins = "gpa0-0";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+		attn_input: attn-input {
+			samsung,pins = "gpa0-0";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+		};
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+		cfg_input: cfg-input {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		fimc_is_flash_host: fimc-is-flash-host {
+			samsung,pins = "gpg1-2";
+			samsung,pin-function = <1>; /* 0: input, 1:output*/
+			samsung,pin-pud = <0>; /* 0: NP, 1: PD, 2: reserved 3:PU */
+			samsung,pin-drv = <0>;
+		};
+		fimc_is_flash_is: fimc-is-flash-is {
+			samsung,pins = "gpg1-2";
+			samsung,pin-function = <0>; /* 0: input, 1:output*/
+			samsung,pin-pud = <1>; /* 0: NP, 1: PD, 2: reserved 3:PU */
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		grip_ldo_en: grip-ldo-en {
+			samsung,pins = "gpg2-5";
+			samsung,pin-function = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-con-pdn =<3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		/* touchkey i2c*/
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+		cfg_gpio: cfg_gpio {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		status = "okay";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		samsung,i2c-sda-delay = <100>;
+		samsung,i2c-max-bus-freq = <400000>;
+		pinctrl-names = "default","on_i2c","off_i2c";
+		pinctrl-0 = <&cfg_i2c>;
+		pinctrl-1 = <&cfg_i2c>;
+		pinctrl-2 = <&cfg_gpio>;
+		abov@20 {
+			status = "okay";
+			compatible = "abov,a96t3x6";
+			pinctrl-names = "on_irq", "off_irq";
+			pinctrl-0 = <&cfg_irq &grip_ldo_en>;
+			pinctrl-1 = <&cfg_input>;
+			reg = <0x20>;
+			abov,sda-gpio = <&gpp4 2 0>;
+			abov,scl-gpio = <&gpp4 3 0>;
+			abov,irq-gpio = <&gpa2 7 0>;
+			abov,tkey_en-gpio = <&gpg2 5 0>;
+			abov,firmware_name = "abov/a96t326_a5y18.fw";
+			abov,firmup_cmd = <0x32>;
+			abov,ta-notifier;
+			abov,not_support_key;
+			abov,bringup = <0>;
+		};
+	};
+
+	dwmmc2@13550000 {
+		status = "okay";
+		num-slots = <1>;
+		supports-4bit;
+		supports-cmd23;
+		supports-erase;
+		supports-highspeed;
+		sd-uhs-sdr50;
+		sd-uhs-sdr104;
+		card-detect-gpio;
+		card-no-pre-powerup;
+		bypass-for-allpass;
+		card-init-hwacg-ctrl;
+		skip-init-mmc-scan;
+		qos-dvfs-level = <100000>;
+		qos-sd3-dvfs-level = <267000>;
+		fifo-depth = <0x40>;
+		desc-size = <4>;
+		card-detect-delay = <200>;
+		data-timeout = <200>;
+		hto-timeout = <80>;
+		samsung,dw-mshc-ciu-div = <3>;
+		clock-frequency = <800000000>;
+		samsung,dw-mshc-sdr-timing = <3 0 2 0>;
+		samsung,dw-mshc-ddr-timing = <3 0 2 1>;
+		samsung,dw-mshc-sdr50-timing = <3 0 4 2>;
+		samsung,dw-mshc-sdr104-timing = <3 0 3 0>;
+
+		num-ref-clks = <9>;
+		ciu_clkin = <25 50 50 25 50 100 200 50 50>;
+
+		/* Swapping clock drive strength */
+		clk-drive-number = <4>;
+		pinctrl-names = "default",
+			"fast-slew-rate-1x",
+			"fast-slew-rate-2x",
+			"fast-slew-rate-3x",
+			"fast-slew-rate-4x";
+		pinctrl-0 = <&sd2_clk &sd2_cmd &sd2_bus1 &sd2_bus4 &dwmmc2_cd_ext_irq>;
+		pinctrl-1 = <&sd2_clk_fast_slew_rate_1x>;
+		pinctrl-2 = <&sd2_clk_fast_slew_rate_2x>;
+		pinctrl-3 = <&sd2_clk_fast_slew_rate_3x>;
+		pinctrl-4 = <&sd2_clk_fast_slew_rate_4x>;
+
+		card-detect = <&gpa0 7 0xf>;
+		sec-sd-slot-type = <2>; /* Hybrid Tray SD slot */
+
+		slot@0 {
+			reg = <0>;
+			bus-width = <4>;
+			disable-wp;
+		};
+
+	};
+
+	pinctrl@11CB0000 {
+		key_power: key-power {
+			samsung,pins = "gpa1-7";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		key_voldown: key-voldown {
+			samsung,pins = "gpa1-6";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		key_volup: key-volup {
+			samsung,pins = "gpa1-5";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		hall_irq: hall-irq {
+			samsung,pins = "gpa0-3";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		certify_hall_irq: certify-hall-irq {
+			samsung,pins = "gpa0-4";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	flip_cover {
+		status = "okay";
+		compatible = "flip_cover";
+		pinctrl-names = "default";
+		pinctrl-0 = <&hall_irq &certify_hall_irq>;
+		hall {
+			name = "hall";
+			event = <0x15>;
+			gpios = <&gpa0 3 0>;
+		};
+		certify_hall {
+			name = "certify_hall";
+			event = <0x1b>;
+			gpios = <&gpa0 4 0xf>;
+		};
+	};
+
+	gpio_keys {
+		status = "okay";
+		compatible = "gpio-keys";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&key_voldown &key_volup &key_power>;
+		button@1 {
+			label = "gpio-keys: KEY_VOLUMEDOWN";
+			interrupts = <6 0 0>;
+			interrupt-parent = <&gpa1>;
+			linux,code = <114>;
+			gpios = <&gpa1 6 0xf>;
+		};
+		button@2 {
+			label = "gpio-keys: KEY_VOLUMEUP";
+			interrupts = <5 0 0>;
+			interrupt-parent = <&gpa1>;
+			linux,code = <115>;
+			gpios = <&gpa1 5 0xf>;
+		};
+		button@3 {
+			label = "gpio-keys: KEY_POWER";
+			interrupts = <7 0 0>;
+			interrupt-parent = <&gpa1>;
+			linux,code = <116>;
+			gpios = <&gpa1 7 0xf>;
+			gpio-key,wakeup = <1>;
+		};
+
+	};
+
+	sec_abc {
+		compatible = "samsung,sec_abc";
+		status = "okay";
+
+		gpu {
+			gpu,label="GPU fault";
+			gpu,threshold_count=<20>;
+			gpu,threshold_time=<1200>;
+		};
+		aicl {
+			aicl,label="battery aicl";
+			aicl,threshold_count=<5>;
+			aicl,threshold_time=<300>;
+		};
+	};
+
+	dsim_0: dsim@0x14870000 {
+		lcd_info = <&s6e3fa7>;
+		decon_board = <&decon_board>;
+	};
+
+	decon_board: decon_board {
+		gpio_ldo_3p0 = <&gpg2 7 0x1>;
+		gpio_vddr_en = <&gpg2 6 0x1>;
+		gpio_lcd_rst = <&gpg1 7 0x1>;
+
+		dsim_set_panel_power_enable {
+			type =
+			"gpio,high",	"gpio_ldo_3p0",
+			"delay,usleep",	"1000 1100",
+			"gpio,high",	"gpio_vddr_en",
+			"delay,usleep",	"10000 11000";
+		};
+		dsim_set_panel_power_disable {
+			type =
+			"gpio,low",	"gpio_lcd_rst",
+			"delay,usleep",	"10000 11000",
+			"gpio,low",	"gpio_vddr_en",
+			"delay,usleep",	"1000 1100",
+			"gpio,low",	"gpio_ldo_3p0",
+			"delay,usleep",	"5000 6000";
+		};
+		dsim_reset_panel {
+			type =
+			"delay,usleep",	"1000 1100",
+			"gpio,high",	"gpio_lcd_rst",
+			"delay,usleep",	"5000 6000",
+			"gpio,low",	"gpio_lcd_rst",
+			"delay,usleep",	"5000 6000",
+			"gpio,high",	"gpio_lcd_rst",
+			"delay,usleep",	"10000 11000";
+		};
+	};
+
+	decon_f: decon_f@0x14860000 {
+		gpio_det = <&gpa0 1 0x1>;
+		gpio_pcd = <&gpa0 6 0x1>;
+		gpio_err = <&gpa1 1 0x1>;
+	};
+
+	usb@13600000 {
+		status = "okay";
+		dwc3 {
+			dr_mode = "otg";
+			maximum-speed = "high-speed";
+			snps,quirk-frame-length-adjustment = <0x20>;
+		};
+	};
+
+	phy@135D0000 {
+		status = "okay";
+		hs_tune_param = <&usb_hs_tune>;
+	};
+
+	usb_hs_tune:hs_tune {
+		hs_tune_cnt = <12>;
+
+		/* value = <device host> */
+		hs_tune1 {
+			tune_name = "tx_vref";
+			tune_value = <0xd 0x1>;
+		};
+
+		hs_tune2 {
+			tune_name = "tx_pre_emp";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune3 {
+			tune_name = "tx_pre_emp_plus";
+			tune_value = <0x0 0x0>;
+		};
+
+		hs_tune4 {
+			tune_name = "tx_res";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune5 {
+			tune_name = "tx_rise";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune6 {
+			tune_name = "tx_hsxv";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune7 {
+			tune_name = "tx_fsls";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune8 {
+			tune_name = "rx_sqrx";
+			tune_value = <0x7 0x7>;
+		};
+
+		hs_tune9 {
+			tune_name = "compdis";
+			tune_value = <0x7 0x7>;
+		};
+
+		hs_tune10 {
+			tune_name = "otg";
+			tune_value = <0x2 0x2>;
+		};
+
+		hs_tune11 {
+		/* true : 1, false: 0 */
+		/* <enable_user_imp user_imp_value> */
+			tune_name = "enable_user_imp";
+			tune_value = <0x0 0x0>;
+		};
+
+		hs_tune12 {
+		/* PHY clk : 1 , FREE clk : 0 */
+			tune_name = "is_phyclock";
+			tune_value = <0x1 0x1>;
+		};
+	};
+
+	mailbox_cp: mcu_ipc@12080000 {
+		compatible = "samsung,exynos-shd-ipc-mailbox";
+		reg = <0x0 0x12080000 0x180>;
+		mcu,name = "mcu_ipc_cp";
+		mcu,id = <0>;
+		interrupts = <0 55 0 >; /* MAILBOX_CP_TO_AP SPI Number */
+	};
+
+	mailbox_gnss: mcu_ipc@120D0000 {
+		compatible = "samsung,exynos-shd-ipc-mailbox";
+		reg = <0x0 0x120D0000 180>;
+		mcu,name = "mcu_ipc_gnss";
+		mcu,id = <1>;
+		interrupts = <GIC_SPI 56 IRQ_TYPE_NONE>;
+	};
+
+	gnss_pdata {
+		status = "okay";
+
+		compatible = "samsung,gnss_shdmem_if";
+		shmem,name = "KEPLER";
+		shmem,device_node_name = "gnss_ipc";
+
+		/* ACTIVE WATCHDOG WAKEUP */
+		interrupts = <GIC_SPI 20 IRQ_TYPE_NONE>,
+			     <GIC_SPI 165 IRQ_TYPE_NONE>,
+			     <GIC_SPI 164 IRQ_TYPE_NONE>;
+		interrupt-names = "ACTIVE", "WATCHDOG", "WAKEUP";
+
+		memory-region = <&gnss_reserved>;
+		mbox_info = <&mailbox_gnss>;
+
+		mbx,int_ap2gnss_bcmd = <0>;
+		mbx,int_ap2gnss_req_fault_info = <1>;
+		mbx,int_ap2gnss_ipc_msg = <2>;
+		mbx,int_ap2gnss_ack_wake_set = <3>;
+		mbx,int_ap2gnss_ack_wake_clr = <4>;
+
+		mbx,irq_gnss2ap_bcmd = <0>;
+		mbx,irq_gnss2ap_rsp_fault_info = <1>;
+		mbx,irq_gnss2ap_ipc_msg = <2>;
+		mbx,irq_gnss2ap_req_wake_clr = <4>;
+
+		mbx,reg_bcmd_ctrl = <0>, <1>, <2>, <3>;
+
+		reg_rx_ipc_msg = <1 5>;
+		reg_tx_ipc_msg = <1 4>;
+		reg_rx_head = <1 3>;
+		reg_rx_tail = <1 2>;
+		reg_tx_head = <1 1>;
+		reg_tx_tail = <1 0>;
+		fault_info = <1 0x200000 0x180000>;
+
+		shmem,ipc_offset = <0x380000>;
+		shmem,ipc_size = <0x80000>;
+		shmem,ipc_reg_cnt = <32>;
+
+		/* Use the following value when can't boot with mailbox */
+		shmem,boot_without_mbox = <1>; /* Default : 0 */
+	};
+
+	usb_notifier {
+		compatible = "samsung,usb-notifier";
+		udc = <&udc>;
+	};
+
+	i2c@13840000{
+		status = "okay";
+		s2mu004@3D {
+			status = "okay";
+			compatible = "samsung,s2mu004mfd";
+			reg = <0x3D>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&if_pmic_irq>;
+			s2mu004,irq-gpio = <&gpa2 2 1>;
+			s2mu004,wakeup;
+		};
+	};
+
+	fimc_is@14440000 {
+		pinctrl-names = "default","release";
+		pinctrl-0 = <&fimc_is_mclk0_out &fimc_is_mclk1_out &fimc_is_mclk2_out>;
+		pinctrl-1 = <>;
+
+		vender {
+			rear_sensor_id = <58>; /* SENSOR_NAME_S5K2P6 */
+			front_sensor_id = <44>; /* SENSOR_NAME_S5K3P8SP */
+			front2_sensor_id = <208>; /* SENSOR_NAME_SR846 */
+			use_module_check;
+			check_sensor_vendor;
+			/*skip_cal_loading;*/
+
+			max_camera_num = <6>;
+			camera_info0 {				// 0 : rear - 2p6
+				isp = <0>;			/* 0 : INT , 1 : EXT , 2 : SOC */
+				cal_memory = <2>;		/* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
+				read_version = <0>;		/* 0 : SYSFS , 1 : CAMON */
+				core_voltage = <0>;		/* 0 : N , 1 : Y  */
+				upgrade = <0>;			/* 0 : N , 1 : SYSFS , 2 : CAMON */
+				companion = <0>;		/* 0 : N , 1 : Y  */
+				ois = <0>;			/* 0 : N , 1 : Y  */
+				valid = <1>;			/* 0 : INVALID, 1 : VALID */
+				dual_open = <0>;		/* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
+			};
+			camera_info1 {				// 1 : front1 - 3p8sp
+				isp = <0>;			/* 0 : INT , 1 : EXT , 2 : SOC */
+				cal_memory = <2>;		/* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
+				read_version = <0>;		/* 0 : SYSFS , 1 : CAMON */
+				core_voltage = <0>;		/* 0 : N , 1 : Y  */
+				upgrade = <0>;			/* 0 : N , 1 : SYSFS , 2 : CAMON */
+				companion = <0>;		/* 0 : N , 1 : Y  */
+				ois = <0>;			/* 0 : N , 1 : Y  */
+				valid = <1>;			/* 0 : INVALID, 1 : VALID */
+				dual_open = <0>;		/* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
+			};
+			camera_info5 {				// 1 : front2 - sr846
+				isp = <0>;			/* 0 : INT , 1 : EXT , 2 : SOC */
+				cal_memory = <2>;		/* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
+				read_version = <0>;		/* 0 : SYSFS , 1 : CAMON */
+				core_voltage = <0>;		/* 0 : N , 1 : Y  */
+				upgrade = <0>;			/* 0 : N , 1 : SYSFS , 2 : CAMON */
+				companion = <0>;		/* 0 : N , 1 : Y  */
+				ois = <0>;			/* 0 : N , 1 : Y  */
+				valid = <1>;			/* 0 : INVALID, 1 : VALID */
+				dual_open = <1>;		/* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
+			};
+		};
+
+		fimc_is_dvfs {
+			/* TODO: DVFS level set */
+			#define DVFS_INT_L0 533000
+			#define DVFS_INT_L1 333000
+			#define DVFS_INT_L2 267000
+			#define DVFS_INT_L3 133000
+			#define DVFS_INT_L4 107000
+
+			#define DVFS_CAM_L0 690000
+			#define DVFS_CAM_L1 680000
+			#define DVFS_CAM_L2 670000
+			#define DVFS_CAM_L3 660000
+			#define DVFS_CAM_L4 650000
+
+			#define DVFS_MIF_L0 2093000
+			#define DVFS_MIF_L1 2002000
+			#define DVFS_MIF_L2 1794000
+			#define DVFS_MIF_L3 1539000
+			#define DVFS_MIF_L4 1352000
+			#define DVFS_MIF_L5 1014000
+			#define DVFS_MIF_L6 845000
+			#define DVFS_MIF_L7 676000
+			#define DVFS_MIF_L8 546000
+			#define DVFS_MIF_L9 420000
+
+			table0 {
+				desc = "default";
+
+				default_int = <DVFS_INT_L0>;
+				default_cam = <DVFS_CAM_L0>;
+				default_mif = <DVFS_MIF_L0>;
+				default_i2c = <0>;
+
+				front2_preview_int = <DVFS_INT_L4>;
+				front2_preview_cam = <DVFS_CAM_L2>;
+				front2_preview_mif = <DVFS_MIF_L5>;
+				front2_preview_i2c = <0>;
+
+				front2_capture_int = <DVFS_INT_L4>;
+				front2_capture_cam = <DVFS_CAM_L2>;
+				front2_capture_mif = <DVFS_MIF_L4>;
+				front2_capture_i2c = <0>;
+
+				front2_video_int = <DVFS_INT_L4>;
+				front2_video_cam = <DVFS_CAM_L2>;
+				front2_video_mif = <DVFS_MIF_L5>;
+				front2_video_i2c = <0>;
+
+				front2_video_capture_int = <DVFS_INT_L4>;
+				front2_video_capture_cam = <DVFS_CAM_L2>;
+				front2_video_capture_mif = <DVFS_MIF_L4>;
+				front2_video_capture_i2c = <0>;
+
+				front_preview_int = <DVFS_INT_L4>;
+				front_preview_cam = <DVFS_CAM_L2>;
+				front_preview_mif = <DVFS_MIF_L5>;
+				front_preview_i2c = <0>;
+
+				front_capture_int = <DVFS_INT_L4>;
+				front_capture_cam = <DVFS_CAM_L2>;
+				front_capture_mif = <DVFS_MIF_L5>;
+				front_capture_i2c = <0>;
+
+				front_video_int = <DVFS_INT_L4>;
+				front_video_cam = <DVFS_CAM_L2>;
+				front_video_mif = <DVFS_MIF_L5>;
+				front_video_i2c = <0>;
+
+				front_vt1_int = <DVFS_INT_L4>;
+				front_vt1_cam = <DVFS_CAM_L2>;
+				front_vt1_mif = <DVFS_MIF_L7>;
+				front_vt1_i2c = <0>;
+
+				front_vt2_int = <DVFS_INT_L4>;
+				front_vt2_cam = <DVFS_CAM_L2>;
+				front_vt2_mif = <DVFS_MIF_L7>;
+				front_vt2_i2c = <0>;
+
+				front_vt4_int = <DVFS_INT_L4>;
+				front_vt4_cam = <DVFS_CAM_L2>;
+				front_vt4_mif = <DVFS_MIF_L7>;
+				front_vt4_i2c = <0>;
+
+				rear_preview_fhd_int = <DVFS_INT_L4>;
+				rear_preview_fhd_cam = <DVFS_CAM_L2>;
+				rear_preview_fhd_mif = <DVFS_MIF_L4>;
+				rear_preview_fhd_i2c = <0>;
+
+				rear_capture_int = <DVFS_INT_L4>;
+				rear_capture_cam = <DVFS_CAM_L1>;
+				rear_capture_mif = <DVFS_MIF_L3>;
+				rear_capture_i2c = <0>;
+
+				rear_video_fhd_int = <DVFS_INT_L4>;
+				rear_video_fhd_cam = <DVFS_CAM_L2>;
+				rear_video_fhd_mif = <DVFS_MIF_L4>;
+				rear_video_fhd_i2c = <0>;
+
+				rear_video_uhd_int = <DVFS_INT_L4>;
+				rear_video_uhd_cam = <DVFS_CAM_L2>;
+				rear_video_uhd_mif = <DVFS_MIF_L1>;
+				rear_video_uhd_i2c = <0>;
+
+				rear_video_fhd_capture_int = <DVFS_INT_L4>;
+				rear_video_fhd_capture_cam = <DVFS_CAM_L1>;
+				rear_video_fhd_capture_mif = <DVFS_MIF_L3>;
+				rear_video_fhd_capture_i2c = <0>;
+
+				rear_video_uhd_capture_int = <DVFS_INT_L4>;
+				rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
+				rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
+				rear_video_uhd_capture_i2c = <0>;
+
+				dual_preview_int = <DVFS_INT_L4>;
+				dual_preview_cam = <DVFS_CAM_L0>;
+				dual_preview_mif = <DVFS_MIF_L2>;
+				dual_preview_i2c = <0>;
+
+				dual_capture_int = <DVFS_INT_L4>;
+				dual_capture_cam = <DVFS_CAM_L0>;
+				dual_capture_mif = <DVFS_MIF_L2>;
+				dual_capture_i2c = <0>;
+
+				dual_video_int = <DVFS_INT_L4>;
+				dual_video_cam = <DVFS_CAM_L0>;
+				dual_video_mif = <DVFS_MIF_L2>;
+				dual_video_i2c = <0>;
+
+				preview_high_speed_fps_int = <DVFS_INT_L4>;
+				preview_high_speed_fps_cam = <DVFS_CAM_L2>;
+				preview_high_speed_fps_mif = <DVFS_MIF_L5>;
+				preview_high_speed_fps_i2c = <0>;
+
+				video_high_speed_60fps_int = <DVFS_INT_L4>;
+				video_high_speed_60fps_cam = <DVFS_CAM_L2>;
+				video_high_speed_60fps_mif = <DVFS_MIF_L5>;
+				video_high_speed_60fps_i2c = <0>;
+
+				video_high_speed_120fps_int = <DVFS_INT_L4>;
+				video_high_speed_120fps_cam = <DVFS_CAM_L2>;
+				video_high_speed_120fps_mif = <DVFS_MIF_L5>;
+				video_high_speed_120fps_i2c = <0>;
+
+				max_int = <DVFS_INT_L0>;
+				max_cam = <DVFS_CAM_L0>;
+				max_mif = <DVFS_MIF_L0>;
+				max_i2c = <0>;
+			};
+
+			table1 {
+				desc = "DVFS table for HAL3";
+
+				default_int = <DVFS_INT_L0>;
+				default_cam = <DVFS_CAM_L0>;
+				default_mif = <DVFS_MIF_L0>;
+				default_i2c = <0>;
+
+				front2_preview_int = <DVFS_INT_L4>;
+				front2_preview_cam = <DVFS_CAM_L2>;
+				front2_preview_mif = <DVFS_MIF_L5>;
+				front2_preview_i2c = <0>;
+
+				front2_capture_int = <DVFS_INT_L4>;
+				front2_capture_cam = <DVFS_CAM_L2>;
+				front2_capture_mif = <DVFS_MIF_L4>;
+				front2_capture_i2c = <0>;
+
+				front2_video_int = <DVFS_INT_L4>;
+				front2_video_cam = <DVFS_CAM_L2>;
+				front2_video_mif = <DVFS_MIF_L5>;
+				front2_video_i2c = <0>;
+
+				front2_video_capture_int = <DVFS_INT_L4>;
+				front2_video_capture_cam = <DVFS_CAM_L2>;
+				front2_video_capture_mif = <DVFS_MIF_L4>;
+				front2_video_capture_i2c = <0>;
+
+				front_preview_int = <DVFS_INT_L4>;
+				front_preview_cam = <DVFS_CAM_L2>;
+				front_preview_mif = <DVFS_MIF_L5>;
+				front_preview_i2c = <0>;
+
+				front_capture_int = <DVFS_INT_L4>;
+				front_capture_cam = <DVFS_CAM_L2>;
+				front_capture_mif = <DVFS_MIF_L5>;
+				front_capture_i2c = <0>;
+
+				front_video_int = <DVFS_INT_L4>;
+				front_video_cam = <DVFS_CAM_L2>;
+				front_video_mif = <DVFS_MIF_L5>;
+				front_video_i2c = <0>;
+
+				front_vt1_int = <DVFS_INT_L4>;
+				front_vt1_cam = <DVFS_CAM_L2>;
+				front_vt1_mif = <DVFS_MIF_L5>;
+				front_vt1_i2c = <0>;
+
+				front_vt2_int = <DVFS_INT_L4>;
+				front_vt2_cam = <DVFS_CAM_L2>;
+				front_vt2_mif = <DVFS_MIF_L5>;
+				front_vt2_i2c = <0>;
+
+				front_vt4_int = <DVFS_INT_L4>;
+				front_vt4_cam = <DVFS_CAM_L2>;
+				front_vt4_mif = <DVFS_MIF_L5>;
+				front_vt4_i2c = <0>;
+
+				rear_preview_fhd_int = <DVFS_INT_L4>;
+				rear_preview_fhd_cam = <DVFS_CAM_L0>;
+				rear_preview_fhd_mif = <DVFS_MIF_L2>;
+				rear_preview_fhd_i2c = <0>;
+
+				rear_capture_int = <DVFS_INT_L4>;
+				rear_capture_cam = <DVFS_CAM_L0>;
+				rear_capture_mif = <DVFS_MIF_L2>;
+				rear_capture_i2c = <0>;
+
+				rear_video_fhd_int = <DVFS_INT_L4>;
+				rear_video_fhd_cam = <DVFS_CAM_L0>;
+				rear_video_fhd_mif = <DVFS_MIF_L2>;
+				rear_video_fhd_i2c = <0>;
+
+				rear_video_uhd_int = <DVFS_INT_L4>;
+				rear_video_uhd_cam = <DVFS_CAM_L0>;
+				rear_video_uhd_mif = <DVFS_MIF_L1>;
+				rear_video_uhd_i2c = <0>;
+
+				rear_video_fhd_capture_int = <DVFS_INT_L4>;
+				rear_video_fhd_capture_cam = <DVFS_CAM_L0>;
+				rear_video_fhd_capture_mif = <DVFS_MIF_L2>;
+				rear_video_fhd_capture_i2c = <0>;
+
+				rear_video_uhd_capture_int = <DVFS_INT_L4>;
+				rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
+				rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
+				rear_video_uhd_capture_i2c = <0>;
+
+				dual_preview_int = <DVFS_INT_L4>;
+				dual_preview_cam = <DVFS_CAM_L0>;
+				dual_preview_mif = <DVFS_MIF_L2>;
+				dual_preview_i2c = <0>;
+
+				dual_capture_int = <DVFS_INT_L4>;
+				dual_capture_cam = <DVFS_CAM_L0>;
+				dual_capture_mif = <DVFS_MIF_L2>;
+				dual_capture_i2c = <0>;
+
+				dual_video_int = <DVFS_INT_L4>;
+				dual_video_cam = <DVFS_CAM_L0>;
+				dual_video_mif = <DVFS_MIF_L2>;
+				dual_video_i2c = <0>;
+
+				preview_high_speed_fps_int = <DVFS_INT_L4>;
+				preview_high_speed_fps_cam = <DVFS_CAM_L2>;
+				preview_high_speed_fps_mif = <DVFS_MIF_L5>;
+				preview_high_speed_fps_i2c = <0>;
+
+				video_high_speed_60fps_int = <DVFS_INT_L4>;
+				video_high_speed_60fps_cam = <DVFS_CAM_L3>;
+				video_high_speed_60fps_mif = <DVFS_MIF_L5>;
+				video_high_speed_60fps_i2c = <0>;
+
+				video_high_speed_120fps_int = <DVFS_INT_L4>;
+				video_high_speed_120fps_cam = <DVFS_CAM_L2>;
+				video_high_speed_120fps_mif = <DVFS_MIF_L5>;
+				video_high_speed_120fps_i2c = <0>;
+
+				max_int = <DVFS_INT_L0>;
+				max_cam = <DVFS_CAM_L0>;
+				max_mif = <DVFS_MIF_L0>;
+				max_i2c = <0>;
+			};
+		};
+	};
+
+	fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
+		compatible = "samsung,sensor-module-2p6";
+
+		pinctrl-names = "pin0", "pin1", "pin2", "release";
+		pinctrl-0 = <>;
+		pinctrl-1 = <&fimc_is_mclk0_out>;
+		pinctrl-2 = <&fimc_is_mclk0_fn>;
+		pinctrl-3 = <>;
+
+		use_pdaf; /* when USE_AP_PDAF is enabled, use for pdaf sensor */
+
+		position = <0>;	/* Rear:0. Front:1 */
+		id = <0>; /* bns_id */
+		mclk_ch = <0>;
+
+		gpio_mclk = <&gpc0 0 0x1>;
+		gpio_reset = <&gpf3 2 0x1>; /* sensor reset - jackpot hw_rev = 100'b */
+		gpio_core_en = <&gpp0 2 0x1>; /* RCAM_LDO_EN */
+		gpio_cam_io_en = <&gpg2 0 0x1>; /* RCAM_IO_LDO_EN */
+		gpio_cam_af_en = <&gpp0 3 0x1>; /* RCAM_AF_2P8_EN */
+		status = "okay";
+
+		af {
+			product_name = <16>; /* AK7372 */
+			i2c_addr = <0x18>;
+			i2c_ch = <3>;
+		};
+
+		flash {
+			product_name = <5>; /* FLASH_KTD2692 */
+			flash_first_gpio = <2>; /* DICO not use first, second gpio value */
+			flash_second_gpio = <3>;
+		};
+
+		internal_vc {
+			/* vc_list = <channel, data_type, buffer_offset>
+			 * channel : Output VC channel
+			 *  - Supported channels are 1(VC1), 2(VC2), 3(VC3)
+			 *  - Since channel 0(VC0) is dedicated to image data, it can not be used
+
+			 * data_type : Output type of VC channel
+			 *  - Value 0 VC_NOTHING
+			 *  - Value 1 VC_TAIL_MODE_PDAF
+			 *  - Value 2 VC_MIPI_STAT
+			 * buffer_offset : get_vc_dma_buf offset value of buffer to return when using interface
+
+			 *  - Value 0 N buffer return
+			 *  - Value 1 N-1 buffer return
+			 */
+
+			vc_list = <1 1 1>;
+		};
+	};
+
+	fimc_is_sensor_3p8sp: fimc-is_sensor_3p8sp@5A {
+		compatible = "samsung,sensor-module-3p8sp";
+
+		pinctrl-names = "pin0", "pin1", "pin2", "release";
+		pinctrl-0 = <>;
+		pinctrl-1 = <&fimc_is_mclk1_out>;
+		pinctrl-2 = <&fimc_is_mclk1_fn>;
+		pinctrl-3 = <>;
+
+		position = <1>;	/* Rear:0. Front:1 */
+		id = <1>; /* bns_id */
+		mclk_ch = <1>;
+
+		gpio_mclk = <&gpc0 1 0x1>;
+		gpio_reset = <&gpf3 0 0x1>;	/* sensor reset */
+		gpio_rcam_en = <&gpg2 0 0x1>;	/* RCAM_IO_LDO_EN */
+		gpio_fcam1_en = <&gpp0 0 0x1>;	/* FCAM1 all LDOs */
+		gpio_fcam2_en = <&gpp0 1 0x1>;	/* FCAM2 all LDOs */
+		status = "okay";
+	};
+
+	fimc_is_sensor_sr846: fimc-is_sensor_sr846@42 {
+		compatible = "samsung,sensor-module-sr846";
+
+		pinctrl-names = "pin0", "pin1", "pin2", "release";
+		pinctrl-0 = <>;
+		pinctrl-1 = <&fimc_is_mclk2_out>;
+		pinctrl-2 = <&fimc_is_mclk2_fn>;
+		pinctrl-3 = <>;
+
+		position = <5>;	/* Rear:0. Front:1. Front_1:5 */
+		id = <2>; /* bns_id */
+		mclk_ch = <2>;
+
+		gpio_mclk = <&gpc0 2 0x1>;
+		gpio_reset = <&gpf3 1 0x1>;	/* sensor reset */
+		gpio_ldos_en = <&gpp0 1 0x1>;	/* all LDOs */
+		status = "okay";
+	};
+
+	fimc_is_flash_ktd2692: fimc-is-flash_ktd2692@0 {
+		compatible = "samsung,sensor-flash-ktd2692";
+		id = <0>; /* matching sensor id */
+		status = "okay";
+	};
+
+	leds_ktd2692 {
+		compatible = "ktd2692";
+		flash_control = <&gpg1 2 0x1>;
+		max_current = <1500>; /* (IMax) */
+		flash_current = <1200>; /* (n/16)xIMax (1<=n<=16) */
+		movie_current = <175>; /* (n/16)*IMax/3 (1<=n<=16) */
+		factory_current = <175>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_current = <75>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_table_enable = <1>;
+		torch_table = <1 2 2 3 3 4 4 4 5 5>;
+		status = "okay";
+		pinctrl-names ="default","host","is";
+		pinctrl-0 = <&fimc_is_flash_is>;
+		pinctrl-1 = <&fimc_is_flash_host>;
+		pinctrl-2 = <&fimc_is_flash_is>;
+	};
+
+	#define SENSOR_SCENARIO_NORMAL		0
+	#define SENSOR_SCENARIO_VISION		1
+	#define SENSOR_SCENARIO_EXTERNAL	2
+	#define SENSOR_SCENARIO_OIS_FACTORY	3
+	#define SENSOR_SCENARIO_VIRTUAL		9
+	#define FLITE_ID_NOTHING 100
+
+	fimc_is_sensor0: fimc_is_sensor@14410000 {
+		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
+		id = <0>;
+		csi_ch = <1>;
+		flite_ch = <FLITE_ID_NOTHING>;
+		is_bns = <0>;
+		is_flite = <0>;
+		status = "okay";
+
+		use_ssvc1_internal;
+	};
+
+	fimc_is_sensor1: fimc_is_sensor@14400000 {
+		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
+		id = <1>;
+		csi_ch = <0>;
+		flite_ch = <FLITE_ID_NOTHING>;
+		is_bns = <0>;
+		is_flite = <0>;
+		status = "okay";
+	};
+
+	fimc_is_sensor2: fimc_is_sensor@14420000 {
+		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
+		id = <2>;
+		csi_ch = <2>;
+		flite_ch = <FLITE_ID_NOTHING>;
+		is_bns = <0>;
+		is_flite = <0>;
+		status = "okay";
+	};
+
+	hsi2c_1: hsi2c@138B0000 {
+		gpios = <&gpc1 2 0 &gpc1 3 0>;
+		status = "okay";
+		clock-frequency = <400000>;
+
+		pinctrl-names = "on_i2c";
+		pinctrl-0 = <&hs_i2c1_bus>;
+
+		fimc-is-2p6@10 {
+			compatible = "samsung,exynos5-fimc-is-cis-2p6";
+			reg = <0x2d>; /* 1 bit right shift */
+			id = <0>; /* matching sensor id */
+			sensor_f_number = <170>; /* f number 1.7 */
+			setfile = "setB";
+
+			use_pdaf; /* when USE_AP_PDAF is enabled, use for pdaf sensor */
+		};
+	};
+
+	hsi2c_2: hsi2c@138C0000 {
+		gpios = <&gpc1 4 0 &gpc1 5 0>;
+		status = "okay";
+		clock-frequency = <400000>;
+
+		pinctrl-names = "on_i2c";
+		pinctrl-0 = <&hs_i2c2_bus>;
+
+		fimc-is-actuator@18 {
+		     compatible = "samsung,exynos5-fimc-is-actuator-ak7372";
+		     reg = <0x0C>; /* 7bit-addr */
+		     id = <0>;
+		     place = <0>;
+		};
+
+		fimc_is_eeprom_i2c@A0 {
+			compatible = "samsung,rear-eeprom-i2c";
+			reg = <0x50>; /* 7bit-addr */
+		};
+
+		fimc_is_eeprom_i2c@A2 {
+			compatible = "samsung,front-eeprom-i2c";
+			reg = <0x51>; /* 7bit-addr */
+		};
+	};
+
+	hsi2c_0: hsi2c@138A0000 {
+		gpios = <&gpc1 0 0 &gpc1 1 0>;
+		status = "okay";
+		clock-frequency = <400000>;
+
+		pinctrl-names = "on_i2c";
+		pinctrl-0 = <&hs_i2c0_bus>;
+
+		fimc-is-3p8sp@2D {
+		     compatible = "samsung,exynos5-fimc-is-cis-3p8sp";
+		     reg = <0x10>; /* 1 bit right shift */
+		     id = <1>; /* matching sensor id */
+		     sensor_f_number = <190>; /* f number 1.9 */
+		     setfile = "setB";
+		     use_initial_ae; /* for initial AE of face unlock */
+		};
+	};
+
+	hsi2c_3: hsi2c@138D0000 {
+		gpios = <&gpc1 6 0 &gpc1 7 0>;
+		status = "okay";
+		clock-frequency = <400000>;
+		samsung.tsda-su-fs = <0x36>;
+
+		pinctrl-names = "on_i2c";
+		pinctrl-0 = <&hs_i2c3_bus>;
+
+		fimc-is-sr846@42 {
+		     compatible = "samsung,exynos5-fimc-is-cis-sr846";
+		     reg = <0x21>; /* 1 bit right shift */
+		     id = <2>; /* matching sensor id */
+		     sensor_f_number = <190>; /* f number 1.9 */
+		     setfile = "setB";
+		};
+	};
+
+	/* DISPAUD */
+	pinctrl@148F0000 {
+		aud_fm_bus: aud-fm-bus {
+			samsung,pins = "gpb1-1", "gpb1-2", "gpb1-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		spi2_bus: spi2-bus {
+			samsung,pins = "gpc2-1", "gpc2-0";
+			samsung,pin-function = <2>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud = <1>;
+			samsung,pin-pud-pdn = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		spi2_bus_clk: spi2-bus-clk {
+			samsung,pins = "gpc2-3";
+			samsung,pin-function = <2>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud = <0>;
+			samsung,pin-pud-pdn = <0>;
+			samsung,pin-drv = <0>;
+			samsung,pin-val = <0>;
+		};
+
+		spi2_cs: spi2-cs {
+			samsung,pins = "gpc2-2";
+			samsung,pin-function = <2>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud = <3>;
+			samsung,pin-pud-pdn = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		aud_dmic_on: aud_dmic_on {
+			samsung,pins = "gpg2-1";
+			samsung,pin-function = <1>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-val = <1>;
+		};
+
+		aud_dmic_off: aud_dmic_off {
+			samsung,pins = "gpg2-1";
+			samsung,pin-function = <1>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-val = <1>;
+		};
+	};
+
+	spi_2: spi@13920000 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		num-cs = <1>;
+
+		/delete-property/ dma-mode;
+		/delete-property/ dmas;
+		/delete-property/ dma-names;
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&spi2_bus &spi2_bus_clk &spi2_cs>;
+		status = "okay";
+
+		dbmd4_spi: dbmd4_interface@0 {
+			compatible = "dspg,dbmd4-spi";
+			reg = <0x0>;
+			spi-max-frequency = <1000000>;
+			read-chunk-size = <0x2000>;
+			write-chunk-size = <0x40000>;
+
+			interrupts = <2 0 0>;
+			interrupt-parent = <&gpa0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			controller-data {
+				cs-gpio = <&gpc2 2 0>;
+				samsung,spi-feedback-delay = <0>;
+			};
+		};
+	};
+
+	dbmdx_event {
+		status = "okay";
+		compatible = "samsung,dbmdx-event";
+	};
+
+	dbmdx-snd-soc-platform {
+		compatible = "dspg,dbmdx-snd-soc-platform";
+	};
+
+	snd-dbmdx-mach-drv {
+		compatible = "dspg,snd-dbmdx-mach-drv";
+	};
+
+	pinctrl@11CB0000 {
+		dbmdx_int: dbmdx-int {
+			samsung,pins = "gpa0-2";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		dbmdx_wakeup: dbmdx-wakeup {
+			samsung,pins ="gpg2-3";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-con-pdn =<3>;
+			samsung,pin-pud-pdn = <3>;
+			samsung,pin-val = <1>;
+		};
+
+		dbmdx_reset: dbmdx-reset {
+			samsung,pins ="gpg2-2";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-con-pdn =<3>;
+			samsung,pin-pud-pdn = <3>;
+			samsung,pin-val = <1>;
+		};
+	};
+
+	dbmdx {
+		status = "okay";
+		compatible = "dspg,dbmdx-codec";
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&dbmdx_wakeup &dbmdx_reset>;
+
+		sv-gpio = <&gpa0 2 0>; /* VOICE_INT */
+		wakeup-gpio = <&gpg2 3 0>; /* VOICE_WAKE */
+		reset-gpio = <&gpg2 2 0>; /* VOICE_RST */
+		auto_buffering = <1>;
+		cmd-interface = <&dbmd4_spi>;
+		feature-va; /* enable VA */
+		va-firmware-name = "dbmd4_va_fw.bin";
+		va-config = <0x80000000
+			     0x80000000
+			     0x80000000
+			     0x80290020
+			     0x802210E0
+			     0x80158E8E
+			     0x801b0020
+			     0x801A0011
+			     0x80230001
+			     0x80108017
+			     0x80000000
+			     0x80000000
+			     0x80000000>;
+		va-speeds = <0x0000 460800  0 4800000
+			     0x0000 2000000 0 4800000
+			     0x0000 3000000 0 4800000>;
+		va-mic-config = <0xf041 0x1044 0x0008>;
+		va-mic-mode = <0>;
+		master-clk-rate = <32768>;
+		/* constant-clk-rate = <32768>; */
+		firmware_id = <0xdbd4>;
+		use_gpio_for_wakeup = <1>; /* Use wakeup gpio */
+		wakeup_set_value = <0>;  /* Value to write to wakeup gpio */
+		auto_detection = <1>;
+		detection_buffer_channels = <0>;
+		min_samples_chunk_size = <128>;
+		pcm_streaming_mode = <1>;
+		boot_options = <0x200>; /* Verify chip id */
+		send_uevent_after_buffering = <0>;
+		detection_after_buffering = <0>;
+		va_backlog_length = <1300>;
+		va_backlog_length_okg = <1000>;
+		send_uevent_on_detection = <1>;
+		amodel_options = <0x3>;
+	};
+
+	abox_gic: abox_gic@0x14AF0000 {
+		status = "okay";
+	};
+
+	i2c_3: i2c@13860000 {
+		status = "okay";
+		tfa98xx: tfa98xx@34 {
+			compatible = "nxp,tfa98xx";
+			#sound-dai-cells = <1>;
+			reg = <0x34>;
+		};
+	};
+
+	abox: abox@0x14A50000 {
+		status = "okay";
+		/* CAUTION:
+		* "try to asrc off" quirk must be in dts.
+		* It shouldn't be applied already audio tuned device,
+		* because it changes delay and causes re-tune.
+		*/
+		/*
+		* TODO: enable later
+		*/
+		/* quirks = "try to asrc off"; */
+
+		abox_synchronized_ipc: abox_synchronized_ipc {
+			compatible = "samsung,abox-synchronized-ipc";
+			#sound-dai-cells = <1>;
+			abox = <&abox>;
+		};
+	};
+
+	dummy_audio_codec: audio_codec_dummy {
+		status = "okay";
+		compatible = "snd-soc-dummy";
+	};
+
+	sound {
+		status = "okay";
+		compatible = "samsung,exynos7885-cod3035";
+		mic-bias-mode = <0 0 2 0>;
+		clock-names = "xclkout";
+		samsung,codec = <&abox>;
+
+		samsung,routing =  "VOUTPUT", "ABOX UAIF0 Playback",
+				 "VOUTPUTCALL", "ABOX UAIF2 Playback",
+				 "ABOX UAIF2 Capture", "VINPUTCALL",
+				 "ABOX SPEEDY Capture", "VINPUTFM",
+				 // "SPK", "ABOX UAIF3 Playback",
+				 // "ABOX UAIF3 Capture", "VI";
+				 "SPK", "AIF Playback-8-34",
+				 "AIF Playback-8-34", "ABOX UAIF3 Playback",
+				 "ABOX UAIF3 Capture", "AIF Capture-8-34";
+
+		rdma@0 {
+			cpu {
+				sound-dai = <&abox 0>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@1 {
+			cpu {
+				sound-dai = <&abox 1>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@2 {
+			cpu {
+				sound-dai = <&abox 2>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@3 {
+			cpu {
+				sound-dai = <&abox 3>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@4 {
+			cpu {
+				sound-dai = <&abox 4>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@5 {
+			cpu {
+				sound-dai = <&abox 5>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@6 {
+			cpu {
+				sound-dai = <&abox 6>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@7 {
+			cpu {
+				sound-dai = <&abox 7>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@0 {
+			cpu {
+				sound-dai = <&abox 8>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@1 {
+			cpu {
+				sound-dai = <&abox 9>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@2 {
+			cpu {
+				sound-dai = <&abox 10>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@3 {
+			cpu {
+				sound-dai = <&abox 11>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@4 {
+			cpu {
+				sound-dai = <&abox 12>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		uaif@0 {
+			cpu {
+				sound-dai = <&abox 13>;
+			};
+			codec {
+				sound-dai = <&audio_codec_cod3035x>;
+			};
+		};
+		uaif@1 {
+			cpu {
+				sound-dai = <&abox 14>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		uaif@2 {
+			cpu {
+				sound-dai = <&abox 15>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		uaif@3 {
+			cpu {
+				sound-dai = <&abox 16>;
+			};
+			platform {
+				sound-dai = <&abox_synchronized_ipc 0>;
+			};
+			codec {
+				sound-dai = <&tfa98xx 0>;
+			};
+		};
+		internal@0 {
+			cpu {
+				sound-dai = <&abox 17>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		speedy@0 {
+			cpu {
+				sound-dai = <&abox 18>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+	};
+
+	pinctrl@11CB0000 {
+		nfc_int: nfc-int {
+			samsung,pins = "gpa1-0";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+		};
+
+		nfc_clk: nfc-clk {
+			samsung,pins = "gpq0-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpp6-4";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpp3-2";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_pd: nfc_pd {
+			samsung,pins = "gpp2-2";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_clk_req: nfc_clk_req {
+			samsung,pins = "gpp2-3";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+	i2c_2: i2c@13850000 {
+		status = "okay";
+		samsung,i2c-max-bus-freq = <400000>;
+		sec-nfc@27 {
+			compatible = "sec-nfc";
+			reg = <0x27>;
+
+			interrupts = <0 0 0>;
+			interrupt-parent = <&gpa1>;
+
+			sec-nfc,nfc_pd = <&gpp2 2 0x2>;
+			sec-nfc,firm-gpio = <&gpp3 2 1>;
+			sec-nfc,irq-gpio = <&gpa1 0 0>;
+			sec-nfc,nfc_clkreq = <&gpp2 3 0x2>;
+			sec-nfc,pvdd_en = <&gpp6 4 1>;
+			clkctrl-reg = <0x11C8600C>;
+
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		spi0_bus_ese: spi0-bus-ese {
+			samsung,pins = "gpp5-3", "gpp5-2", "gpp5-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		spi0_ese_cs_gpio: spi0-ese-cs-gpio {
+			samsung,pins = "gpp5-1";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		spi0_bus_ese_suspend: spi0-bus-ese-suspend {
+			samsung,pins = "gpp5-3", "gpp5-2", "gpp5-1", "gpp5-0";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	spi_0: spi@13900000 {
+		status = "okay";
+		/delete-property/ pinctrl-names;
+		/delete-property/ pinctrl-0;
+
+		ese_spi@0 {
+			compatible = "ese_p3";
+			reg = <0>;
+			spi-max-frequency = <13000000>;
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			p3-vdd_1p8-gpio = <&gpg1 0 1>;
+			ese_p3,cs-gpio = <&gpp5 1 0>;
+
+			clocks = <&clock GATE_SPI0>, <&clock SPI_0>;
+			clock-names = "pclk", "sclk";
+
+			pinctrl-names = "ese_active", "ese_suspend";
+			pinctrl-0 = <&spi0_bus_ese &spi0_ese_cs_gpio>;
+			pinctrl-1 = <&spi0_bus_ese_suspend>;
+
+			controller-data {
+				samsung,spi-feedback-delay = <0>;
+				samsung,spi-chip-select-mode = <0>;
+			};
+		};
+	};
+
+	pinctrl@139B0000 {
+		ssp_ap_int: ssp-ap-int {
+			samsung,pins = "gpg1-6";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-drv = <3>;
+		};
+		ssp_boot0: ssp-boot0 {
+			samsung,pins = "gpg1-3";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <3>;
+		};
+		ssp_rst: ssp-rst {
+			samsung,pins = "gpg3-5";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+
+		spi4_clk: spi4-clk {
+			samsung,pins = "gpp8-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+		spi4_cs: spi4-cs {
+			samsung,pins = "gpp8-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <3>;
+			samsung,pin-drv = <2>;
+		};
+		spi4_miso: spi4-miso {
+			samsung,pins = "gpp7-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <2>;
+		};
+		spi4_mosi: spi4-mosi {
+			samsung,pins = "gpp7-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+	};
+
+	pinctrl@11CB0000 {
+		ssp_mcu_int1: ssp-mcu-int1 {
+			samsung,pins = "gpa1-2";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		ssp_mcu_int2: ssp-mcu-int2 {
+			samsung,pins = "gpa1-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	mcu_ipc: mcu_ipc@12080000 {
+		mcu,irq_affinity_mask = <3>;
+	};
+
+	argos {
+		compatible = "samsung,argos";
+		#address-cells = <1>;
+		/*  The device number should be assigned for each device, e.g. "boot_device@1" and "boot_device@2".
+		 * Duplicated number is not allowed. Please refer the below example.
+		 */
+
+		/* Table Format should be
+		 * <Throughput(Mbps) ARM_min ARM_max KFC_min KFC_max MIF INT Task IRQ HMP_boost>
+		 * ARM_min : Big Core's minimum frequency lock. 0 means not set,
+		 * ARM_max : Big Core's maximum frequency lock. 0 means not set,
+		 * KFC_min : Little Core's minimum frequency lock. 0 means not set,
+		 * KFC_max : Little Core's maximum frequency lock. 0 means not set,
+		 * MIF : MIF frequency lock. 0 means not set,
+		 * INT : INT frequency lock. 0 means not set,
+		 * Task : 1 - Set task affinity lock.
+		 *	0 - Not set or unlock,
+		 *		Task affinity should be predefined driver's code.
+		 * IRQ : 1 - Set irq affinity lock.
+		 *       0 - Not set or unlock,
+		 *		Task affinity should be predefined driver's code.
+		 * HMP_boots : 1 - Increase hmp boosting count
+		 *             0 - Decrease hmp boosting count
+		 */
+
+		 boot_device@1 {
+		 net_boost,label="WIFI TX";
+		 net_boost,node="wlan0";
+		 net_boost,table_size = <2>;
+		 net_boost,table= <
+		 	60 1144000 0 676000 0 0 0 0 0 0
+		 	120 1560000 0 1586000 0 0 267000 0 0 0
+		 	>;
+		 };
+
+		 boot_device@2 {
+		 net_boost,label="WIFI RX";
+		 net_boost,node="wlan0";
+		 net_boost,table_size = <1>;
+		 net_boost,table= <
+		 	250 1352000 0 1352000 0 0 0 0 0 0
+		 	>;
+		 };
+
+		 boot_device@3 {
+			net_boost,label="IPC";
+			net_boost,node="rmnet0 rmnet1 rmnet2 rmnet3 rmnet4 rmnet5 rmnet6 rmnet7 umts_dm0";
+			net_boost,table_size = <4>;
+			net_boost,table= <
+				100 0 0 1066000 0 845000 0 0 1 0
+				150 0 0 1170000 0 1144000 0 0 1 0
+				200 0 0 1378000 0 1539000 0 0 1 0
+				300 0 0 1586000 0 1794000 0 0 1 0
+				>;
+		};
+
+		boot_device@4 {
+			net_boost,label="CLAT";
+			net_boost,node="clat clat4 v4-rmnet0 v4-rmnet1 v4-rmnet2 v4-rmnet3 v4-rmnet4 v4-rmnet5 v4-rmnet6 v4-rmnet7";
+			net_boost,table_size = <3>;
+			net_boost,table= <
+				120 0 0 1378000 0 1144000 0 0 0 0
+				130 0 0 1378000 0 1539000 0 0 0 0
+				150 0 0 1586000 0 1794000 0 0 0 0
+				>;
+		};
+
+		boot_device@5 {
+			net_boost,label="USB";
+			net_boost,node="rndis0";
+			net_boost,table_size = <1>;
+			net_boost,table= < 0 0 0 0 0 0 0 0 1 0 >;
+		};
+
+		/*
+		 * boot_device@9 {
+		 *	net_boost,label="WIFI RX";
+		 *	net_boost,node="wlan0";
+		 *	net_boost,table_size = <4>;
+		 *	net_boost,table= <
+		 *		5  2002000 0 1690000 0 0 0 0 0 0
+		 *		10 2002000 0 1690000 0 0 0 0 0 0
+		 *		20 2002000 0 1690000 0 845000 400000 1 1 1
+		 *		30 2002000 0 1690000 0 1352000 533000 1 1 1
+		 *		>;
+		 * };
+		 */
+	};
+
+	nad_balancer {
+		compatible = "samsung,sec_nad_balancer";
+		status = "okay";
+
+		nad_balancer,timeout = <400>;
+
+			qos {
+				cl0 {
+					qos,label="LIT";
+					qos,delay_time=<9>;
+					qos,table_size=<12>;
+					qos,table=<1586000 1482000 1352000 1248000 1144000 1014000 902000 839000 757000
+						676000 546000 449000>;
+				};
+
+				cl1 {
+					qos,label="BIG";
+					qos,delay_time=<8>;
+					qos,table_size=<11>;
+					qos,table=<2184000 2080000 1976000 1872000 1768000 1664000 1560000 1352000 1144000
+						936000 728000>;
+				};
+
+				mif {
+					qos,label="MIF";
+					qos,delay_time=<10>;
+					qos,table_size=<8>;
+					qos,table=<1794000 1539000 1352000 1014000 845000 676000 546000 420000>;
+				};
+			};
+
+            sleep {
+                /* per msec */
+                sleep,suspend_threshold = <1000>;
+                sleep,resume_threshold = <1000>;
+            };
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_03.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_03.dts
new file mode 100755
index 0000000000..0bc255e782
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_03.dts
@@ -0,0 +1,166 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_03.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev04 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <3>;
+	model_info-hw_rev_end = <3>;
+	compatible = "samsung, JACKPOTLTE EUR rev04", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
+		gpio_reset = <&gpq0 1 0x1>; /* sensor reset - jackpot hw_rev = 000'b ~ 011'b */
+	};
+
+	/* sec-wf-thermistor */
+	sec_thermistor@6 {
+		status = "disabled";
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_04.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_04.dts
new file mode 100755
index 0000000000..578f1b9b0c
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_04.dts
@@ -0,0 +1,157 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_04.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <4>;
+	model_info-hw_rev_end = <4>;
+	compatible = "samsung, JACKPOTLTE EUR rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_05.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_05.dts
new file mode 100755
index 0000000000..8c482a34cb
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_05.dts
@@ -0,0 +1,144 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_05.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <5>;
+	model_info-hw_rev_end = <5>;
+	compatible = "samsung, JACKPOTLTE EUR rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_06.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_06.dts
new file mode 100755
index 0000000000..594bbd51ff
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_06.dts
@@ -0,0 +1,161 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_06.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev06 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <6>;
+	model_info-hw_rev_end = <6>;
+	compatible = "samsung, JACKPOTLTE EUR rev06", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	leds_ktd2692 {
+		compatible = "ktd2692";
+		flash_control = <&gpg1 2 0x1>;
+		max_current = <1360>; /* (IMax) */
+		flash_current = <1200>; /* (n/16)xIMax (1<=n<=16) */
+		movie_current = <175>; /* (n/16)*IMax/3 (1<=n<=16) */
+		factory_current = <175>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_current = <75>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_table_enable = <1>;
+		torch_table = <1 2 2 3 3 4 4 4 5 5>;
+		status = "okay";
+		pinctrl-names ="default","host","is";
+		pinctrl-0 = <&fimc_is_flash_is>;
+		pinctrl-1 = <&fimc_is_flash_host>;
+		pinctrl-2 = <&fimc_is_flash_is>;
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_07.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_07.dts
new file mode 100755
index 0000000000..95cbf671a5
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_07.dts
@@ -0,0 +1,144 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_07.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev07 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <7>;
+	model_info-hw_rev_end = <255>;
+	compatible = "samsung, JACKPOTLTE EUR rev07", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_03.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_03.dtsi
new file mode 100755
index 0000000000..d467960c85
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_03.dtsi
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* FM_LNA_EN */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_04.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_04.dtsi
new file mode 100755
index 0000000000..67c7d2da79
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_04.dtsi
@@ -0,0 +1,172 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* FM_LNA_EN */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_05.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_05.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_05.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_06.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_06.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_06.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_07.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_07.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_eur_open_gpio_07.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_fingerprint-sensor_00.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_fingerprint-sensor_00.dtsi
new file mode 100755
index 0000000000..62eb579972
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_fingerprint-sensor_00.dtsi
@@ -0,0 +1,95 @@
+/*
+ * Copyright (c) 2012-2013, The Linux Foundation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/ {
+	pinctrl@11CB0000 {
+		btp_irq: btp-irq {
+			samsung,pins = "gpa0-5";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <3>;
+		};
+
+		btp_irq_sleep: btp-irq-sleep {
+			samsung,pins = "gpa0-5";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <3>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		btp_check: btp-check {
+			samsung,pins = "gpg3-2";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <3>;
+		};
+
+		btp_ldo: btp-ldo {
+			samsung,pins = "gpg3-3";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		btp_reset: btp-reset {
+			samsung,pins = "gpg3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <3>;
+		};
+	};
+
+	spi_1: spi@13910000 {
+		status = "okay";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		/delete-property/ pinctrl-names;
+		/delete-property/ pinctrl-0;
+		samsung,spi-fifosize = <256>;
+		interrupts = <0 256 0>;
+
+		dma-mode;
+		dmas = <&pdma0 21
+			&pdma0 20>;
+
+		dma-names = "tx", "rx";
+		etspi-spi@0 {
+			compatible = "etspi,et5xx";
+			reg = <0>;
+			spi-max-frequency = <16000000>;
+			pinctrl-names = "default", "pins_poweron", "pins_poweroff", "pins_poweron_tz", "pins_poweroff_tz";
+			pinctrl-0 = <&btp_irq_sleep &btp_reset &btp_ldo &btp_check>;
+			pinctrl-1 = <&btp_irq &spi1_clk &spi1_cs &spi1_miso &spi1_mosi>;
+			pinctrl-2 = <&btp_irq_sleep &spi1_bus_inactive &spi1_miso_inactive>;
+			pinctrl-3 = <&btp_irq>;
+			pinctrl-4 = <&btp_irq_sleep>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			etspi-sleepPin = <&gpg3 4 0x00>;
+			etspi-drdyPin = <&gpa0 5 0x00>;
+			etspi-ldoPin = <&gpg3 3 0x00>;
+			etspi-chipid = "ET510";
+			etspi-ldocontrol = <1>;
+
+			controller-data {
+				samsung,spi-feedback-delay = <0>;
+				samsung,spi-chip-select-mode = <0>;
+			};
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor-tdmb-00.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor-tdmb-00.dtsi
new file mode 100755
index 0000000000..b9b104a31d
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor-tdmb-00.dtsi
@@ -0,0 +1,88 @@
+ /* Copyright (c) 2012-2014, The Linux Foundation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/{
+	pinctrl@139B0000 {
+		tdmb_pwr_on: tdmb-pwr-on {
+			samsung,pins = "gpg2-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+		};
+		tdmb_pwr_off: tdmb-pwr-off {
+			samsung,pins = "gpg2-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@11CB0000 {
+		tdmb_irq_on: tdmb-irq-on {
+			samsung,pins = "gpa2-5";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+		};
+		tdmb_irq_off: tdmb-irq-off {
+			samsung,pins = "gpa2-5";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		spi3_idle: spi3-idle {
+			samsung,pins = "gpc2-5", "gpc2-4", "gpc2-7", "gpc2-6";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	spi_3: spi@13940000 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		num-cs = <1>;
+
+		dma-mode;
+		dmas = <&pdma0 25
+			&pdma0 24>;
+		dma-names = "tx", "rx";
+
+		status = "ok";
+
+		pinctrl-names = "default", "idle";
+		pinctrl-0 = <&spi3_bus &spi3_cs>;
+		pinctrl-1 = <&spi3_idle>;
+
+		tdmb-spi@0 {
+			compatible = "tdmb_spi_comp";
+			reg = <0>;
+			spi-max-frequency = <9600000>;
+			controller-data {
+				cs-gpio = <&gpc2 6 0>;
+				samsung,spi-feedback-delay = <0>;
+			};
+		};
+	};
+
+	tdmb_data {
+		compatible = "samsung,tdmb";
+		pinctrl-names = "tdmb_on", "tdmb_off";
+		pinctrl-0 = <&tdmb_pwr_on &tdmb_irq_on>;
+		pinctrl-1 = <&tdmb_pwr_off &tdmb_irq_off>;
+		tdmb_pwr_en = <&gpg2 4 0>;
+		tdmb_irq = <&gpa2 5 0>;
+		tdmb_use_irq;
+		tdmb_xtal_freq = <24000>;
+	};
+
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_03.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_03.dts
new file mode 100755
index 0000000000..aa1dd2bfea
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_03.dts
@@ -0,0 +1,197 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_03.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev04 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <3>;
+	model_info-hw_rev_end = <3>;
+	compatible = "samsung, JACKPOTLTE KOR rev04", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+	fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
+		gpio_reset = <&gpq0 1 0x1>; /* sensor reset - jackpot hw_rev = 000'b ~ 011'b */
+	};
+
+	/* sec-wf-thermistor */
+	sec_thermistor@6 {
+		status = "disabled";
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_04.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_04.dts
new file mode 100755
index 0000000000..73901b1de4
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_04.dts
@@ -0,0 +1,189 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_04.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <4>;
+	model_info-hw_rev_end = <4>;
+	compatible = "samsung, JACKPOTLTE KOR rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_05.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_05.dts
new file mode 100755
index 0000000000..ce7edbcfe3
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_05.dts
@@ -0,0 +1,175 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_05.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <5>;
+	model_info-hw_rev_end = <5>;
+	compatible = "samsung, JACKPOTLTE KOR rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_06.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_06.dts
new file mode 100755
index 0000000000..823e0e6cee
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_06.dts
@@ -0,0 +1,192 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_06.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev06 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <6>;
+	model_info-hw_rev_end = <6>;
+	compatible = "samsung, JACKPOTLTE KOR rev06", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	leds_ktd2692 {
+		compatible = "ktd2692";
+		flash_control = <&gpg1 2 0x1>;
+		max_current = <1360>; /* (IMax) */
+		flash_current = <1200>; /* (n/16)xIMax (1<=n<=16) */
+		movie_current = <175>; /* (n/16)*IMax/3 (1<=n<=16) */
+		factory_current = <175>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_current = <75>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_table_enable = <1>;
+		torch_table = <1 2 2 3 3 4 4 4 5 5>;
+		status = "okay";
+		pinctrl-names ="default","host","is";
+		pinctrl-0 = <&fimc_is_flash_is>;
+		pinctrl-1 = <&fimc_is_flash_host>;
+		pinctrl-2 = <&fimc_is_flash_is>;
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_07.dts b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_07.dts
new file mode 100755
index 0000000000..93bc425594
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_07.dts
@@ -0,0 +1,175 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_07.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev07 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <7>;
+	model_info-hw_rev_end = <255>;
+	compatible = "samsung, JACKPOTLTE KOR rev07", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_03.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_03.dtsi
new file mode 100755
index 0000000000..6902f87516
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_03.dtsi
@@ -0,0 +1,163 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_04.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_04.dtsi
new file mode 100755
index 0000000000..2b4676aa90
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_04.dtsi
@@ -0,0 +1,164 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_05.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_05.dtsi
new file mode 100755
index 0000000000..888d8795ca
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_05.dtsi
@@ -0,0 +1,170 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_06.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_06.dtsi
new file mode 100755
index 0000000000..c10ce93b6f
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_06.dtsi
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpa1-4, NONE, LV1);	/* BIXVY_KEY */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_07.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_07.dtsi
new file mode 100755
index 0000000000..c10ce93b6f
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_kor_gpio_07.dtsi
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpa1-4, NONE, LV1);	/* BIXVY_KEY */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_motor.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_motor.dtsi
new file mode 100755
index 0000000000..ad33d02171
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_motor.dtsi
@@ -0,0 +1,34 @@
+/*
+ * SAMSUNG UNIVERSAL8895 board device tree source
+ *
+ * Copyright (c) 2014 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/ {
+	haptic {
+		status = "okay";
+		haptic,model = <1>;
+		haptic,max_timeout = <10000>;
+		/* for multi-frequency */
+		haptic,multi_frequency = <7>;
+		/* frequency for drv haptic engine */
+		/* frequency   alert low  mid  high  0 */
+		/* frequency   157.86hz 120hz, 150hz, 200hz, 180hz press release*/
+		/* alert duty : 29% */
+		haptic,freq = <0x39 0x69 0x41 0x19 0x27 0x19 0x19>;
+		haptic,duty = <0x25 0x25 0x25 0x25 0x25 0x7c 0x7c>;
+
+		/* Haptic dont support motor */
+		haptic,period = <4807692>;
+		haptic,duty_rate = <2403846>;
+		haptic,pwm_id = <0>;
+		haptic,alert_duty = <0x5C>;
+	};
+};
+
+
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_mst_02.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_mst_02.dtsi
new file mode 100755
index 0000000000..352eb9daf5
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_mst_02.dtsi
@@ -0,0 +1,45 @@
+/* Copyright (c) 2013, Samsung Electronics Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/ {
+	sec-mst{
+		compatible = "sec-mst";
+		sec-mst,mst-pwr-gpio = <&gpg3 1 0>;
+		sec-mst,mst-en-gpio = <&gpp6 4 0>;
+		sec-mst,mst-data-gpio = <&gpp3 2 0>;
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&mst_pwr_en &mst_en &mst_data>;
+	};
+	
+	pinctrl@139B0000 {
+		mst_pwr_en: sec-mst,mst-pwr-gpio {
+			samsung,pins ="gpg3-1";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+		};
+	};
+	
+	pinctrl@139B0000 {
+		mst_en: sec-mst,mst-en-gpio {
+			samsung,pins ="gpp6-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+		};
+
+		mst_data: sec-mst,mst-data-gpio {
+			samsung,pins ="gpp3-2";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_svcled.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_svcled.dtsi
new file mode 100755
index 0000000000..d7b16d4465
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos7885-jackpotlte_svcled.dtsi
@@ -0,0 +1,23 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/ {
+	s2mu004_led {
+		status = "okay";
+		compatible = "s2mu004_led";
+		brightness = <100>;
+		lp_brightness = <100>;
+		nleds = <3>;
+		led_color = "RGB";
+		ratio = <18 7 45 0>;
+		ratio_low = <2 1 3 0>;
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtb/exynos_gpio_config_macros.dtsi b/arch/arm64/boot/dts/exynos/dtb/exynos_gpio_config_macros.dtsi
new file mode 100644
index 0000000000..2e3788c089
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/exynos_gpio_config_macros.dtsi
@@ -0,0 +1,81 @@
+/*
+ * SAMSUNG UNIVERSAL5430 board device tree source
+ *
+ * Copyright (c) 2014 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#define PIN_PULL_NONE		0
+#define PIN_PULL_DOWN		1
+#define PIN_PULL_UP		3
+
+#define PIN_DRV_LV1		0x0
+#define PIN_DRV_LV2		0x1
+#define PIN_DRV_LV3		0x2
+#define PIN_DRV_LV4		0x3
+#define PIN_DRV_LV5		0x4
+#define PIN_DRV_LV6		0x5
+#define PIN_DRV_SLOW_LV1	0x8
+#define PIN_DRV_SLOW_LV2	0x9
+#define PIN_DRV_SLOW_LV3	0xA
+#define PIN_DRV_SLOW_LV4	0xB
+#define PIN_DRV_SLOW_LV5	0xC
+#define PIN_DRV_SLOW_LV6	0xF
+
+#define PIN_PDN_OUT0		0
+#define PIN_PDN_OUT1		1
+#define PIN_PDN_INPUT		2
+#define PIN_PDN_PREV		3
+
+#define PIN_IN(_pin, _pull, _drv)			\
+	_pin {						\
+		samsung,pins = #_pin;			\
+		samsung,pin-function = <0>;		\
+		samsung,pin-pud = <PIN_PULL_ ##_pull>;	\
+		samsung,pin-drv = <PIN_DRV_ ##_drv>;	\
+	}
+
+#define PIN_OUT(_pin, _drv)				\
+	_pin {						\
+		samsung,pins = #_pin;			\
+		samsung,pin-function = <1>;		\
+		samsung,pin-pud = <0>;			\
+		samsung,pin-drv = <PIN_DRV_ ##_drv>;	\
+	}
+
+#define PIN_FUNC(_pin, _pull, _drv)			\
+	_pin {						\
+		samsung,pins = #_pin;			\
+		samsung,pin-function = <2>;		\
+		samsung,pin-pud = <PIN_PULL_ ##_pull>;	\
+		samsung,pin-drv = <PIN_DRV_ ##_drv>;	\
+	}
+
+#define PIN_OUT_SET(_pin, _val, _drv)			\
+	_pin {						\
+		samsung,pins = #_pin;			\
+		samsung,pin-function = <1>;		\
+		samsung,pin-pud = <0>;			\
+		samsung,pin-drv = <PIN_DRV_ ##_drv>;	\
+		samsung,pin-val	= <_val>;		\
+	}
+
+#define PIN_OUT_SET_PULL(_pin, _val, _drv, _pull)			\
+	_pin {						\
+		samsung,pins = #_pin;			\
+		samsung,pin-function = <1>;		\
+		samsung,pin-drv = <PIN_DRV_ ##_drv>;	\
+		samsung,pin-pud = <PIN_PULL_ ##_pull>;	\
+		samsung,pin-val	= <_val>;		\
+	}
+
+#define PIN_SLP(_pin, _mode, _pull)				\
+	_pin {							\
+		samsung,pins = #_pin;				\
+		samsung,pin-con-pdn = <PIN_PDN_ ##_mode>;	\
+		samsung,pin-pud-pdn = <PIN_PULL_ ##_pull>;	\
+	}
diff --git a/arch/arm64/boot/dts/exynos/dtb/modem-s327ap-sipc-pdata.dtsi b/arch/arm64/boot/dts/exynos/dtb/modem-s327ap-sipc-pdata.dtsi
new file mode 100644
index 0000000000..915be4c88a
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtb/modem-s327ap-sipc-pdata.dtsi
@@ -0,0 +1,417 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2016 Samsung Electronics Co., Ltd.
+ *             http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/ {
+	fragment@modemif {
+		target-path = "/";
+		__overlay__ {
+		#address-cells = <2>;
+		#size-cells = <1>;
+			/* modem_interface_driver: Samsung Electronics */
+			mif_pdata: mif_pdata {
+				/* modem main binary start offset */
+				reg = <0 0x10000 0x0>;
+
+				compatible = "sec_modem,modem_pdata";
+				status = "okay";
+				interrupts = <0 19 0>, <0 217 0>; /* INTREQ_ALIVE_CP_ACTIVE, INTREQ_CP2AP_RESET_REQ SPI Number*/
+
+				gpios = <&gpg3 7 0>, <&gpg4 0 0>, <&gpg4 1 0>; /* HW_REV0, HW_REV1, HW_REV2 */
+
+				/* common pdata */
+				mif,name = "s327ap";
+				mif,modem_net = <0>;		/* UMTS_NETWORK */
+				mif,modem_type = <10>;		/* SEC_SS310AP */
+				mif,use_handover = <0>;		/* not used */
+				mif,ipc_version = <50>;		/* SIPC 5.0 */
+				mif,link_types = <0x200>;	/* LINKDEV_SHMEM */
+				mif,link_name = "shmem";
+				mif,link_attrs = <0x7C9>;	/* XMIT_BTDLR(0x400) | DUMP_ALIGNED (0x200) | BOOT_ALIGNED (0x100) | MEM_DUMP (0x80) | MEM_BOOT (0x40) | DPRAM_MAGIC (0x08) | SBD_IPC (0x01) */
+				mif,num_iodevs = <22>;
+
+				/* mbox pdata */
+				mbx_ap2cp_msg = <0>;
+				mbx_cp2ap_msg = <1>;
+				mbx_ap2cp_united_status = <2>;
+				mbx_cp2ap_united_status = <3>;
+				mbx_ap2cp_mif_value = <4>;
+				mbx_ap2cp_kerneltime = <9>;
+
+				mif,int_ap2cp_msg = <0>;
+				mif,int_ap2cp_wakeup = <1>;
+				mif,int_ap2cp_status = <2>;
+				mif,int_ap2cp_active = <3>;
+
+				mif,irq_cp2ap_msg = <0>;
+				mif,irq_cp2ap_status = <2>;
+				mif,irq_cp2ap_active = <3>;
+				mif,irq_cp2ap_wakelock = <8>;
+
+				mif,int_ap2cp_uart_noti = <15>;
+
+				/* mbox pdata for performance request */
+				mbx_cp2ap_dvfsreq = <4>;
+				mbx_cp2ap_dvfsreq_cpu = <5>;
+				mbx_cp2ap_dvfsreq_mif = <6>;
+				mbx_cp2ap_dvfsreq_int = <7>;
+
+				mif,irq_cp2ap_perf_req_cpu = <5>; /* CP2AP_DVFSREQ_CPU */
+				mif,irq_cp2ap_perf_req_mif = <6>; /* CP2AP_DVFSREQ_MIF */
+				mif,irq_cp2ap_perf_req_int = <7>; /* CP2AP_DVFSREQ_INT */
+
+				/* mbox pdata for sbi(status bit info) */
+				sbi_cp_rat_mode_mask = <0x3f>;
+				sbi_cp_rat_mode_pos = <26>;
+				sbi_cp_evs_mode_mask = <0x1>;
+				sbi_cp_evs_mode_pos = <7>;
+				sbi_cp2ap_wakelock_mask = <0x1>;
+				sbi_cp2ap_wakelock_pos = <6>;
+				sbi_lte_active_mask = <0x1>;
+				sbi_lte_active_pos = <5>;
+				sbi_cp_status_mask = <0xf>;
+				sbi_cp_status_pos = <1>;
+				sbi_pda_active_mask = <0x1>;
+				sbi_pda_active_pos = <5>;
+				sbi_ap_status_mask = <0xf>;
+				sbi_ap_status_pos = <1>;
+
+				sbi_crash_type_mask = <0xf>;
+				sbi_crash_type_pos = <25>;
+				sbi_device_type_mask = <0x1f>;
+				sbi_device_type_pos = <20>;
+				/* Field 18, 19 used in usim_detect driver */
+				sbi_ext_backtrace_mask = <0x1>;
+				sbi_ext_backtrace_pos = <17>;
+				sbi_ds_det_mask = <0x3>;
+				sbi_ds_det_pos = <14>;
+				sbi_sys_rev_mask = <0xff>;
+				sbi_sys_rev_pos = <6>;
+
+				sbi_lockval_cp2ap_dvfsreq_endian_mask = <0x1>;
+				sbi_lockval_cp2ap_dvfsreq_endian_pos = <31>;
+				sbi_lockval_cp2ap_dvfsreq_index_mask = <0x7fff>;
+				sbi_lockval_cp2ap_dvfsreq_index_pos = <0>;
+
+				sbi_ap2cp_kerneltime_sec_mask = <0xfff>;
+				sbi_ap2cp_kerneltime_sec_pos = <20>;
+				sbi_ap2cp_kerneltime_usec_mask = <0xfffff>;
+				sbi_ap2cp_kerneltime_usec_pos = <0>;
+
+				sbi_uart_noti_mask = <0x1>;
+				sbi_uart_noti_pos = <16>;
+
+				iodevs {
+					io_device_0 {
+						iod,name = "umts_cass";
+						iod,id = <35>;
+						iod,format = <1>;
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x82>;
+						iod,max_tx_size = <2048>;
+						iod,ul_num_buffers = <16>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <16>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_1 {
+						iod,name = "umts_ipc0";
+						iod,id = <235>;
+						iod,format = <0>;		/* IPC_FMT */
+						iod,io_type = <0>;		/* IODEV_MISC */
+						iod,links = <0x200>;		/* LINKDEV_SHMEM */
+						iod,attrs = <0x82>;		/* ATTR_SBD_IPC | ATTR_SIPC5 */
+						iod,app = "RIL";
+						iod,ul_num_buffers = <16>;
+						iod,ul_buffer_size = <4096>;
+						iod,dl_num_buffers = <32>;
+						iod,dl_buffer_size = <4096>;
+					};
+					io_device_2 {
+						iod,name = "umts_ipc1";
+						iod,id = <236>;
+						iod,format = <0>;		/* IPC_FMT */
+						iod,io_type = <0>;		/* IODEV_MISC */
+						iod,links = <0x200>;		/* LINKDEV_SHMEM */
+						iod,attrs = <0x82>;		/* ATTR_SBD_IPC | ATTR_SIPC5 */
+						iod,app = "RIL";
+						iod,ul_num_buffers = <16>;
+						iod,ul_buffer_size = <4096>;
+						iod,dl_num_buffers = <32>;
+						iod,dl_buffer_size = <4096>;
+					};
+					io_device_3 {
+						iod,name = "umts_rfs0";
+						iod,id = <245>;
+						iod,format = <2>;		/* IPC_RFS */
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x82>;
+						iod,app = "RFS";
+						iod,ul_num_buffers = <16>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <512>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_4 {
+						iod,name = "umts_csd";
+						iod,id = <1>;
+						iod,format = <1>;
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x82>;
+						iod,app = "CSVT";
+						iod,ul_num_buffers = <32>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <64>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_5 {
+						iod,name = "umts_router";
+						iod,id = <25>;
+						iod,format = <1>;
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x82>;
+						iod,app = "Data Router";
+						iod,max_tx_size = <1550>;
+						iod,ul_num_buffers = <16>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <16>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_6 {
+						iod,name = "umts_dm0";
+						iod,id = <28>;
+						iod,format = <1>;
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x82>;
+						iod,app = "DIAG";
+						iod,ul_num_buffers = <16>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <128>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_7 {
+						iod,name = "rmnet0";
+						iod,id = <10>;
+						iod,format = <1>;
+						iod,io_type = <1>;		/* IODEV_NET */
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;		/* ATTR_SBD_IPC (0x80) | ATTR_NO_LINK_HDR(0x100) */
+						iod,app = "NET";
+						iod,ul_num_buffers = <0>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <0>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_8 {
+						iod,name = "rmnet1";
+						iod,id = <11>;
+						iod,format = <1>;
+						iod,io_type = <1>;
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;
+						iod,app = "NET";
+						iod,ul_num_buffers = <0>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <0>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_9 {
+						iod,name = "rmnet2";
+						iod,id = <12>;
+						iod,format = <1>;
+						iod,io_type = <1>;
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;
+						iod,app = "NET";
+						iod,ul_num_buffers = <0>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <0>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_10 {
+						iod,name = "rmnet3";
+						iod,id = <13>;
+						iod,format = <1>;
+						iod,io_type = <1>;
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;
+						iod,app = "NET";
+						iod,ul_num_buffers = <0>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <0>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_11 {
+						iod,name = "rmnet4";
+						iod,id = <14>;
+						iod,format = <1>;
+						iod,io_type = <1>;
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;	/* ATTR_NO_LINK_HDR(0x100) | ATTR_SBD_IPC (0x80) */
+						iod,ul_num_buffers = <0>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <0>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_12 {
+						iod,name = "rmnet5";
+						iod,id = <15>;
+						iod,format = <1>;
+						iod,io_type = <1>;
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;
+						iod,ul_num_buffers = <0>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <0>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_13 {
+						iod,name = "rmnet6";
+						iod,id = <16>;
+						iod,format = <1>;
+						iod,io_type = <1>;
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;
+						iod,ul_num_buffers = <0>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <0>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_14 {
+						iod,name = "rmnet7";
+						iod,id = <17>;
+						iod,format = <1>;
+						iod,io_type = <1>;
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;
+						iod,ul_num_buffers = <0>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <0>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_15 {
+						iod,name = "multipdp_hiprio";
+						iod,id = <0>;
+						iod,format = <3>;		/* IPC_MULTI_RAW */
+						iod,io_type = <2>;		/* IODEV_DUMMY */
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;
+						iod,app = "RIL";
+						iod,ul_num_buffers = <256>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <256>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_16 {
+						iod,name = "multipdp";
+						iod,id = <0>;
+						iod,format = <3>;		/* IPC_MULTI_RAW */
+						iod,io_type = <2>;		/* IODEV_DUMMY */
+						iod,links = <0x200>;
+						iod,attrs = <0x180>;		/* ATTR_SBD_IPC (0x80) | ATTR_NO_LINK_HDR (0x100) */
+						iod,app = "RIL";
+						iod,ul_num_buffers = <512>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <1024>;
+						iod,dl_buffer_size = <2048>;
+					};
+					io_device_17 {
+						iod,name = "umts_boot0";
+						iod,id = <215>;
+						iod,format = <4>;		/* IPC_BOOT */
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x02>;
+						iod,app = "CBD";
+					};
+					io_device_18 {
+						iod,name = "umts_ramdump0";
+						iod,id = <225>;
+						iod,format = <5>;		/* IPC_DUMP */
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x202>;		/* ATTR_NO_CHECK_MAXQ | ATTR_SIPC5 */
+						iod,app = "CBD";
+					};
+					io_device_19 {
+						iod,name = "umts_atc0";
+						iod,id = <32>;
+						iod,format = <1>;
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x882>;
+						iod,app = "VCD";
+						iod,max_tx_size = <2048>;
+						iod,ul_num_buffers = <16>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <128>;
+						iod,dl_buffer_size = <2048>;
+						iod,option_region = "usa_vzw";
+					};
+					io_device_20 {
+						iod,name = "smd4";
+						iod,id = <33>;
+						iod,format = <1>;
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x882>;
+						iod,ul_num_buffers = <16>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <128>;
+						iod,dl_buffer_size = <2048>;
+						iod,option_region = "kor_single";
+					};
+					io_device_21 {
+						iod,name = "umts_ciq0";
+						iod,id = <26>;
+						iod,format = <1>;
+						iod,io_type = <0>;
+						iod,links = <0x200>;
+						iod,attrs = <0x882>;
+						iod,ul_num_buffers = <16>;
+						iod,ul_buffer_size = <2048>;
+						iod,dl_num_buffers = <128>;
+						iod,dl_buffer_size = <2048>;
+						iod,option_region = "usa_single";
+					};
+				}; /* end of iodevs */
+			}; /* end of mif_pdata */
+
+			shmem: shmem@F6E00000 {
+				compatible = "samsung,exynos-shm_ipc";
+
+				shmem,cp_size = <0x6900000>; /* CP 105MB */
+				shmem,vss_size = <0x700000>; /* VSS 7MB */
+				shmem,ipc_offset = <0x7000000>; /* 112MB(CP 105MB + VSS 7MB) */
+				shmem,ipc_size = <0x800000>; /* 8MB */
+			};
+		};
+	};
+};
+
+&reserved_memory {
+	#address-cells = <2>;
+	#size-cells = <1>;
+
+	modem_if {
+		compatible = "exynos,modem_if";
+		reg = <0x0 0xF5400000 0x7800000>;
+	};
+
+	cp_ram_logging {
+		compatible = "exynos,cp_ram_logging";
+		reg = <0x0 0xFCC00000 0x2000000>;
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_03.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_03.dts
new file mode 100755
index 0000000000..f923a36a52
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_03.dts
@@ -0,0 +1,173 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_03.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev04 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <3>;
+	model_info-hw_rev_end = <3>;
+	compatible = "samsung, JACKPOTLTE CAN rev04", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
+		gpio_reset = <&gpq0 1 0x1>; /* sensor reset - jackpot hw_rev = 000'b ~ 011'b */
+	};
+
+	/* sec-wf-thermistor */
+	sec_thermistor@6 {
+		status = "disabled";
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_04.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_04.dts
new file mode 100755
index 0000000000..d6ec66d9e4
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_04.dts
@@ -0,0 +1,164 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_04.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <4>;
+	model_info-hw_rev_end = <4>;
+	compatible = "samsung, JACKPOTLTE CAN rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_05.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_05.dts
new file mode 100755
index 0000000000..64fb9547c2
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_05.dts
@@ -0,0 +1,151 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_05.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <5>;
+	model_info-hw_rev_end = <5>;
+	compatible = "samsung, JACKPOTLTE CAN rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_06.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_06.dts
new file mode 100755
index 0000000000..d16c444d94
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_06.dts
@@ -0,0 +1,168 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_06.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev06 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <6>;
+	model_info-hw_rev_end = <6>;
+	compatible = "samsung, JACKPOTLTE CAN rev06", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	leds_ktd2692 {
+		compatible = "ktd2692";
+		flash_control = <&gpg1 2 0x1>;
+		max_current = <1360>; /* (IMax) */
+		flash_current = <1200>; /* (n/16)xIMax (1<=n<=16) */
+		movie_current = <175>; /* (n/16)*IMax/3 (1<=n<=16) */
+		factory_current = <175>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_current = <75>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_table_enable = <1>;
+		torch_table = <1 2 2 3 3 4 4 4 5 5>;
+		status = "okay";
+		pinctrl-names ="default","host","is";
+		pinctrl-0 = <&fimc_is_flash_is>;
+		pinctrl-1 = <&fimc_is_flash_host>;
+		pinctrl-2 = <&fimc_is_flash_is>;
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_07.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_07.dts
new file mode 100755
index 0000000000..efd56b5a8a
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_07.dts
@@ -0,0 +1,151 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_can_open_gpio_07.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+#include "battery_data_jackpotlte_can.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE CAN rev07 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <7>;
+	model_info-hw_rev_end = <255>;
+	compatible = "samsung, JACKPOTLTE CAN rev07", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		abov@20 {
+			abov,firmware_name = "abov/a96t326_a5y18_can.fw";
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_03.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_03.dtsi
new file mode 100755
index 0000000000..d467960c85
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_03.dtsi
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* FM_LNA_EN */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_04.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_04.dtsi
new file mode 100755
index 0000000000..67c7d2da79
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_04.dtsi
@@ -0,0 +1,172 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* FM_LNA_EN */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_05.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_05.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_05.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_06.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_06.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_06.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_07.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_07.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_can_open_gpio_07.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_common.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_common.dtsi
new file mode 100755
index 0000000000..545315698a
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_common.dtsi
@@ -0,0 +1,2385 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos7885-rmem.dtsi"
+#include "exynos7885.dtsi"
+#include "exynos7885-display-lcd.dtsi"
+#include "modem-s327ap-sipc-pdata.dtsi"
+#include "battery_data_jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_motor.dtsi"
+#include "exynos7885-mali.dtsi"
+/ {
+	model = "Samsung Universal7885 board based on EXYNOS7885";
+	compatible = "samsung,exynos7885", "samsung,Universal7885";
+
+	ect {
+		parameter_address = <0x90000000>;
+		parameter_size = <0x19000>;
+	};
+
+	memory@80000000 {
+		device_type = "memory";
+		reg = <0x0 0x80000000 0x3DA00000>;
+	};
+
+	memory@C0000000 {
+		device_type = "memory";
+		reg = <0x0 0xC0000000 0x40000000>;
+	};
+
+	memory@880000000 {
+		device_type = "memory";
+		reg = <0x00000008 0x80000000 0x40000000>;
+	};
+
+	chosen {
+		bootargs = "console=ram root=/dev/ram0 clk_ignore_unused androidboot.hardware=samsungexynos7885 androidboot.selinux=permissive ess_setup=0x86000000 androidboot.debug_level=0x4948";
+		linux,initrd-start = <0x84000000>;
+		linux,initrd-end = <0x840FFFFF>;
+	};
+
+	fixed-rate-clocks {
+		oscclk {
+			compatible = "samsung,exynos7885-oscclk";
+			clock-frequency = <26000000>;
+		};
+	};
+
+	firmware {
+		android {
+			compatible = "android,firmware";
+			fstab {
+				compatible = "android,fstab";
+				system {
+					compatible = "android,system";
+					dev = "/dev/block/platform/13500000.dwmmc0/by-name/SYSTEM";
+					type = "ext4";
+					mnt_flags = "ro";
+					fsmgr_flags = "wait";
+				};
+				vendor {
+					compatible = "android,vendor";
+					dev = "/dev/block/platform/13500000.dwmmc0/by-name/VENDOR";
+					type = "ext4";
+					mnt_flags = "ro";
+					fsmgr_flags = "wait";
+				};
+			};
+		};
+	};
+
+	/* USI MODE SETTINGS
+
+	usi_mode = "hsi2c0" or "hsi2c1" or "spi" or "uart"
+	or "hsi2c0_hsi2c1" or "uart_hsi2c1"
+	*/
+	usi_0: usi@10032000 {
+		usi_mode = "spi";
+		status = "okay";
+	};
+
+	usi_1: usi@10032004 {
+		usi_mode = "spi";
+		status = "okay";
+	};
+
+	usi_2: usi@10032008 {
+		usi_mode = "spi";
+		status = "okay";
+	};
+
+	serial_1: uart@13810000 {
+		status = "disabled";
+	};
+
+	fm@14840000 {
+		num-volume-level = <16>;
+		val-vol-level = <0 11 16 23 32 45 64
+				 90 128 181 256 362
+				 512 724 1024 1400>;
+	};
+
+	pinctrl@11CB0000 {
+		pmic_irq: pmic-irq {
+			samsung,pins = "gpa2-0";
+			samsung,pin-pud = <3>;
+			samsung,pin-drv = <3>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		/* Warm reset information from AP */
+		pm_wrsti: pm-wrsti {
+			samsung,pins = "gpg1-1";
+			samsung,pin-con-pdn = <3>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		/* SPI_FP */
+		spi1_bus_inactive: spi1-bus-inactive {
+			samsung,pins = "gpp6-0", "gpp6-1", "gpp6-3";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_miso_inactive: spi1-miso-inactive {
+			samsung,pins = "gpp6-2";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_clk: spi1-clk {
+			samsung,pins = "gpp6-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_cs: spi1-cs {
+			samsung,pins = "gpp6-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <3>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_miso: spi1-miso {
+			samsung,pins = "gpp6-2";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <2>;
+		};
+		spi1_mosi: spi1-mosi {
+			samsung,pins = "gpp6-3";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+	};
+
+	but_zones: but_zones {
+		#list-but-cells = <3>;
+	};
+
+	speedy@11CE0000 {
+		status = "okay";
+		audio_codec_cod3035x: cod3035x@03 {
+			compatible = "codec,cod3035x";
+			reg = <0x03>;
+			i2c-speedy-address;
+			vdd-supply = <&l36_reg>;
+			pinctrl-names = "default";
+			mic-bias1-voltage = <3>;
+			mic-bias2-voltage = <1>;
+			mic-bias-ldo-voltage = <3>;
+			use-btn-adc-mode;
+			use-det-gdet-adc-mode = <1>;
+			jack-imp-tuning = <7>;
+			io-channels = <&exynos_adc 3>,<&exynos_adc 7>;
+			io-channel-names = "adc-ear","adc-gdet";
+			#io-channel-cells = <1>;
+			io-channel-ranges;
+			but-zones-list = <&but_zones 226 0 376>,
+							 <&but_zones 582 377 447>,
+							 <&but_zones 115 448 627>,
+							 <&but_zones 114 628 1161>;
+			mic-adc-range = <1404>;
+			btn-release-value = <1404>;
+		};
+
+		s2mpu08mfd@00 {
+			compatible = "samsung,s2mpu08mfd";
+			acpm-ipc-channel = <2>;
+			i2c-speedy-address;
+			s2mpu08,wakeup = "enabled";
+			s2mpu08,irq-gpio = <&gpa2 0 0>;
+			reg = <0x00>;
+			interrupts = <2 0 0>;
+			interrupt-parent = <&gpa2>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&pmic_irq &pm_wrsti>;
+			/* RTC: wtsr/smpl */
+			wtsr_en = "enabled"; /* enable */
+			smpl_en = "enabled"; /* enable */
+			wtsr_timer_val = <3>;	/* 1000ms */
+			smpl_timer_val = <0>;	/* 100ms */
+			check_jigon = <0>; /* do not check jigon */
+			/* RTC: If it's first boot, reset rtc to 1/1/2017 12:00:00(Sun) */
+			init_time,sec = <0>;
+			init_time,min = <0>;
+			init_time,hour = <12>;
+			init_time,mday = <1>;
+			init_time,mon = <0>;
+			init_time,year = <117>;
+			init_time,wday = <0>;
+
+			samsung,codec-interrupt = <&audio_codec_cod3035x>;
+
+			regulators {
+				b1_reg: BUCK1 {
+					regulator-name = "vdd_mif";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1100000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <2>;
+				};
+
+				b2_reg: BUCK2 {
+					regulator-name = "vdd_cpucl0";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				b3_reg: BUCK3 {
+					regulator-name = "vdd_cpucl1_2";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				b4_reg: BUCK4 {
+					regulator-name = "vdd_int";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1200000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <2>;
+				};
+
+				b5_reg: BUCK5 {
+					regulator-name = "vdd_g3d";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				b6_reg: BUCK6 {
+					regulator-name = "vdd2_mem";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				b7_reg: BUCK7 {
+					regulator-name = "vdd_lldo";
+					regulator-min-microvolt = <1200000>;
+					regulator-max-microvolt = <1500000>;
+					regulator-always-on;
+					regulator-boot-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				b8_reg: BUCK8 {
+					regulator-name = "vdd_mldo";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <2100000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l1_reg: LDO1 {
+					regulator-name = "vdd_ldo1";
+					regulator-min-microvolt = <700000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l2_reg: LDO2 {
+					regulator-name = "vqmmc";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3375000>;
+					regulator-ramp-delay = <12000>;
+				};
+
+				l3_reg: LDO3 {
+					regulator-name = "vdd_ldo3";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l4_reg: LDO4 {
+					regulator-name = "vdd_ldo4";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l5_reg: LDO5 {
+					regulator-name = "vdd_ldo5";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1350000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l6_reg: LDO6 {
+					regulator-name = "vdd_ldo6";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1350000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l7_reg: LDO7 {
+					regulator-name = "vdd_ldo7";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l8_reg: LDO8 {
+					regulator-name = "vdd_ldo8";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l9_reg: LDO9 {
+					regulator-name = "vdd_ldo9";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l10_reg: LDO10 {
+					regulator-name = "vdd_ldo10";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l11_reg: LDO11 {
+					regulator-name = "vdd_ldo11";
+					regulator-min-microvolt = <500000>;
+					regulator-max-microvolt = <1300000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l12_reg: LDO12 {
+					regulator-name = "vdd_ldo12";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1350000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l13_reg: LDO13 {
+					regulator-name = "vdd_ldo13";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l14_reg: LDO14 {
+					regulator-name = "vdd_ldo14";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3375000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <1>;
+				};
+
+				l33_reg: LDO33 {
+					regulator-name = "vdd_ldo33";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l34_reg: LDO34 {
+					regulator-name = "vdd_ldo34";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3375000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l35_reg: LDO35 {
+					regulator-name = "vmmc";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3000000>;
+					regulator-ramp-delay = <12000>;
+				};
+
+				l36_reg: LDO36 {
+					regulator-name = "vdd_ldo36";
+					regulator-min-microvolt = <800000>;
+					regulator-max-microvolt = <1950000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+
+				l37_reg: LDO37 {
+					regulator-name = "vdd_ldo37";
+					regulator-min-microvolt = <1800000>;
+					regulator-max-microvolt = <3375000>;
+					regulator-always-on;
+					regulator-ramp-delay = <12000>;
+					regulator-initial-mode = <3>;
+				};
+			};
+		};
+	};
+
+	sec_thermistor@0 {
+		compatible = "samsung,sec-ap-thermistor";
+		status = "okay";
+
+		adc_array = <235 308 378 395 467 568 603 648 698 764
+				908 1066 1170 1242 1327 1430 1633 1830 2061 2282
+				2409 2500 2584 2697 2880 3069 3213 3337 3447>;
+		temp_array = <900 850 800 750 700 650 620 600 580 550
+				500 450 420 400 380 350 300 250 200 150
+				120 100 80 50 0 (-50) (-100) (-150) (-200)>;
+		io-channels = <&exynos_adc 0>;
+		io-channel-names = "adc-ap-temp";
+		io-channel-ranges;
+	};
+
+	sec_thermistor@6 {
+		compatible = "samsung,sec-wf-thermistor";
+		status = "okay";
+
+		adc_array = <235 308 378 395 467 568 603 648 698 764
+				908 1066 1170 1242 1327 1430 1633 1830 2061 2282
+				2409 2500 2584 2697 2880 3069 3213 3337 3447>;
+		temp_array = <900 850 800 750 700 650 620 600 580 550
+				500 450 420 400 380 350 300 250 200 150
+				120 100 80 50 0 (-50) (-100) (-150) (-200)>;
+		io-channels = <&exynos_adc 6>;
+		io-channel-names = "adc-wf-temp";
+		io-channel-ranges;
+	};
+
+	exynos_rgt {
+		compatible = "samsung,exynos-rgt";
+	};
+
+	serial_2: uart@13820000 {
+		status = "okay";
+	};
+
+	pinctrl@11CB0000 {
+		dwmmc2_cd_ext_irq: dwmmc2_cd_ext_irq {
+			samsung,pins = "gpa0-7";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <3>;
+		};
+	};
+
+	dwmmc0@13500000 {
+		status = "okay";
+		num-slots = <1>;
+		broken-cd;
+		fixed_voltage;
+		supports-highspeed;
+		mmc-ddr-1_8v;
+		mmc-hs200-1_8v;
+		mmc-hs400-1_8v;
+		supports-8bit;
+		supports-cmd23;
+		supports-erase;
+		supports-hs400-enhanced-strobe;
+		card-init-hwacg-ctrl;
+		support-cmdq;
+		qos-dvfs-level = <100000>;
+		fifo-depth = <0x40>;
+		non-removable;
+		desc-size = <4>;
+		card-detect-delay = <200>;
+		samsung,dw-mshc-ciu-div = <3>;
+		samsung,dw-mshc-txdt-crc-timer-fastlimit = <0x13>;
+		samsung,dw-mshc-txdt-crc-timer-initval = <0x15>;
+		samsung,dw-mshc-hs400-delay-line = <0x60>;
+		samsung,dw-mshc-sdr-timing = <3 0 4 0>;
+		samsung,dw-mshc-ddr-timing = <3 0 4 2>;
+		samsung,dw-mshc-hs200-timing = <3 0 3 0>;
+		samsung,dw-mshc-hs400-timing = <1 0 2 0>;
+		samsung,dw-mshc-hs400-ulp-timing = <3 0 2 0>;
+
+		num-ref-clks = <12>;
+		ciu_clkin = <25 50 50 25 50 100 200 50 50 200 200 200>;
+
+		/* Swapping clock drive strength */
+		clk-drive-number = <4>;
+		pinctrl-names = "default",
+			"fast-slew-rate-1x",
+			"fast-slew-rate-2x",
+			"fast-slew-rate-3x",
+			"fast-slew-rate-4x";
+		pinctrl-0 = <&sd0_clk &sd0_cmd &sd0_rdqs &sd0_bus1 &sd0_bus4 &sd0_bus8>;
+		pinctrl-1 = <&sd0_clk_fast_slew_rate_1x>;
+		pinctrl-2 = <&sd0_clk_fast_slew_rate_2x>;
+		pinctrl-3 = <&sd0_clk_fast_slew_rate_3x>;
+		pinctrl-4 = <&sd0_clk_fast_slew_rate_4x>;
+		slot@0 {
+			reg = <0>;
+			bus-width = <8>;
+		};
+
+	};
+
+	dwmmc1@13510000 {
+		status = "disabled";
+		num-slots = <1>;
+		channel = <1>;
+		fixed_voltage;
+		enable-cclk-on-suspend;
+		caps-control;
+		supports-highspeed;
+		supports-4bit;
+		keep-power-in-suspend;
+		pm-ignore-notify;
+		card-detect-type-external;
+		use-broken-voltage;
+		fifo-depth = <0x40>;
+		card-detect-delay = <200>;
+		qos-dvfs-level = <100000>;
+		data-timeout = <200>;
+		hto-timeout = <80>;
+		samsung,dw-mshc-ciu-div = <3>;
+		samsung,dw-mshc-sdr-timing = <3 0 2 0>;
+		samsung,dw-mshc-ddr-timing = <3 0 2 1>;
+		samsung,dw-mshc-sdr50-timing = <3 0 4 2>;
+		samsung,dw-mshc-sdr104-timing = <3 0 3 0>;
+
+		num-ref-clks = <9>;
+		ciu_clkin = <25 50 50 25 50 100 200 50 50>;
+
+		clk-drive-number = <4>;
+		pinctrl-names = "default",
+			"fast-slew-rate-1x",
+			"fast-slew-rate-2x",
+			"fast-slew-rate-3x",
+			"fast-slew-rate-4x";
+		pinctrl-0 = <&sd1_clk &sd1_cmd &sd1_bus1 &sd1_bus4>;
+		pinctrl-1 = <&sd1_clk_fast_slew_rate_1x>;
+		pinctrl-2 = <&sd1_clk_fast_slew_rate_2x>;
+		pinctrl-3 = <&sd1_clk_fast_slew_rate_3x>;
+		pinctrl-4 = <&sd1_clk_fast_slew_rate_4x>;
+		slot@0 {
+			reg = <0>;
+			bus-width = <4>;
+		};
+	};
+
+	tsp_ldo_en {
+		compatible = "regulator-fixed";
+		regulator-name = "tsp_ldo_en";
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		gpio = <&gpg3 0 0>;
+		enable-active-high;
+		regulator-boot-on;
+	};
+
+	i2c_4:i2c@13870000 {
+		status = "okay";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		samsung,i2c-sda-delay = <100>;
+		samsung,i2c-max-bus-freq = <400000>;
+		samsung,stop-after-trans;	/* LSI IC ONLY */
+		touchscreen@48 {
+			compatible = "sec,sec_ts";
+			reg = <0x48>;
+			pinctrl-names = "on_state", "off_state";
+			pinctrl-0 = <&attn_irq>;
+			pinctrl-1 = <&attn_input>;
+			sec,tsp-id_gpio = <&gpg3 6 0>;
+			sec,irq_gpio = <&gpa0 0 0>;
+			sec,irq_type = <8200>;
+			sec,num_lines = <30 15>;        /* rx tx */
+			sec,max_coords = <4096 4096>;   /* x y */
+			sec,use_ic_resolution;
+			sec,mis_cal_check = <1>;
+			sec,use_gpio_ldo;
+			sec,regulator_avdd = "tsp_ldo_en";
+			sec,regulator_boot_on;
+			sec,grip_area = <512>;
+			sec,bringup = <3>;
+			sec,project_name = "JACKPOT1", "A530";
+			sec,firmware_name = "tsp_sec/y661_a5y18.fw", "tsp_sec/y661_a5y18.fw";
+			sec,tclm_level = <2>;
+			sec,afe_base = <0x05>;
+			status = "okay";
+		};
+	};
+
+	pinctrl@11CB0000 {
+		attn_irq: attn-irq {
+			samsung,pins = "gpa0-0";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+		attn_input: attn-input {
+			samsung,pins = "gpa0-0";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+		};
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+		cfg_input: cfg-input {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		fimc_is_flash_host: fimc-is-flash-host {
+			samsung,pins = "gpg1-2";
+			samsung,pin-function = <1>; /* 0: input, 1:output*/
+			samsung,pin-pud = <0>; /* 0: NP, 1: PD, 2: reserved 3:PU */
+			samsung,pin-drv = <0>;
+		};
+		fimc_is_flash_is: fimc-is-flash-is {
+			samsung,pins = "gpg1-2";
+			samsung,pin-function = <0>; /* 0: input, 1:output*/
+			samsung,pin-pud = <1>; /* 0: NP, 1: PD, 2: reserved 3:PU */
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		grip_ldo_en: grip-ldo-en {
+			samsung,pins = "gpg2-5";
+			samsung,pin-function = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-con-pdn =<3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		/* touchkey i2c*/
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+		cfg_gpio: cfg_gpio {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		status = "okay";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		samsung,i2c-sda-delay = <100>;
+		samsung,i2c-max-bus-freq = <400000>;
+		pinctrl-names = "default","on_i2c","off_i2c";
+		pinctrl-0 = <&cfg_i2c>;
+		pinctrl-1 = <&cfg_i2c>;
+		pinctrl-2 = <&cfg_gpio>;
+		abov@20 {
+			status = "okay";
+			compatible = "abov,a96t3x6";
+			pinctrl-names = "on_irq", "off_irq";
+			pinctrl-0 = <&cfg_irq &grip_ldo_en>;
+			pinctrl-1 = <&cfg_input>;
+			reg = <0x20>;
+			abov,sda-gpio = <&gpp4 2 0>;
+			abov,scl-gpio = <&gpp4 3 0>;
+			abov,irq-gpio = <&gpa2 7 0>;
+			abov,tkey_en-gpio = <&gpg2 5 0>;
+			abov,firmware_name = "abov/a96t326_a5y18.fw";
+			abov,firmup_cmd = <0x32>;
+			abov,ta-notifier;
+			abov,not_support_key;
+			abov,bringup = <0>;
+		};
+	};
+
+	dwmmc2@13550000 {
+		status = "okay";
+		num-slots = <1>;
+		supports-4bit;
+		supports-cmd23;
+		supports-erase;
+		supports-highspeed;
+		sd-uhs-sdr50;
+		sd-uhs-sdr104;
+		card-detect-gpio;
+		card-no-pre-powerup;
+		bypass-for-allpass;
+		card-init-hwacg-ctrl;
+		skip-init-mmc-scan;
+		qos-dvfs-level = <100000>;
+		qos-sd3-dvfs-level = <267000>;
+		fifo-depth = <0x40>;
+		desc-size = <4>;
+		card-detect-delay = <200>;
+		data-timeout = <200>;
+		hto-timeout = <80>;
+		samsung,dw-mshc-ciu-div = <3>;
+		clock-frequency = <800000000>;
+		samsung,dw-mshc-sdr-timing = <3 0 2 0>;
+		samsung,dw-mshc-ddr-timing = <3 0 2 1>;
+		samsung,dw-mshc-sdr50-timing = <3 0 4 2>;
+		samsung,dw-mshc-sdr104-timing = <3 0 3 0>;
+
+		num-ref-clks = <9>;
+		ciu_clkin = <25 50 50 25 50 100 200 50 50>;
+
+		/* Swapping clock drive strength */
+		clk-drive-number = <4>;
+		pinctrl-names = "default",
+			"fast-slew-rate-1x",
+			"fast-slew-rate-2x",
+			"fast-slew-rate-3x",
+			"fast-slew-rate-4x";
+		pinctrl-0 = <&sd2_clk &sd2_cmd &sd2_bus1 &sd2_bus4 &dwmmc2_cd_ext_irq>;
+		pinctrl-1 = <&sd2_clk_fast_slew_rate_1x>;
+		pinctrl-2 = <&sd2_clk_fast_slew_rate_2x>;
+		pinctrl-3 = <&sd2_clk_fast_slew_rate_3x>;
+		pinctrl-4 = <&sd2_clk_fast_slew_rate_4x>;
+
+		card-detect = <&gpa0 7 0xf>;
+		sec-sd-slot-type = <2>; /* Hybrid Tray SD slot */
+
+		slot@0 {
+			reg = <0>;
+			bus-width = <4>;
+			disable-wp;
+		};
+
+	};
+
+	pinctrl@11CB0000 {
+		key_power: key-power {
+			samsung,pins = "gpa1-7";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		key_voldown: key-voldown {
+			samsung,pins = "gpa1-6";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		key_volup: key-volup {
+			samsung,pins = "gpa1-5";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		hall_irq: hall-irq {
+			samsung,pins = "gpa0-3";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		certify_hall_irq: certify-hall-irq {
+			samsung,pins = "gpa0-4";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	flip_cover {
+		status = "okay";
+		compatible = "flip_cover";
+		pinctrl-names = "default";
+		pinctrl-0 = <&hall_irq &certify_hall_irq>;
+		hall {
+			name = "hall";
+			event = <0x15>;
+			gpios = <&gpa0 3 0>;
+		};
+		certify_hall {
+			name = "certify_hall";
+			event = <0x1b>;
+			gpios = <&gpa0 4 0xf>;
+		};
+	};
+
+	gpio_keys {
+		status = "okay";
+		compatible = "gpio-keys";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&key_voldown &key_volup &key_power>;
+		button@1 {
+			label = "gpio-keys: KEY_VOLUMEDOWN";
+			interrupts = <6 0 0>;
+			interrupt-parent = <&gpa1>;
+			linux,code = <114>;
+			gpios = <&gpa1 6 0xf>;
+		};
+		button@2 {
+			label = "gpio-keys: KEY_VOLUMEUP";
+			interrupts = <5 0 0>;
+			interrupt-parent = <&gpa1>;
+			linux,code = <115>;
+			gpios = <&gpa1 5 0xf>;
+		};
+		button@3 {
+			label = "gpio-keys: KEY_POWER";
+			interrupts = <7 0 0>;
+			interrupt-parent = <&gpa1>;
+			linux,code = <116>;
+			gpios = <&gpa1 7 0xf>;
+			gpio-key,wakeup = <1>;
+		};
+
+	};
+
+	sec_abc {
+		compatible = "samsung,sec_abc";
+		status = "okay";
+
+		gpu {
+			gpu,label="GPU fault";
+			gpu,threshold_count=<20>;
+			gpu,threshold_time=<1200>;
+		};
+		aicl {
+			aicl,label="battery aicl";
+			aicl,threshold_count=<5>;
+			aicl,threshold_time=<300>;
+		};
+	};
+
+	dsim_0: dsim@0x14870000 {
+		lcd_info = <&s6e3fa7>;
+		decon_board = <&decon_board>;
+	};
+
+	s6e3fa7: s6e3fa7_fhd {
+		size = <62 128>;	/* 62.10 x 127.65 */
+	};
+
+	decon_board: decon_board {
+		gpio_ldo_3p0 = <&gpg2 7 0x1>;
+		gpio_vddr_en = <&gpg2 6 0x1>;
+		gpio_lcd_rst = <&gpg1 7 0x1>;
+
+		dsim_set_panel_power_enable {
+			type =
+			"gpio,high",	"gpio_ldo_3p0",
+			"delay,usleep",	"1000 1100",
+			"gpio,high",	"gpio_vddr_en",
+			"delay,usleep",	"10000 11000";
+		};
+		dsim_set_panel_power_disable {
+			type =
+			"gpio,low",	"gpio_lcd_rst",
+			"delay,usleep",	"10000 11000",
+			"gpio,low",	"gpio_vddr_en",
+			"delay,usleep",	"1000 1100",
+			"gpio,low",	"gpio_ldo_3p0",
+			"delay,usleep",	"5000 6000";
+		};
+		dsim_reset_panel {
+			type =
+			"delay,usleep",	"1000 1100",
+			"gpio,high",	"gpio_lcd_rst",
+			"delay,usleep",	"5000 6000",
+			"gpio,low",	"gpio_lcd_rst",
+			"delay,usleep",	"5000 6000",
+			"gpio,high",	"gpio_lcd_rst",
+			"delay,usleep",	"10000 11000";
+		};
+	};
+
+	decon_f: decon_f@0x14860000 {
+		gpio_det = <&gpa0 1 0x1>;
+		gpio_pcd = <&gpa0 6 0x1>;
+		gpio_err = <&gpa1 1 0x1>;
+	};
+
+	usb@13600000 {
+		status = "okay";
+		dwc3 {
+			dr_mode = "otg";
+			maximum-speed = "high-speed";
+			snps,quirk-frame-length-adjustment = <0x20>;
+		};
+	};
+
+	phy@135D0000 {
+		status = "okay";
+		hs_tune_param = <&usb_hs_tune>;
+	};
+
+	usb_hs_tune:hs_tune {
+		hs_tune_cnt = <12>;
+
+		/* value = <device host> */
+		hs_tune1 {
+			tune_name = "tx_vref";
+			tune_value = <0xd 0x1>;
+		};
+
+		hs_tune2 {
+			tune_name = "tx_pre_emp";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune3 {
+			tune_name = "tx_pre_emp_plus";
+			tune_value = <0x0 0x0>;
+		};
+
+		hs_tune4 {
+			tune_name = "tx_res";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune5 {
+			tune_name = "tx_rise";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune6 {
+			tune_name = "tx_hsxv";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune7 {
+			tune_name = "tx_fsls";
+			tune_value = <0x3 0x3>;
+		};
+
+		hs_tune8 {
+			tune_name = "rx_sqrx";
+			tune_value = <0x7 0x7>;
+		};
+
+		hs_tune9 {
+			tune_name = "compdis";
+			tune_value = <0x7 0x7>;
+		};
+
+		hs_tune10 {
+			tune_name = "otg";
+			tune_value = <0x2 0x2>;
+		};
+
+		hs_tune11 {
+		/* true : 1, false: 0 */
+		/* <enable_user_imp user_imp_value> */
+			tune_name = "enable_user_imp";
+			tune_value = <0x0 0x0>;
+		};
+
+		hs_tune12 {
+		/* PHY clk : 1 , FREE clk : 0 */
+			tune_name = "is_phyclock";
+			tune_value = <0x1 0x1>;
+		};
+	};
+
+	mailbox_cp: mcu_ipc@12080000 {
+		compatible = "samsung,exynos-shd-ipc-mailbox";
+		reg = <0x0 0x12080000 0x180>;
+		mcu,name = "mcu_ipc_cp";
+		mcu,id = <0>;
+		interrupts = <0 55 0 >; /* MAILBOX_CP_TO_AP SPI Number */
+	};
+
+	mailbox_gnss: mcu_ipc@120D0000 {
+		compatible = "samsung,exynos-shd-ipc-mailbox";
+		reg = <0x0 0x120D0000 180>;
+		mcu,name = "mcu_ipc_gnss";
+		mcu,id = <1>;
+		interrupts = <GIC_SPI 56 IRQ_TYPE_NONE>;
+	};
+
+	gnss_pdata {
+		status = "okay";
+
+		compatible = "samsung,gnss_shdmem_if";
+		shmem,name = "KEPLER";
+		shmem,device_node_name = "gnss_ipc";
+
+		/* ACTIVE WATCHDOG WAKEUP */
+		interrupts = <GIC_SPI 20 IRQ_TYPE_NONE>,
+			     <GIC_SPI 165 IRQ_TYPE_NONE>,
+			     <GIC_SPI 164 IRQ_TYPE_NONE>;
+		interrupt-names = "ACTIVE", "WATCHDOG", "WAKEUP";
+
+		memory-region = <&gnss_reserved>;
+		mbox_info = <&mailbox_gnss>;
+
+		mbx,int_ap2gnss_bcmd = <0>;
+		mbx,int_ap2gnss_req_fault_info = <1>;
+		mbx,int_ap2gnss_ipc_msg = <2>;
+		mbx,int_ap2gnss_ack_wake_set = <3>;
+		mbx,int_ap2gnss_ack_wake_clr = <4>;
+
+		mbx,irq_gnss2ap_bcmd = <0>;
+		mbx,irq_gnss2ap_rsp_fault_info = <1>;
+		mbx,irq_gnss2ap_ipc_msg = <2>;
+		mbx,irq_gnss2ap_req_wake_clr = <4>;
+
+		mbx,reg_bcmd_ctrl = <0>, <1>, <2>, <3>;
+
+		reg_rx_ipc_msg = <1 5>;
+		reg_tx_ipc_msg = <1 4>;
+		reg_rx_head = <1 3>;
+		reg_rx_tail = <1 2>;
+		reg_tx_head = <1 1>;
+		reg_tx_tail = <1 0>;
+		fault_info = <1 0x200000 0x180000>;
+
+		shmem,ipc_offset = <0x380000>;
+		shmem,ipc_size = <0x80000>;
+		shmem,ipc_reg_cnt = <32>;
+
+		/* Use the following value when can't boot with mailbox */
+		shmem,boot_without_mbox = <1>; /* Default : 0 */
+	};
+
+	usb_notifier {
+		compatible = "samsung,usb-notifier";
+		udc = <&udc>;
+	};
+
+	i2c@13840000{
+		status = "okay";
+		s2mu004@3D {
+			status = "okay";
+			compatible = "samsung,s2mu004mfd";
+			reg = <0x3D>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&if_pmic_irq>;
+			s2mu004,irq-gpio = <&gpa2 2 1>;
+			s2mu004,wakeup;
+		};
+	};
+
+	fimc_is@14440000 {
+		pinctrl-names = "default","release";
+		pinctrl-0 = <&fimc_is_mclk0_out &fimc_is_mclk1_out &fimc_is_mclk2_out>;
+		pinctrl-1 = <>;
+
+		vender {
+			rear_sensor_id = <58>; /* SENSOR_NAME_S5K2P6 */
+			front_sensor_id = <44>; /* SENSOR_NAME_S5K3P8SP */
+			front2_sensor_id = <208>; /* SENSOR_NAME_SR846 */
+			use_module_check;
+			check_sensor_vendor;
+			/*skip_cal_loading;*/
+
+			max_camera_num = <6>;
+			camera_info0 {				// 0 : rear - 2p6
+				isp = <0>;			/* 0 : INT , 1 : EXT , 2 : SOC */
+				cal_memory = <2>;		/* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
+				read_version = <0>;		/* 0 : SYSFS , 1 : CAMON */
+				core_voltage = <0>;		/* 0 : N , 1 : Y  */
+				upgrade = <0>;			/* 0 : N , 1 : SYSFS , 2 : CAMON */
+				companion = <0>;		/* 0 : N , 1 : Y  */
+				ois = <0>;			/* 0 : N , 1 : Y  */
+				valid = <1>;			/* 0 : INVALID, 1 : VALID */
+				dual_open = <0>;		/* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
+			};
+			camera_info1 {				// 1 : front1 - 3p8sp
+				isp = <0>;			/* 0 : INT , 1 : EXT , 2 : SOC */
+				cal_memory = <2>;		/* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
+				read_version = <0>;		/* 0 : SYSFS , 1 : CAMON */
+				core_voltage = <0>;		/* 0 : N , 1 : Y  */
+				upgrade = <0>;			/* 0 : N , 1 : SYSFS , 2 : CAMON */
+				companion = <0>;		/* 0 : N , 1 : Y  */
+				ois = <0>;			/* 0 : N , 1 : Y  */
+				valid = <1>;			/* 0 : INVALID, 1 : VALID */
+				dual_open = <0>;		/* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
+			};
+			camera_info5 {				// 1 : front2 - sr846
+				isp = <0>;			/* 0 : INT , 1 : EXT , 2 : SOC */
+				cal_memory = <2>;		/* 0 : N , 1 : FROM , 2 : EEPROM , 3 : OTP  */
+				read_version = <0>;		/* 0 : SYSFS , 1 : CAMON */
+				core_voltage = <0>;		/* 0 : N , 1 : Y  */
+				upgrade = <0>;			/* 0 : N , 1 : SYSFS , 2 : CAMON */
+				companion = <0>;		/* 0 : N , 1 : Y  */
+				ois = <0>;			/* 0 : N , 1 : Y  */
+				valid = <1>;			/* 0 : INVALID, 1 : VALID */
+				dual_open = <1>;		/* 0 : SINGLE_OPEN , 1 : DUAL_OPEN */
+			};
+		};
+
+		fimc_is_dvfs {
+			/* TODO: DVFS level set */
+			#define DVFS_INT_L0 533000
+			#define DVFS_INT_L1 333000
+			#define DVFS_INT_L2 267000
+			#define DVFS_INT_L3 133000
+			#define DVFS_INT_L4 107000
+
+			#define DVFS_CAM_L0 690000
+			#define DVFS_CAM_L1 680000
+			#define DVFS_CAM_L2 670000
+			#define DVFS_CAM_L3 660000
+			#define DVFS_CAM_L4 650000
+
+			#define DVFS_MIF_L0 2093000
+			#define DVFS_MIF_L1 2002000
+			#define DVFS_MIF_L2 1794000
+			#define DVFS_MIF_L3 1539000
+			#define DVFS_MIF_L4 1352000
+			#define DVFS_MIF_L5 1014000
+			#define DVFS_MIF_L6 845000
+			#define DVFS_MIF_L7 676000
+			#define DVFS_MIF_L8 546000
+			#define DVFS_MIF_L9 420000
+
+			table0 {
+				desc = "default";
+
+				default_int = <DVFS_INT_L0>;
+				default_cam = <DVFS_CAM_L0>;
+				default_mif = <DVFS_MIF_L0>;
+				default_i2c = <0>;
+
+				front2_preview_int = <DVFS_INT_L4>;
+				front2_preview_cam = <DVFS_CAM_L2>;
+				front2_preview_mif = <DVFS_MIF_L5>;
+				front2_preview_i2c = <0>;
+
+				front2_capture_int = <DVFS_INT_L4>;
+				front2_capture_cam = <DVFS_CAM_L2>;
+				front2_capture_mif = <DVFS_MIF_L4>;
+				front2_capture_i2c = <0>;
+
+				front2_video_int = <DVFS_INT_L4>;
+				front2_video_cam = <DVFS_CAM_L2>;
+				front2_video_mif = <DVFS_MIF_L5>;
+				front2_video_i2c = <0>;
+
+				front2_video_capture_int = <DVFS_INT_L4>;
+				front2_video_capture_cam = <DVFS_CAM_L2>;
+				front2_video_capture_mif = <DVFS_MIF_L4>;
+				front2_video_capture_i2c = <0>;
+
+				front_preview_int = <DVFS_INT_L4>;
+				front_preview_cam = <DVFS_CAM_L2>;
+				front_preview_mif = <DVFS_MIF_L5>;
+				front_preview_i2c = <0>;
+
+				front_capture_int = <DVFS_INT_L4>;
+				front_capture_cam = <DVFS_CAM_L2>;
+				front_capture_mif = <DVFS_MIF_L5>;
+				front_capture_i2c = <0>;
+
+				front_video_int = <DVFS_INT_L4>;
+				front_video_cam = <DVFS_CAM_L2>;
+				front_video_mif = <DVFS_MIF_L5>;
+				front_video_i2c = <0>;
+
+				front_vt1_int = <DVFS_INT_L4>;
+				front_vt1_cam = <DVFS_CAM_L2>;
+				front_vt1_mif = <DVFS_MIF_L7>;
+				front_vt1_i2c = <0>;
+
+				front_vt2_int = <DVFS_INT_L4>;
+				front_vt2_cam = <DVFS_CAM_L2>;
+				front_vt2_mif = <DVFS_MIF_L7>;
+				front_vt2_i2c = <0>;
+
+				front_vt4_int = <DVFS_INT_L4>;
+				front_vt4_cam = <DVFS_CAM_L2>;
+				front_vt4_mif = <DVFS_MIF_L7>;
+				front_vt4_i2c = <0>;
+
+				rear_preview_fhd_int = <DVFS_INT_L4>;
+				rear_preview_fhd_cam = <DVFS_CAM_L2>;
+				rear_preview_fhd_mif = <DVFS_MIF_L4>;
+				rear_preview_fhd_i2c = <0>;
+
+				rear_capture_int = <DVFS_INT_L4>;
+				rear_capture_cam = <DVFS_CAM_L1>;
+				rear_capture_mif = <DVFS_MIF_L3>;
+				rear_capture_i2c = <0>;
+
+				rear_video_fhd_int = <DVFS_INT_L4>;
+				rear_video_fhd_cam = <DVFS_CAM_L2>;
+				rear_video_fhd_mif = <DVFS_MIF_L4>;
+				rear_video_fhd_i2c = <0>;
+
+				rear_video_uhd_int = <DVFS_INT_L4>;
+				rear_video_uhd_cam = <DVFS_CAM_L2>;
+				rear_video_uhd_mif = <DVFS_MIF_L1>;
+				rear_video_uhd_i2c = <0>;
+
+				rear_video_fhd_capture_int = <DVFS_INT_L4>;
+				rear_video_fhd_capture_cam = <DVFS_CAM_L1>;
+				rear_video_fhd_capture_mif = <DVFS_MIF_L3>;
+				rear_video_fhd_capture_i2c = <0>;
+
+				rear_video_uhd_capture_int = <DVFS_INT_L4>;
+				rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
+				rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
+				rear_video_uhd_capture_i2c = <0>;
+
+				dual_preview_int = <DVFS_INT_L4>;
+				dual_preview_cam = <DVFS_CAM_L0>;
+				dual_preview_mif = <DVFS_MIF_L2>;
+				dual_preview_i2c = <0>;
+
+				dual_capture_int = <DVFS_INT_L4>;
+				dual_capture_cam = <DVFS_CAM_L0>;
+				dual_capture_mif = <DVFS_MIF_L2>;
+				dual_capture_i2c = <0>;
+
+				dual_video_int = <DVFS_INT_L4>;
+				dual_video_cam = <DVFS_CAM_L0>;
+				dual_video_mif = <DVFS_MIF_L2>;
+				dual_video_i2c = <0>;
+
+				preview_high_speed_fps_int = <DVFS_INT_L4>;
+				preview_high_speed_fps_cam = <DVFS_CAM_L2>;
+				preview_high_speed_fps_mif = <DVFS_MIF_L5>;
+				preview_high_speed_fps_i2c = <0>;
+
+				video_high_speed_60fps_int = <DVFS_INT_L4>;
+				video_high_speed_60fps_cam = <DVFS_CAM_L2>;
+				video_high_speed_60fps_mif = <DVFS_MIF_L5>;
+				video_high_speed_60fps_i2c = <0>;
+
+				video_high_speed_120fps_int = <DVFS_INT_L4>;
+				video_high_speed_120fps_cam = <DVFS_CAM_L2>;
+				video_high_speed_120fps_mif = <DVFS_MIF_L5>;
+				video_high_speed_120fps_i2c = <0>;
+
+				max_int = <DVFS_INT_L0>;
+				max_cam = <DVFS_CAM_L0>;
+				max_mif = <DVFS_MIF_L0>;
+				max_i2c = <0>;
+			};
+
+			table1 {
+				desc = "DVFS table for HAL3";
+
+				default_int = <DVFS_INT_L0>;
+				default_cam = <DVFS_CAM_L0>;
+				default_mif = <DVFS_MIF_L0>;
+				default_i2c = <0>;
+
+				front2_preview_int = <DVFS_INT_L4>;
+				front2_preview_cam = <DVFS_CAM_L2>;
+				front2_preview_mif = <DVFS_MIF_L5>;
+				front2_preview_i2c = <0>;
+
+				front2_capture_int = <DVFS_INT_L4>;
+				front2_capture_cam = <DVFS_CAM_L2>;
+				front2_capture_mif = <DVFS_MIF_L4>;
+				front2_capture_i2c = <0>;
+
+				front2_video_int = <DVFS_INT_L4>;
+				front2_video_cam = <DVFS_CAM_L2>;
+				front2_video_mif = <DVFS_MIF_L5>;
+				front2_video_i2c = <0>;
+
+				front2_video_capture_int = <DVFS_INT_L4>;
+				front2_video_capture_cam = <DVFS_CAM_L2>;
+				front2_video_capture_mif = <DVFS_MIF_L4>;
+				front2_video_capture_i2c = <0>;
+
+				front_preview_int = <DVFS_INT_L4>;
+				front_preview_cam = <DVFS_CAM_L2>;
+				front_preview_mif = <DVFS_MIF_L5>;
+				front_preview_i2c = <0>;
+
+				front_capture_int = <DVFS_INT_L4>;
+				front_capture_cam = <DVFS_CAM_L2>;
+				front_capture_mif = <DVFS_MIF_L5>;
+				front_capture_i2c = <0>;
+
+				front_video_int = <DVFS_INT_L4>;
+				front_video_cam = <DVFS_CAM_L2>;
+				front_video_mif = <DVFS_MIF_L5>;
+				front_video_i2c = <0>;
+
+				front_vt1_int = <DVFS_INT_L4>;
+				front_vt1_cam = <DVFS_CAM_L2>;
+				front_vt1_mif = <DVFS_MIF_L5>;
+				front_vt1_i2c = <0>;
+
+				front_vt2_int = <DVFS_INT_L4>;
+				front_vt2_cam = <DVFS_CAM_L2>;
+				front_vt2_mif = <DVFS_MIF_L5>;
+				front_vt2_i2c = <0>;
+
+				front_vt4_int = <DVFS_INT_L4>;
+				front_vt4_cam = <DVFS_CAM_L2>;
+				front_vt4_mif = <DVFS_MIF_L5>;
+				front_vt4_i2c = <0>;
+
+				rear_preview_fhd_int = <DVFS_INT_L4>;
+				rear_preview_fhd_cam = <DVFS_CAM_L0>;
+				rear_preview_fhd_mif = <DVFS_MIF_L2>;
+				rear_preview_fhd_i2c = <0>;
+
+				rear_capture_int = <DVFS_INT_L4>;
+				rear_capture_cam = <DVFS_CAM_L0>;
+				rear_capture_mif = <DVFS_MIF_L2>;
+				rear_capture_i2c = <0>;
+
+				rear_video_fhd_int = <DVFS_INT_L4>;
+				rear_video_fhd_cam = <DVFS_CAM_L0>;
+				rear_video_fhd_mif = <DVFS_MIF_L2>;
+				rear_video_fhd_i2c = <0>;
+
+				rear_video_uhd_int = <DVFS_INT_L4>;
+				rear_video_uhd_cam = <DVFS_CAM_L0>;
+				rear_video_uhd_mif = <DVFS_MIF_L1>;
+				rear_video_uhd_i2c = <0>;
+
+				rear_video_fhd_capture_int = <DVFS_INT_L4>;
+				rear_video_fhd_capture_cam = <DVFS_CAM_L0>;
+				rear_video_fhd_capture_mif = <DVFS_MIF_L2>;
+				rear_video_fhd_capture_i2c = <0>;
+
+				rear_video_uhd_capture_int = <DVFS_INT_L4>;
+				rear_video_uhd_capture_cam = <DVFS_CAM_L0>;
+				rear_video_uhd_capture_mif = <DVFS_MIF_L0>;
+				rear_video_uhd_capture_i2c = <0>;
+
+				dual_preview_int = <DVFS_INT_L4>;
+				dual_preview_cam = <DVFS_CAM_L0>;
+				dual_preview_mif = <DVFS_MIF_L2>;
+				dual_preview_i2c = <0>;
+
+				dual_capture_int = <DVFS_INT_L4>;
+				dual_capture_cam = <DVFS_CAM_L0>;
+				dual_capture_mif = <DVFS_MIF_L2>;
+				dual_capture_i2c = <0>;
+
+				dual_video_int = <DVFS_INT_L4>;
+				dual_video_cam = <DVFS_CAM_L0>;
+				dual_video_mif = <DVFS_MIF_L2>;
+				dual_video_i2c = <0>;
+
+				preview_high_speed_fps_int = <DVFS_INT_L4>;
+				preview_high_speed_fps_cam = <DVFS_CAM_L2>;
+				preview_high_speed_fps_mif = <DVFS_MIF_L5>;
+				preview_high_speed_fps_i2c = <0>;
+
+				video_high_speed_60fps_int = <DVFS_INT_L4>;
+				video_high_speed_60fps_cam = <DVFS_CAM_L3>;
+				video_high_speed_60fps_mif = <DVFS_MIF_L5>;
+				video_high_speed_60fps_i2c = <0>;
+
+				video_high_speed_120fps_int = <DVFS_INT_L4>;
+				video_high_speed_120fps_cam = <DVFS_CAM_L2>;
+				video_high_speed_120fps_mif = <DVFS_MIF_L5>;
+				video_high_speed_120fps_i2c = <0>;
+
+				max_int = <DVFS_INT_L0>;
+				max_cam = <DVFS_CAM_L0>;
+				max_mif = <DVFS_MIF_L0>;
+				max_i2c = <0>;
+			};
+		};
+	};
+
+	fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
+		compatible = "samsung,sensor-module-2p6";
+
+		pinctrl-names = "pin0", "pin1", "pin2", "release";
+		pinctrl-0 = <>;
+		pinctrl-1 = <&fimc_is_mclk0_out>;
+		pinctrl-2 = <&fimc_is_mclk0_fn>;
+		pinctrl-3 = <>;
+
+		use_pdaf; /* when USE_AP_PDAF is enabled, use for pdaf sensor */
+
+		position = <0>;	/* Rear:0. Front:1 */
+		id = <0>; /* bns_id */
+		mclk_ch = <0>;
+
+		gpio_mclk = <&gpc0 0 0x1>;
+		gpio_reset = <&gpf3 2 0x1>; /* sensor reset - jackpot hw_rev = 100'b */
+		gpio_core_en = <&gpp0 2 0x1>; /* RCAM_LDO_EN */
+		gpio_cam_io_en = <&gpg2 0 0x1>; /* RCAM_IO_LDO_EN */
+		gpio_cam_af_en = <&gpp0 3 0x1>; /* RCAM_AF_2P8_EN */
+		status = "okay";
+
+		af {
+			product_name = <16>; /* AK7372 */
+			i2c_addr = <0x18>;
+			i2c_ch = <3>;
+		};
+
+		flash {
+			product_name = <5>; /* FLASH_KTD2692 */
+			flash_first_gpio = <2>; /* DICO not use first, second gpio value */
+			flash_second_gpio = <3>;
+		};
+
+		internal_vc {
+			/* vc_list = <channel, data_type, buffer_offset>
+			 * channel : Output VC channel
+			 *  - Supported channels are 1(VC1), 2(VC2), 3(VC3)
+			 *  - Since channel 0(VC0) is dedicated to image data, it can not be used
+
+			 * data_type : Output type of VC channel
+			 *  - Value 0 VC_NOTHING
+			 *  - Value 1 VC_TAIL_MODE_PDAF
+			 *  - Value 2 VC_MIPI_STAT
+			 * buffer_offset : get_vc_dma_buf offset value of buffer to return when using interface
+
+			 *  - Value 0 N buffer return
+			 *  - Value 1 N-1 buffer return
+			 */
+
+			vc_list = <1 1 1>;
+		};
+	};
+
+	fimc_is_sensor_3p8sp: fimc-is_sensor_3p8sp@5A {
+		compatible = "samsung,sensor-module-3p8sp";
+
+		pinctrl-names = "pin0", "pin1", "pin2", "release";
+		pinctrl-0 = <>;
+		pinctrl-1 = <&fimc_is_mclk1_out>;
+		pinctrl-2 = <&fimc_is_mclk1_fn>;
+		pinctrl-3 = <>;
+
+		position = <1>;	/* Rear:0. Front:1 */
+		id = <1>; /* bns_id */
+		mclk_ch = <1>;
+
+		gpio_mclk = <&gpc0 1 0x1>;
+		gpio_reset = <&gpf3 0 0x1>;	/* sensor reset */
+		gpio_rcam_en = <&gpg2 0 0x1>;	/* RCAM_IO_LDO_EN */
+		gpio_fcam1_en = <&gpp0 0 0x1>;	/* FCAM1 all LDOs */
+		gpio_fcam2_en = <&gpp0 1 0x1>;	/* FCAM2 all LDOs */
+		status = "okay";
+	};
+
+	fimc_is_sensor_sr846: fimc-is_sensor_sr846@42 {
+		compatible = "samsung,sensor-module-sr846";
+
+		pinctrl-names = "pin0", "pin1", "pin2", "release";
+		pinctrl-0 = <>;
+		pinctrl-1 = <&fimc_is_mclk2_out>;
+		pinctrl-2 = <&fimc_is_mclk2_fn>;
+		pinctrl-3 = <>;
+
+		position = <5>;	/* Rear:0. Front:1. Front_1:5 */
+		id = <2>; /* bns_id */
+		mclk_ch = <2>;
+
+		gpio_mclk = <&gpc0 2 0x1>;
+		gpio_reset = <&gpf3 1 0x1>;	/* sensor reset */
+		gpio_ldos_en = <&gpp0 1 0x1>;	/* all LDOs */
+		status = "okay";
+	};
+
+	fimc_is_flash_ktd2692: fimc-is-flash_ktd2692@0 {
+		compatible = "samsung,sensor-flash-ktd2692";
+		id = <0>; /* matching sensor id */
+		status = "okay";
+	};
+
+	leds_ktd2692 {
+		compatible = "ktd2692";
+		flash_control = <&gpg1 2 0x1>;
+		max_current = <1500>; /* (IMax) */
+		flash_current = <1200>; /* (n/16)xIMax (1<=n<=16) */
+		movie_current = <175>; /* (n/16)*IMax/3 (1<=n<=16) */
+		factory_current = <175>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_current = <75>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_table_enable = <1>;
+		torch_table = <1 2 2 3 3 4 4 4 5 5>;
+		status = "okay";
+		pinctrl-names ="default","host","is";
+		pinctrl-0 = <&fimc_is_flash_is>;
+		pinctrl-1 = <&fimc_is_flash_host>;
+		pinctrl-2 = <&fimc_is_flash_is>;
+	};
+
+	#define SENSOR_SCENARIO_NORMAL		0
+	#define SENSOR_SCENARIO_VISION		1
+	#define SENSOR_SCENARIO_EXTERNAL	2
+	#define SENSOR_SCENARIO_OIS_FACTORY	3
+	#define SENSOR_SCENARIO_VIRTUAL		9
+	#define FLITE_ID_NOTHING 100
+
+	fimc_is_sensor0: fimc_is_sensor@14410000 {
+		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
+		id = <0>;
+		csi_ch = <1>;
+		flite_ch = <FLITE_ID_NOTHING>;
+		is_bns = <0>;
+		is_flite = <0>;
+		status = "okay";
+
+		use_ssvc1_internal;
+	};
+
+	fimc_is_sensor1: fimc_is_sensor@14400000 {
+		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
+		id = <1>;
+		csi_ch = <0>;
+		flite_ch = <FLITE_ID_NOTHING>;
+		is_bns = <0>;
+		is_flite = <0>;
+		status = "okay";
+	};
+
+	fimc_is_sensor2: fimc_is_sensor@14420000 {
+		scenario = <SENSOR_SCENARIO_NORMAL>;	/* Normal, Vision, OIS etc */
+		id = <2>;
+		csi_ch = <2>;
+		flite_ch = <FLITE_ID_NOTHING>;
+		is_bns = <0>;
+		is_flite = <0>;
+		status = "okay";
+	};
+
+	hsi2c_1: hsi2c@138B0000 {
+		gpios = <&gpc1 2 0 &gpc1 3 0>;
+		status = "okay";
+		clock-frequency = <400000>;
+
+		pinctrl-names = "on_i2c";
+		pinctrl-0 = <&hs_i2c1_bus>;
+
+		fimc-is-2p6@10 {
+			compatible = "samsung,exynos5-fimc-is-cis-2p6";
+			reg = <0x2d>; /* 1 bit right shift */
+			id = <0>; /* matching sensor id */
+			sensor_f_number = <170>; /* f number 1.7 */
+			setfile = "setB";
+
+			use_pdaf; /* when USE_AP_PDAF is enabled, use for pdaf sensor */
+		};
+	};
+
+	hsi2c_2: hsi2c@138C0000 {
+		gpios = <&gpc1 4 0 &gpc1 5 0>;
+		status = "okay";
+		clock-frequency = <400000>;
+
+		pinctrl-names = "on_i2c";
+		pinctrl-0 = <&hs_i2c2_bus>;
+
+		fimc-is-actuator@18 {
+		     compatible = "samsung,exynos5-fimc-is-actuator-ak7372";
+		     reg = <0x0C>; /* 7bit-addr */
+		     id = <0>;
+		     place = <0>;
+		};
+
+		fimc_is_eeprom_i2c@A0 {
+			compatible = "samsung,rear-eeprom-i2c";
+			reg = <0x50>; /* 7bit-addr */
+		};
+
+		fimc_is_eeprom_i2c@A2 {
+			compatible = "samsung,front-eeprom-i2c";
+			reg = <0x51>; /* 7bit-addr */
+		};
+	};
+
+	hsi2c_0: hsi2c@138A0000 {
+		gpios = <&gpc1 0 0 &gpc1 1 0>;
+		status = "okay";
+		clock-frequency = <400000>;
+
+		pinctrl-names = "on_i2c";
+		pinctrl-0 = <&hs_i2c0_bus>;
+
+		fimc-is-3p8sp@2D {
+		     compatible = "samsung,exynos5-fimc-is-cis-3p8sp";
+		     reg = <0x10>; /* 1 bit right shift */
+		     id = <1>; /* matching sensor id */
+		     sensor_f_number = <190>; /* f number 1.9 */
+		     setfile = "setB";
+		     use_initial_ae; /* for initial AE of face unlock */
+		};
+	};
+
+	hsi2c_3: hsi2c@138D0000 {
+		gpios = <&gpc1 6 0 &gpc1 7 0>;
+		status = "okay";
+		clock-frequency = <400000>;
+		samsung.tsda-su-fs = <0x36>;
+
+		pinctrl-names = "on_i2c";
+		pinctrl-0 = <&hs_i2c3_bus>;
+
+		fimc-is-sr846@42 {
+		     compatible = "samsung,exynos5-fimc-is-cis-sr846";
+		     reg = <0x21>; /* 1 bit right shift */
+		     id = <2>; /* matching sensor id */
+		     sensor_f_number = <190>; /* f number 1.9 */
+		     setfile = "setB";
+		};
+	};
+
+	/* DISPAUD */
+	pinctrl@148F0000 {
+		aud_fm_bus: aud-fm-bus {
+			samsung,pins = "gpb1-1", "gpb1-2", "gpb1-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		spi2_bus: spi2-bus {
+			samsung,pins = "gpc2-1", "gpc2-0";
+			samsung,pin-function = <2>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud = <1>;
+			samsung,pin-pud-pdn = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		spi2_bus_clk: spi2-bus-clk {
+			samsung,pins = "gpc2-3";
+			samsung,pin-function = <2>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud = <0>;
+			samsung,pin-pud-pdn = <0>;
+			samsung,pin-drv = <0>;
+			samsung,pin-val = <0>;
+		};
+
+		spi2_cs: spi2-cs {
+			samsung,pins = "gpc2-2";
+			samsung,pin-function = <2>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud = <3>;
+			samsung,pin-pud-pdn = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		aud_dmic_on: aud_dmic_on {
+			samsung,pins = "gpg2-1";
+			samsung,pin-function = <1>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-val = <1>;
+		};
+
+		aud_dmic_off: aud_dmic_off {
+			samsung,pins = "gpg2-1";
+			samsung,pin-function = <1>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-val = <1>;
+		};
+	};
+
+	spi_2: spi@13920000 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		num-cs = <1>;
+
+		/delete-property/ dma-mode;
+		/delete-property/ dmas;
+		/delete-property/ dma-names;
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&spi2_bus &spi2_bus_clk &spi2_cs>;
+		status = "okay";
+
+		dbmd4_spi: dbmd4_interface@0 {
+			compatible = "dspg,dbmd4-spi";
+			reg = <0x0>;
+			spi-max-frequency = <1000000>;
+			read-chunk-size = <0x2000>;
+			write-chunk-size = <0x40000>;
+
+			interrupts = <2 0 0>;
+			interrupt-parent = <&gpa0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			controller-data {
+				cs-gpio = <&gpc2 2 0>;
+				samsung,spi-feedback-delay = <0>;
+			};
+		};
+	};
+
+	dbmdx_event {
+		status = "okay";
+		compatible = "samsung,dbmdx-event";
+	};
+
+	dbmdx-snd-soc-platform {
+		compatible = "dspg,dbmdx-snd-soc-platform";
+	};
+
+	snd-dbmdx-mach-drv {
+		compatible = "dspg,snd-dbmdx-mach-drv";
+	};
+
+	pinctrl@11CB0000 {
+		dbmdx_int: dbmdx-int {
+			samsung,pins = "gpa0-2";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		dbmdx_wakeup: dbmdx-wakeup {
+			samsung,pins ="gpg2-3";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-con-pdn =<3>;
+			samsung,pin-pud-pdn = <3>;
+			samsung,pin-val = <1>;
+		};
+
+		dbmdx_reset: dbmdx-reset {
+			samsung,pins ="gpg2-2";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-con-pdn =<3>;
+			samsung,pin-pud-pdn = <3>;
+			samsung,pin-val = <1>;
+		};
+	};
+
+	dbmdx {
+		status = "okay";
+		compatible = "dspg,dbmdx-codec";
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&dbmdx_wakeup &dbmdx_reset>;
+
+		sv-gpio = <&gpa0 2 0>; /* VOICE_INT */
+		wakeup-gpio = <&gpg2 3 0>; /* VOICE_WAKE */
+		reset-gpio = <&gpg2 2 0>; /* VOICE_RST */
+		auto_buffering = <1>;
+		cmd-interface = <&dbmd4_spi>;
+		feature-va; /* enable VA */
+		va-firmware-name = "dbmd4_va_fw.bin";
+		va-config = <0x80000000
+			     0x80000000
+			     0x80000000
+			     0x80290020
+			     0x802210E0
+			     0x80158E8E
+			     0x801b0020
+			     0x801A0011
+			     0x80230001
+			     0x80108017
+			     0x80000000
+			     0x80000000
+			     0x80000000>;
+		va-speeds = <0x0000 460800  0 4800000
+			     0x0000 2000000 0 4800000
+			     0x0000 3000000 0 4800000>;
+		va-mic-config = <0xf041 0x1044 0x0008>;
+		va-mic-mode = <0>;
+		master-clk-rate = <32768>;
+		/* constant-clk-rate = <32768>; */
+		firmware_id = <0xdbd4>;
+		use_gpio_for_wakeup = <1>; /* Use wakeup gpio */
+		wakeup_set_value = <0>;  /* Value to write to wakeup gpio */
+		auto_detection = <1>;
+		detection_buffer_channels = <0>;
+		min_samples_chunk_size = <128>;
+		pcm_streaming_mode = <1>;
+		boot_options = <0x200>; /* Verify chip id */
+		send_uevent_after_buffering = <0>;
+		detection_after_buffering = <0>;
+		va_backlog_length = <1300>;
+		va_backlog_length_okg = <1000>;
+		send_uevent_on_detection = <1>;
+		amodel_options = <0x3>;
+	};
+
+	abox_gic: abox_gic@0x14AF0000 {
+		status = "okay";
+	};
+
+	i2c_3: i2c@13860000 {
+		status = "okay";
+		tfa98xx: tfa98xx@34 {
+			compatible = "nxp,tfa98xx";
+			#sound-dai-cells = <1>;
+			reg = <0x34>;
+		};
+	};
+
+	abox: abox@0x14A50000 {
+		status = "okay";
+		/* CAUTION:
+		* "try to asrc off" quirk must be in dts.
+		* It shouldn't be applied already audio tuned device,
+		* because it changes delay and causes re-tune.
+		*/
+		/*
+		* TODO: enable later
+		*/
+		/* quirks = "try to asrc off"; */
+
+		abox_synchronized_ipc: abox_synchronized_ipc {
+			compatible = "samsung,abox-synchronized-ipc";
+			#sound-dai-cells = <1>;
+			abox = <&abox>;
+		};
+	};
+
+	dummy_audio_codec: audio_codec_dummy {
+		status = "okay";
+		compatible = "snd-soc-dummy";
+	};
+
+	sound {
+		status = "okay";
+		compatible = "samsung,exynos7885-cod3035";
+		mic-bias-mode = <0 0 2 0>;
+		clock-names = "xclkout";
+		samsung,codec = <&abox>;
+
+		samsung,routing =  "VOUTPUT", "ABOX UAIF0 Playback",
+				 "VOUTPUTCALL", "ABOX UAIF2 Playback",
+				 "ABOX UAIF2 Capture", "VINPUTCALL",
+				 "ABOX SPEEDY Capture", "VINPUTFM",
+				 // "SPK", "ABOX UAIF3 Playback",
+				 // "ABOX UAIF3 Capture", "VI";
+				 "SPK", "AIF Playback-8-34",
+				 "AIF Playback-8-34", "ABOX UAIF3 Playback",
+				 "ABOX UAIF3 Capture", "AIF Capture-8-34";
+
+		rdma@0 {
+			cpu {
+				sound-dai = <&abox 0>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@1 {
+			cpu {
+				sound-dai = <&abox 1>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@2 {
+			cpu {
+				sound-dai = <&abox 2>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@3 {
+			cpu {
+				sound-dai = <&abox 3>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@4 {
+			cpu {
+				sound-dai = <&abox 4>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@5 {
+			cpu {
+				sound-dai = <&abox 5>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@6 {
+			cpu {
+				sound-dai = <&abox 6>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		rdma@7 {
+			cpu {
+				sound-dai = <&abox 7>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@0 {
+			cpu {
+				sound-dai = <&abox 8>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@1 {
+			cpu {
+				sound-dai = <&abox 9>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@2 {
+			cpu {
+				sound-dai = <&abox 10>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@3 {
+			cpu {
+				sound-dai = <&abox 11>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		wdma@4 {
+			cpu {
+				sound-dai = <&abox 12>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		uaif@0 {
+			cpu {
+				sound-dai = <&abox 13>;
+			};
+			codec {
+				sound-dai = <&audio_codec_cod3035x>;
+			};
+		};
+		uaif@1 {
+			cpu {
+				sound-dai = <&abox 14>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		uaif@2 {
+			cpu {
+				sound-dai = <&abox 15>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		uaif@3 {
+			cpu {
+				sound-dai = <&abox 16>;
+			};
+			platform {
+				sound-dai = <&abox_synchronized_ipc 0>;
+			};
+			codec {
+				sound-dai = <&tfa98xx 0>;
+			};
+		};
+		internal@0 {
+			cpu {
+				sound-dai = <&abox 17>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+		speedy@0 {
+			cpu {
+				sound-dai = <&abox 18>;
+			};
+			codec {
+				sound-dai = <&dummy_audio_codec>;
+			};
+		};
+	};
+
+	pinctrl@11CB0000 {
+		nfc_int: nfc-int {
+			samsung,pins = "gpa1-0";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+		};
+
+		nfc_clk: nfc-clk {
+			samsung,pins = "gpq0-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpp6-4";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpp3-2";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_pd: nfc_pd {
+			samsung,pins = "gpp2-2";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_clk_req: nfc_clk_req {
+			samsung,pins = "gpp2-3";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+	i2c_2: i2c@13850000 {
+		status = "okay";
+		samsung,i2c-max-bus-freq = <400000>;
+		sec-nfc@27 {
+			compatible = "sec-nfc";
+			reg = <0x27>;
+
+			interrupts = <0 0 0>;
+			interrupt-parent = <&gpa1>;
+
+			sec-nfc,nfc_pd = <&gpp2 2 0x2>;
+			sec-nfc,firm-gpio = <&gpp3 2 1>;
+			sec-nfc,irq-gpio = <&gpa1 0 0>;
+			sec-nfc,nfc_clkreq = <&gpp2 3 0x2>;
+			sec-nfc,pvdd_en = <&gpp6 4 1>;
+			clkctrl-reg = <0x11C8600C>;
+
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		spi0_bus_ese: spi0-bus-ese {
+			samsung,pins = "gpp5-3", "gpp5-2", "gpp5-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		spi0_ese_cs_gpio: spi0-ese-cs-gpio {
+			samsung,pins = "gpp5-1";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		spi0_bus_ese_suspend: spi0-bus-ese-suspend {
+			samsung,pins = "gpp5-3", "gpp5-2", "gpp5-1", "gpp5-0";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	spi_0: spi@13900000 {
+		status = "okay";
+		/delete-property/ pinctrl-names;
+		/delete-property/ pinctrl-0;
+
+		ese_spi@0 {
+			compatible = "ese_p3";
+			reg = <0>;
+			spi-max-frequency = <13000000>;
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			p3-vdd_1p8-gpio = <&gpg1 0 1>;
+			ese_p3,cs-gpio = <&gpp5 1 0>;
+
+			clocks = <&clock GATE_SPI0>, <&clock SPI_0>;
+			clock-names = "pclk", "sclk";
+
+			pinctrl-names = "ese_active", "ese_suspend";
+			pinctrl-0 = <&spi0_bus_ese &spi0_ese_cs_gpio>;
+			pinctrl-1 = <&spi0_bus_ese_suspend>;
+
+			controller-data {
+				samsung,spi-feedback-delay = <0>;
+				samsung,spi-chip-select-mode = <0>;
+			};
+		};
+	};
+
+	pinctrl@139B0000 {
+		ssp_ap_int: ssp-ap-int {
+			samsung,pins = "gpg1-6";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-drv = <3>;
+		};
+		ssp_boot0: ssp-boot0 {
+			samsung,pins = "gpg1-3";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <3>;
+		};
+		ssp_rst: ssp-rst {
+			samsung,pins = "gpg3-5";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+
+		spi4_clk: spi4-clk {
+			samsung,pins = "gpp8-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+		spi4_cs: spi4-cs {
+			samsung,pins = "gpp8-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <3>;
+			samsung,pin-drv = <2>;
+		};
+		spi4_miso: spi4-miso {
+			samsung,pins = "gpp7-0";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <2>;
+		};
+		spi4_mosi: spi4-mosi {
+			samsung,pins = "gpp7-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <2>;
+		};
+	};
+
+	pinctrl@11CB0000 {
+		ssp_mcu_int1: ssp-mcu-int1 {
+			samsung,pins = "gpa1-2";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		ssp_mcu_int2: ssp-mcu-int2 {
+			samsung,pins = "gpa1-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	mcu_ipc: mcu_ipc@12080000 {
+		mcu,irq_affinity_mask = <3>;
+	};
+
+	argos {
+		compatible = "samsung,argos";
+		#address-cells = <1>;
+		/*  The device number should be assigned for each device, e.g. "boot_device@1" and "boot_device@2".
+		 * Duplicated number is not allowed. Please refer the below example.
+		 */
+
+		/* Table Format should be
+		 * <Throughput(Mbps) ARM_min ARM_max KFC_min KFC_max MIF INT Task IRQ HMP_boost>
+		 * ARM_min : Big Core's minimum frequency lock. 0 means not set,
+		 * ARM_max : Big Core's maximum frequency lock. 0 means not set,
+		 * KFC_min : Little Core's minimum frequency lock. 0 means not set,
+		 * KFC_max : Little Core's maximum frequency lock. 0 means not set,
+		 * MIF : MIF frequency lock. 0 means not set,
+		 * INT : INT frequency lock. 0 means not set,
+		 * Task : 1 - Set task affinity lock.
+		 *	0 - Not set or unlock,
+		 *		Task affinity should be predefined driver's code.
+		 * IRQ : 1 - Set irq affinity lock.
+		 *       0 - Not set or unlock,
+		 *		Task affinity should be predefined driver's code.
+		 * HMP_boots : 1 - Increase hmp boosting count
+		 *             0 - Decrease hmp boosting count
+		 */
+
+		 boot_device@1 {
+		 net_boost,label="WIFI TX";
+		 net_boost,node="wlan0";
+		 net_boost,table_size = <2>;
+		 net_boost,table= <
+		 	60 1144000 0 676000 0 0 0 0 0 0
+		 	120 1560000 0 1586000 0 0 267000 0 0 0
+		 	>;
+		 };
+
+		 boot_device@2 {
+		 net_boost,label="WIFI RX";
+		 net_boost,node="wlan0";
+		 net_boost,table_size = <1>;
+		 net_boost,table= <
+		 	250 1352000 0 1352000 0 0 0 0 0 0
+		 	>;
+		 };
+
+		 boot_device@3 {
+			net_boost,label="IPC";
+			net_boost,node="rmnet0 rmnet1 rmnet2 rmnet3 rmnet4 rmnet5 rmnet6 rmnet7 umts_dm0";
+			net_boost,table_size = <4>;
+			net_boost,table= <
+				100 0 0 1066000 0 845000 0 0 1 0
+				150 0 0 1170000 0 1144000 0 0 1 0
+				200 0 0 1378000 0 1539000 0 0 1 0
+				300 0 0 1586000 0 1794000 0 0 1 0
+				>;
+		};
+
+		boot_device@4 {
+			net_boost,label="CLAT";
+			net_boost,node="clat clat4 v4-rmnet0 v4-rmnet1 v4-rmnet2 v4-rmnet3 v4-rmnet4 v4-rmnet5 v4-rmnet6 v4-rmnet7";
+			net_boost,table_size = <3>;
+			net_boost,table= <
+				120 0 0 1378000 0 1144000 0 0 0 0
+				130 0 0 1378000 0 1539000 0 0 0 0
+				150 0 0 1586000 0 1794000 0 0 0 0
+				>;
+		};
+
+		boot_device@5 {
+			net_boost,label="USB";
+			net_boost,node="rndis0";
+			net_boost,table_size = <1>;
+			net_boost,table= < 0 0 0 0 0 0 0 0 1 0 >;
+		};
+
+		/*
+		 * boot_device@9 {
+		 *	net_boost,label="WIFI RX";
+		 *	net_boost,node="wlan0";
+		 *	net_boost,table_size = <4>;
+		 *	net_boost,table= <
+		 *		5  2002000 0 1690000 0 0 0 0 0 0
+		 *		10 2002000 0 1690000 0 0 0 0 0 0
+		 *		20 2002000 0 1690000 0 845000 400000 1 1 1
+		 *		30 2002000 0 1690000 0 1352000 533000 1 1 1
+		 *		>;
+		 * };
+		 */
+	};
+
+	nad_balancer {
+		compatible = "samsung,sec_nad_balancer";
+		status = "okay";
+
+		nad_balancer,timeout = <400>;
+
+			qos {
+				cl0 {
+					qos,label="LIT";
+					qos,delay_time=<9>;
+					qos,table_size=<12>;
+					qos,table=<1586000 1482000 1352000 1248000 1144000 1014000 902000 839000 757000
+						676000 546000 449000>;
+				};
+
+				cl1 {
+					qos,label="BIG";
+					qos,delay_time=<8>;
+					qos,table_size=<11>;
+					qos,table=<2184000 2080000 1976000 1872000 1768000 1664000 1560000 1352000 1144000
+						936000 728000>;
+				};
+
+				mif {
+					qos,label="MIF";
+					qos,delay_time=<10>;
+					qos,table_size=<8>;
+					qos,table=<1794000 1539000 1352000 1014000 845000 676000 546000 420000>;
+				};
+			};
+
+            sleep {
+                /* per msec */
+                sleep,suspend_threshold = <1000>;
+                sleep,resume_threshold = <1000>;
+            };
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_dummy.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_dummy.dts
new file mode 100644
index 0000000000..d00e9f3258
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_dummy.dts
@@ -0,0 +1,11 @@
+/dts-v1/;
+/ {
+    compatible = "dummy,example";
+    #address-cells = <1>;
+    #size-cells = <1>;
+
+    dummy-node {
+        compatible = "dummy,node";
+        dummy-property = <0x12345678>;
+    };
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_03.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_03.dts
new file mode 100755
index 0000000000..0bc255e782
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_03.dts
@@ -0,0 +1,166 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_03.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev04 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <3>;
+	model_info-hw_rev_end = <3>;
+	compatible = "samsung, JACKPOTLTE EUR rev04", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
+		gpio_reset = <&gpq0 1 0x1>; /* sensor reset - jackpot hw_rev = 000'b ~ 011'b */
+	};
+
+	/* sec-wf-thermistor */
+	sec_thermistor@6 {
+		status = "disabled";
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_04.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_04.dts
new file mode 100755
index 0000000000..578f1b9b0c
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_04.dts
@@ -0,0 +1,157 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_04.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <4>;
+	model_info-hw_rev_end = <4>;
+	compatible = "samsung, JACKPOTLTE EUR rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_05.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_05.dts
new file mode 100755
index 0000000000..8c482a34cb
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_05.dts
@@ -0,0 +1,144 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_05.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <5>;
+	model_info-hw_rev_end = <5>;
+	compatible = "samsung, JACKPOTLTE EUR rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_06.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_06.dts
new file mode 100755
index 0000000000..594bbd51ff
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_06.dts
@@ -0,0 +1,161 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_06.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev06 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <6>;
+	model_info-hw_rev_end = <6>;
+	compatible = "samsung, JACKPOTLTE EUR rev06", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	leds_ktd2692 {
+		compatible = "ktd2692";
+		flash_control = <&gpg1 2 0x1>;
+		max_current = <1360>; /* (IMax) */
+		flash_current = <1200>; /* (n/16)xIMax (1<=n<=16) */
+		movie_current = <175>; /* (n/16)*IMax/3 (1<=n<=16) */
+		factory_current = <175>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_current = <75>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_table_enable = <1>;
+		torch_table = <1 2 2 3 3 4 4 4 5 5>;
+		status = "okay";
+		pinctrl-names ="default","host","is";
+		pinctrl-0 = <&fimc_is_flash_is>;
+		pinctrl-1 = <&fimc_is_flash_host>;
+		pinctrl-2 = <&fimc_is_flash_is>;
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_07.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_07.dts
new file mode 100755
index 0000000000..95cbf671a5
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_07.dts
@@ -0,0 +1,144 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_eur_open_gpio_07.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE EUR rev07 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <7>;
+	model_info-hw_rev_end = <255>;
+	compatible = "samsung, JACKPOTLTE EUR rev07", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+	
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio &sim1_det_gpio>;
+		mif,num_of_usim_det = <2>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+		mif,usim-det1-gpio = <&gpa2 5 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_03.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_03.dtsi
new file mode 100755
index 0000000000..d467960c85
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_03.dtsi
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* FM_LNA_EN */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_04.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_04.dtsi
new file mode 100755
index 0000000000..67c7d2da79
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_04.dtsi
@@ -0,0 +1,172 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* FM_LNA_EN */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_05.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_05.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_05.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_06.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_06.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_06.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_07.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_07.dtsi
new file mode 100755
index 0000000000..f9681a44f9
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_eur_open_gpio_07.dtsi
@@ -0,0 +1,177 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-4, DOWN, LV1);	/* NC(TDMB_PWR_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+
+		PIN_IN(gpc2-4, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-5, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-6, DOWN, LV1);	/* NC(TDMB) */
+		PIN_IN(gpc2-7, DOWN, LV1);	/* NC(TDMB) */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-4, INPUT, DOWN);	/* NC(TDMB_PWR_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+
+		PIN_SLP(gpc2-4, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-5, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-6, INPUT, DOWN);	/* NC(TDMB) */
+		PIN_SLP(gpc2-7, INPUT, DOWN);	/* NC(TDMB) */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_fingerprint-sensor_00.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_fingerprint-sensor_00.dtsi
new file mode 100755
index 0000000000..62eb579972
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_fingerprint-sensor_00.dtsi
@@ -0,0 +1,95 @@
+/*
+ * Copyright (c) 2012-2013, The Linux Foundation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/ {
+	pinctrl@11CB0000 {
+		btp_irq: btp-irq {
+			samsung,pins = "gpa0-5";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <3>;
+		};
+
+		btp_irq_sleep: btp-irq-sleep {
+			samsung,pins = "gpa0-5";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <3>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		btp_check: btp-check {
+			samsung,pins = "gpg3-2";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <3>;
+		};
+
+		btp_ldo: btp-ldo {
+			samsung,pins = "gpg3-3";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+
+		btp_reset: btp-reset {
+			samsung,pins = "gpg3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <3>;
+		};
+	};
+
+	spi_1: spi@13910000 {
+		status = "okay";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		/delete-property/ pinctrl-names;
+		/delete-property/ pinctrl-0;
+		samsung,spi-fifosize = <256>;
+		interrupts = <0 256 0>;
+
+		dma-mode;
+		dmas = <&pdma0 21
+			&pdma0 20>;
+
+		dma-names = "tx", "rx";
+		etspi-spi@0 {
+			compatible = "etspi,et5xx";
+			reg = <0>;
+			spi-max-frequency = <16000000>;
+			pinctrl-names = "default", "pins_poweron", "pins_poweroff", "pins_poweron_tz", "pins_poweroff_tz";
+			pinctrl-0 = <&btp_irq_sleep &btp_reset &btp_ldo &btp_check>;
+			pinctrl-1 = <&btp_irq &spi1_clk &spi1_cs &spi1_miso &spi1_mosi>;
+			pinctrl-2 = <&btp_irq_sleep &spi1_bus_inactive &spi1_miso_inactive>;
+			pinctrl-3 = <&btp_irq>;
+			pinctrl-4 = <&btp_irq_sleep>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			etspi-sleepPin = <&gpg3 4 0x00>;
+			etspi-drdyPin = <&gpa0 5 0x00>;
+			etspi-ldoPin = <&gpg3 3 0x00>;
+			etspi-chipid = "ET510";
+			etspi-ldocontrol = <1>;
+
+			controller-data {
+				samsung,spi-feedback-delay = <0>;
+				samsung,spi-chip-select-mode = <0>;
+			};
+		};
+	};
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor-tdmb-00.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor-tdmb-00.dtsi
new file mode 100755
index 0000000000..b9b104a31d
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor-tdmb-00.dtsi
@@ -0,0 +1,88 @@
+ /* Copyright (c) 2012-2014, The Linux Foundation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/{
+	pinctrl@139B0000 {
+		tdmb_pwr_on: tdmb-pwr-on {
+			samsung,pins = "gpg2-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+		};
+		tdmb_pwr_off: tdmb-pwr-off {
+			samsung,pins = "gpg2-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@11CB0000 {
+		tdmb_irq_on: tdmb-irq-on {
+			samsung,pins = "gpa2-5";
+			samsung,pin-function = <0xf>;
+			samsung,pin-pud = <0>;
+		};
+		tdmb_irq_off: tdmb-irq-off {
+			samsung,pins = "gpa2-5";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		spi3_idle: spi3-idle {
+			samsung,pins = "gpc2-5", "gpc2-4", "gpc2-7", "gpc2-6";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	spi_3: spi@13940000 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		num-cs = <1>;
+
+		dma-mode;
+		dmas = <&pdma0 25
+			&pdma0 24>;
+		dma-names = "tx", "rx";
+
+		status = "ok";
+
+		pinctrl-names = "default", "idle";
+		pinctrl-0 = <&spi3_bus &spi3_cs>;
+		pinctrl-1 = <&spi3_idle>;
+
+		tdmb-spi@0 {
+			compatible = "tdmb_spi_comp";
+			reg = <0>;
+			spi-max-frequency = <9600000>;
+			controller-data {
+				cs-gpio = <&gpc2 6 0>;
+				samsung,spi-feedback-delay = <0>;
+			};
+		};
+	};
+
+	tdmb_data {
+		compatible = "samsung,tdmb";
+		pinctrl-names = "tdmb_on", "tdmb_off";
+		pinctrl-0 = <&tdmb_pwr_on &tdmb_irq_on>;
+		pinctrl-1 = <&tdmb_pwr_off &tdmb_irq_off>;
+		tdmb_pwr_en = <&gpg2 4 0>;
+		tdmb_irq = <&gpa2 5 0>;
+		tdmb_use_irq;
+		tdmb_xtal_freq = <24000>;
+	};
+
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_03.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_03.dts
new file mode 100755
index 0000000000..aa1dd2bfea
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_03.dts
@@ -0,0 +1,197 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_03.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev04 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <3>;
+	model_info-hw_rev_end = <3>;
+	compatible = "samsung, JACKPOTLTE KOR rev04", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+	fimc_is_sensor_2p6: fimc-is_sensor_2p6@5A {
+		gpio_reset = <&gpq0 1 0x1>; /* sensor reset - jackpot hw_rev = 000'b ~ 011'b */
+	};
+
+	/* sec-wf-thermistor */
+	sec_thermistor@6 {
+		status = "disabled";
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_04.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_04.dts
new file mode 100755
index 0000000000..73901b1de4
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_04.dts
@@ -0,0 +1,189 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_04.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <4>;
+	model_info-hw_rev_end = <4>;
+	compatible = "samsung, JACKPOTLTE KOR rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+
+	/* motor control type :  1 = IFPMIC */
+	/*                                  2 = Mot driving IC */
+	motor {
+		motor,motor_type = <2>;
+	};
+
+	pinctrl@13430000 {
+		motor: motor {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+		motor_en_high: motor_en_high {
+			samsung,pins = "gpf3-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <3>;
+			samsung,pin-val = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13890000 {
+		status = "okay";
+ 		#address-cells = <1>;
+		#size-cells = <0>;
+		
+		zh915@7F {
+			compatible = "zh915";
+			reg = <0x7F>;
+			pinctrl-names ="default", "motor_en_high";
+			pinctrl-0 = <&motor>;
+			pinctrl-1 = <&motor_en_high>;
+			status = "okay";
+			mot_boost_en = <&gpf3 4 0>;
+		};
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_05.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_05.dts
new file mode 100755
index 0000000000..ce7edbcfe3
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_05.dts
@@ -0,0 +1,175 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_05.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev05 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <5>;
+	model_info-hw_rev_end = <5>;
+	compatible = "samsung, JACKPOTLTE KOR rev05", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_06.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_06.dts
new file mode 100755
index 0000000000..823e0e6cee
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_06.dts
@@ -0,0 +1,192 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_06.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev06 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <6>;
+	model_info-hw_rev_end = <6>;
+	compatible = "samsung, JACKPOTLTE KOR rev06", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	leds_ktd2692 {
+		compatible = "ktd2692";
+		flash_control = <&gpg1 2 0x1>;
+		max_current = <1360>; /* (IMax) */
+		flash_current = <1200>; /* (n/16)xIMax (1<=n<=16) */
+		movie_current = <175>; /* (n/16)*IMax/3 (1<=n<=16) */
+		factory_current = <175>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_current = <75>; /* (n/16)xIMax/3 (1<=n<=16) */
+		torch_table_enable = <1>;
+		torch_table = <1 2 2 3 3 4 4 4 5 5>;
+		status = "okay";
+		pinctrl-names ="default","host","is";
+		pinctrl-0 = <&fimc_is_flash_is>;
+		pinctrl-1 = <&fimc_is_flash_host>;
+		pinctrl-2 = <&fimc_is_flash_is>;
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_07.dts b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_07.dts
new file mode 100755
index 0000000000..93bc425594
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_07.dts
@@ -0,0 +1,175 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/dts-v1/;
+#include "exynos7885-jackpotlte_common.dtsi"
+#include "exynos7885-jackpotlte_fingerprint-sensor_00.dtsi"
+#include "exynos7885-jackpotlte_kor-tdmb-00.dtsi"
+#include "exynos7885-jackpotlte_kor_gpio_07.dtsi"
+#include "exynos7885-jackpotlte_mst_02.dtsi"
+#include "exynos7885-jackpotlte_svcled.dtsi"
+
+/ {
+	model = "Samsung JACKPOTLTE KOR rev07 board based on EXYNOS7885";
+	model_info-chip = <7885>;
+	model_info-platform = "android";
+	model_info-subtype = "samsung";
+	model_info-hw_rev = <7>;
+	model_info-hw_rev_end = <255>;
+	compatible = "samsung, JACKPOTLTE KOR rev07", "samsung,Universal7885";
+
+	/* SENSORHUB */
+    spi_4: spi@13980000 {
+        #address-cells = <1>;
+        #size-cells = <0>;
+
+        pinctrl-names = "default";
+        pinctrl-0 = <&spi4_miso &spi4_mosi &spi4_cs &spi4_clk>;
+        interrupts = <0 277 0>;
+
+        num-cs = <1>;
+        status = "okay";
+
+		STM32F@0 {
+			compatible = "ssp,STM32F";
+			reg = <0>;
+			spi-max-frequency = <8000000>;
+			spi-cpol;
+			spi-cpha;
+			pinctrl-names = "default";
+			pinctrl-0 = <&ssp_rst &ssp_ap_int &ssp_mcu_int1 &ssp_mcu_int2 &ssp_boot0>;
+
+			gpio-controller;
+			#gpio-cells = <2>;
+			ssp,mcu_int1-gpio = <&gpa1 2 0x00>;
+			ssp,mcu_int2-gpio = <&gpa1 3 0x00>;
+			ssp,ap_int-gpio = <&gpg1 6 0x01>;
+			ssp,rst-gpio = <&gpg3 5 0x01>;
+			ssp,boot0-gpio = <&gpg1 3 0x1>;
+			ssp,acc-position = <7>;
+			ssp,mag-position = <5>;
+			ssp-sns-combination = <0>;
+			ssp,prox-hi_thresh = <55>;
+			ssp,prox-low_thresh = <40>;
+			ssp,prox-detect_hi_thresh = <250>;
+			ssp,prox-detect_low_thresh = <130>;
+			ssp-ap-rev = <1>;
+			ssp-mag-array = /bits/ 8 <207 82 201 4 218 137 254 197 213
+                                    55 35 84 243 129 255 167 2 43
+                                    230 232 191 252 243 208 9 197 21>;
+			ssp-mag-type = <1>;
+			ssp-glass-type = <0>;
+			ssp-acc-type = <1>;
+			ssp-pressure-type = <1>;
+			ssp-project-type = <1>;
+
+
+            controller-data {
+                cs-gpio = <&gpp8 0 0>;
+                samsung,spi-feedback-delay = <0>;
+			};
+        };
+	};
+
+	pinctrl@139B0000 {
+		nfc_pvdd_en: nfc_pvdd_en {
+				samsung,pins = "gpg1-5";
+				samsung,pin-function = <1>;
+				samsung,pin-pud = <0>;
+				samsung,pin-val = <0>;
+				samsung,pin-con-pdn = <3>;
+				samsung,pin-pud-pdn = <0>;
+		};
+
+		nfc_firm: nfc_firm {
+			samsung,pins = "gpg1-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <0>;
+			samsung,pin-val = <0>;
+			samsung,pin-con-pdn = <3>;
+			samsung,pin-pud-pdn = <0>;
+		};
+	};
+
+	i2c_2: i2c@13850000 {
+		sec-nfc@27 {
+			sec-nfc,firm-gpio = <&gpg1 4 1>;
+			sec-nfc,pvdd_en = <&gpg1 5 1>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&nfc_pd &nfc_firm &nfc_int &nfc_clk &nfc_pvdd_en &nfc_clk_req>;
+		};
+	};
+
+	/* USIM DETECTION FOR CP */
+	usim_det {
+		pinctrl-names = "default";
+		pinctrl-0 = <&sim0_det_gpio>;
+		mif,num_of_usim_det = <1>;
+		mif,usim-det0-gpio = <&gpa2 6 0>;
+	};
+
+	/* motor control type :  1 = IFPMIC */
+	/*				2 = Mot driving IC */
+	motor {
+		motor,motor_type = <1>;
+	};
+
+	pinctrl@139B0000 {
+		motor_pwm: motor_pwm {
+			samsung,pins = "gpg0-1";
+			samsung,pin-function = <2>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c@13830000 {
+		s2mu004-haptic@3A {
+			compatible = "sec,s2mu004-haptic";
+			reg = <0x3A>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&motor_pwm>;
+			
+		};
+	};
+
+	pinctrl@11CB0000 {
+		cfg_irq: cfg-irq {
+			samsung,pins = "gpa2-7";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <1>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	pinctrl@139B0000 {
+		cfg_i2c: cfg-i2c {
+			samsung,pins = "gpp4-2", "gpp4-3";
+			samsung,pin-function = <0>;
+			samsung,pin-pud = <0>;
+			samsung,pin-drv = <0>;
+		};
+	};
+
+	i2c_5:i2c@13880000 {
+		pinctrl-names = "default";
+		pinctrl-0 = <&cfg_irq &cfg_i2c>;
+		abov@20 {
+			status = "disabled";
+		};
+	};
+
+	fm@14840000 {
+		/delete-property/ elna_gpio;
+	};
+
+};
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_03.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_03.dtsi
new file mode 100755
index 0000000000..6902f87516
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_03.dtsi
@@ -0,0 +1,163 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_04.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_04.dtsi
new file mode 100755
index 0000000000..2b4676aa90
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_04.dtsi
@@ -0,0 +1,164 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep2>;
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, OUT0, DOWN);	/* MOTOR_BOOST_EN */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_OUT_SET(gpg0-1, 0, LV1); /* MOT_PWM */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, OUT0, NONE);   /*MOT_PWM*/
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, PREV, UP);	/* PMIC_I2C_SDA */
+		PIN_SLP(gpp4-5, PREV, UP);	/* PMIC_I2C_SDA */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_05.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_05.dtsi
new file mode 100755
index 0000000000..888d8795ca
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_05.dtsi
@@ -0,0 +1,170 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_06.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_06.dtsi
new file mode 100755
index 0000000000..c10ce93b6f
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_06.dtsi
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpa1-4, NONE, LV1);	/* BIXVY_KEY */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_07.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_07.dtsi
new file mode 100755
index 0000000000..c10ce93b6f
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_kor_gpio_07.dtsi
@@ -0,0 +1,171 @@
+/*
+ * Copyright (c) 2015 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+#include "exynos_gpio_config_macros.dtsi"
+
+/* 0x11CB_0000(ALIVE): etc0~1, gpa0~2, gpq0 */
+&pinctrl_0 {
+	 /*
+	 * Note:
+	 *   Please do not make "sleep-state" node for GPA group GPIOs.
+	 *   GPA group doesn't have power-down status.
+	 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&initial0>;
+	initial0: initial-state {
+		PIN_IN(gpa1-2, NONE, LV1);	/* SSP_MCU_INT1 */
+		PIN_IN(gpa1-3, NONE, LV1);	/* SSP_MCU_INT2 */
+		PIN_IN(gpa1-4, NONE, LV1);	/* BIXVY_KEY */
+		PIN_IN(gpq0-1, DOWN, LV1);	/* NC */
+	};
+};
+
+/* 0x148F_0000(DISPAUD): gpb0~2 */
+&pinctrl_1 {
+	pinctrl-names = "sleep";
+	pinctrl-0 = <&sleep1>;
+	sleep1: sleep-state {
+		PIN_SLP(gpb0-0, INPUT, DOWN);	/* PM_I2S0_CLK */
+		PIN_SLP(gpb0-1, INPUT, DOWN);	/* PM_I2S0_BCLK */
+		PIN_SLP(gpb0-2, INPUT, DOWN);	/* PM_I2S0_SYNC */
+		PIN_SLP(gpb0-3, INPUT, DOWN);	/* PM_I2S0_DO */
+		PIN_SLP(gpb0-4, INPUT, DOWN);	/* PM_I2S0_DI */
+
+		PIN_SLP(gpb1-0, INPUT, DOWN);	/* FB_I2S1_SDI */
+		PIN_SLP(gpb1-1, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-2, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpb1-3, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpb2-0, INPUT, DOWN);	/* SPK_I2S3_BCLK */
+		PIN_SLP(gpb2-1, INPUT, DOWN);	/* SPK_I2S3_WS */
+		PIN_SLP(gpb2-2, INPUT, DOWN);	/* SPK_I2S3_DO */
+		PIN_SLP(gpb2-3, INPUT, DOWN);	/* SPK_I2S3_DI */
+		PIN_SLP(gpb2-4, INPUT, DOWN);	/* FM_SPDY_TO_S612 */
+	};
+};
+
+/* 0x1343_0000(FSYS): gpf0,2~4 */
+&pinctrl_2 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial2>;
+	pinctrl-1 = <&sleep2>;
+	initial2: initial-state {
+		PIN_IN(gpf3-4, DOWN, LV1);	/* NC */
+	};
+	sleep2: sleep-state {
+		PIN_SLP(gpf0-0, OUT0, NONE);	/* SD_0_CLK */
+		PIN_SLP(gpf0-1, OUT1, NONE);	/* SD_0_CMD */
+		PIN_SLP(gpf0-2, INPUT, DOWN);	/* SD_0_RDQS */
+		PIN_SLP(gpf0-3, PREV, NONE);	/* SD_0_HWreset */
+
+		PIN_SLP(gpf2-0, OUT0, NONE);	/* SD_0_DATA_0 */
+		PIN_SLP(gpf2-1, OUT0, NONE);	/* SD_0_DATA_1 */
+		PIN_SLP(gpf2-2, OUT0, NONE);	/* SD_0_DATA_2 */
+		PIN_SLP(gpf2-3, OUT0, NONE);	/* SD_0_DATA_3 */
+		PIN_SLP(gpf2-4, OUT0, NONE);	/* SD_0_DATA_4 */
+		PIN_SLP(gpf2-5, OUT0, NONE);	/* SD_0_DATA_5 */
+		PIN_SLP(gpf2-6, OUT0, NONE);	/* SD_0_DATA_6 */
+		PIN_SLP(gpf2-7, OUT0, NONE);	/* SD_0_DATA_7 */
+
+		PIN_SLP(gpf4-0, OUT0, NONE);	/* SD_2_CLK */
+		PIN_SLP(gpf4-1, OUT0, NONE);	/* SD_2_CMD */
+		PIN_SLP(gpf4-2, OUT0, NONE);	/* SD_2_DATA_0 */
+		PIN_SLP(gpf4-3, OUT0, NONE);	/* SD_2_DATA_1 */
+		PIN_SLP(gpf4-4, OUT0, NONE);	/* SD_2_DATA_2 */
+		PIN_SLP(gpf4-5, OUT0, NONE);	/* SD_2_DATA_3 */
+
+ 		PIN_SLP(gpf3-4, INPUT, DOWN);	/* NC */
+	};
+};
+
+/* 0x139B_0000(TOP): gpp0~8, gpg0~4, gpc0~2 */
+&pinctrl_3 {
+	pinctrl-names = "default","sleep";
+	pinctrl-0 = <&initial3>;
+	pinctrl-1 = <&sleep3>;
+	initial3: initial-state {
+		PIN_IN(gpp4-4, DOWN, LV1);	/* NC */
+		PIN_IN(gpp4-5, DOWN, LV1);	/* NC */
+		PIN_IN(gpg0-2, DOWN, LV1);	/* NC(FM_LNA_EN) */
+		PIN_OUT_SET(gpg1-6, 1, LV1);	/* SSP_AP_INT */
+		PIN_IN(gpg2-5, DOWN, LV1);	/* NC(GRIP_LDO_EN) */
+		PIN_OUT_SET(gpg3-0, 1, LV1);	/* TSP_LDO_EN */
+		PIN_OUT_SET(gpg3-5, 1, LV1);	/* SSP_RST */
+		PIN_IN(gpg3-7, NONE, LV1);	/* HW_REV0 */
+		PIN_IN(gpg4-0, NONE, LV1);	/* HW_REV1 */
+		PIN_IN(gpg4-1, NONE, LV1);	/* HW_REV2 */
+	};
+	sleep3: sleep-state {
+		PIN_SLP(gpg0-1, PREV, NONE);	/* MOT_PWM */
+
+		PIN_SLP(gpp1-0, INPUT, NONE);	/* FG_I2C_SCL */
+		PIN_SLP(gpp1-1, INPUT, NONE);	/* FG_I2C_SDA */
+		PIN_SLP(gpp1-2, PREV, NONE);	/* IF_PMIC_I2C_SCL */
+		PIN_SLP(gpp1-3, PREV, NONE);	/* IF_PMIC_I2C_SDA */
+
+		PIN_SLP(gpp2-0, INPUT, NONE);	/* NFC_I2C_SCL */
+		PIN_SLP(gpp2-1, INPUT, NONE);	/* NFC_I2C_SDA */
+
+		PIN_SLP(gpp3-0, INPUT, NONE);	/* SPK_AMP_I2C_SCL */
+		PIN_SLP(gpp3-1, INPUT, NONE);	/* SPK_AMP_I2C_SDA */
+		PIN_SLP(gpp3-2, OUT0, DOWN);	/* MST_DATA_A */
+
+		PIN_SLP(gpp4-0, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-1, INPUT, NONE);	/* TSP_I2C_SCL */
+		PIN_SLP(gpp4-2, INPUT, NONE);	/* GRIP_I2C_SDA */
+		PIN_SLP(gpp4-3, INPUT, NONE);	/* GRIP_I2C_SCL */
+		PIN_SLP(gpp4-4, INPUT, DOWN);	/* NC */
+		PIN_SLP(gpp4-5, INPUT, DOWN);	/* NC */
+
+		PIN_SLP(gpp6-0, OUT0, NONE);	/* BTP_SPI_CLK */
+		PIN_SLP(gpp6-1, OUT0, NONE);	/* BTP_SPI_CS_N */
+		PIN_SLP(gpp6-2, INPUT, DOWN);	/* BTP_SPI_MISO */
+		PIN_SLP(gpp6-3, OUT0, NONE);	/* BTP_SPI_MOSI */
+		PIN_SLP(gpp6-4, OUT0, DOWN);	/* MST_DATA_B(EN) */
+
+		PIN_SLP(gpp7-0, INPUT, DOWN);	/* SSP_SPI_MISO */
+		PIN_SLP(gpp7-1, OUT1, UP);	/* SSP_SPI_MOSI */
+
+		PIN_SLP(gpp8-0, OUT1, UP);	/* SSP_SPI_SS_N */
+		PIN_SLP(gpp8-1, OUT1, UP);	/* SSP_SPI_CLK */
+
+		PIN_SLP(gpg0-2, INPUT, DOWN);	/* NC(FM_LNA_EN) */
+
+		PIN_SLP(gpg1-0, PREV, NONE);	/* ESE_1P8_EN */
+		PIN_SLP(gpg1-1, PREV, NONE);	/* PMIC_WRSTBI */
+		PIN_SLP(gpg1-2, PREV, NONE);	/* CAM_FLASH_EN */
+		PIN_SLP(gpg1-3, PREV, NONE);	/* SSP_BOOT0 */
+		PIN_SLP(gpg1-6, PREV, NONE);	/* SSP_AP_INT */
+		PIN_SLP(gpg1-7, PREV, NONE);	/* MLCD_RST */
+
+		PIN_SLP(gpg2-5, INPUT, DOWN);	/* NC(GRIP_LDO_EN) */
+		PIN_SLP(gpg2-6, PREV, NONE);	/* LCD_LDO_1P8 */
+		PIN_SLP(gpg2-7, PREV, NONE);	/* LCD_LDO_3P0 */
+
+		PIN_SLP(gpg3-0, PREV, NONE);	/* TSP_LDO_EN */
+		PIN_SLP(gpg3-1, PREV, DOWN);	/* MST_PWR_EN */
+		PIN_SLP(gpg3-3, PREV, NONE);	/* BTP_LDO_EN */
+		PIN_SLP(gpg3-4, PREV, NONE);	/* BTP_RST_N */
+		PIN_SLP(gpg3-5, PREV, NONE);	/* SSP_RST */
+		PIN_SLP(gpg3-6, INPUT, NONE);	/* TSP_ID */
+		PIN_SLP(gpg3-7, INPUT, NONE);	/* HW_REV0 */
+
+		PIN_SLP(gpg4-0, INPUT, NONE);	/* HW_REV1 */
+		PIN_SLP(gpg4-1, INPUT, NONE);	/* HW_REV2 */
+
+		PIN_SLP(gpc1-0, INPUT, DOWN);	/* FCAM1_I2C_SCL */
+		PIN_SLP(gpc1-1, INPUT, DOWN);	/* FCAM1_I2C_SDA */
+		PIN_SLP(gpc1-2, INPUT, DOWN);	/* RCAM_I2C_SCL */
+		PIN_SLP(gpc1-3, INPUT, DOWN);	/* RCAM_I2C_SDA */
+		PIN_SLP(gpc1-4, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SCL */
+		PIN_SLP(gpc1-5, INPUT, DOWN);	/* RCAM_AF_EEP_I2C_SDA */
+		PIN_SLP(gpc1-6, INPUT, DOWN);	/* FCAM2_I2C_SCL */
+		PIN_SLP(gpc1-7, INPUT, DOWN);	/* FCAM2_I2C_SDA */
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_motor.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_motor.dtsi
new file mode 100755
index 0000000000..ad33d02171
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_motor.dtsi
@@ -0,0 +1,34 @@
+/*
+ * SAMSUNG UNIVERSAL8895 board device tree source
+ *
+ * Copyright (c) 2014 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/ {
+	haptic {
+		status = "okay";
+		haptic,model = <1>;
+		haptic,max_timeout = <10000>;
+		/* for multi-frequency */
+		haptic,multi_frequency = <7>;
+		/* frequency for drv haptic engine */
+		/* frequency   alert low  mid  high  0 */
+		/* frequency   157.86hz 120hz, 150hz, 200hz, 180hz press release*/
+		/* alert duty : 29% */
+		haptic,freq = <0x39 0x69 0x41 0x19 0x27 0x19 0x19>;
+		haptic,duty = <0x25 0x25 0x25 0x25 0x25 0x7c 0x7c>;
+
+		/* Haptic dont support motor */
+		haptic,period = <4807692>;
+		haptic,duty_rate = <2403846>;
+		haptic,pwm_id = <0>;
+		haptic,alert_duty = <0x5C>;
+	};
+};
+
+
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_mst_02.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_mst_02.dtsi
new file mode 100755
index 0000000000..352eb9daf5
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_mst_02.dtsi
@@ -0,0 +1,45 @@
+/* Copyright (c) 2013, Samsung Electronics Corporation. All rights reserved.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 and
+ * only version 2 as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+/ {
+	sec-mst{
+		compatible = "sec-mst";
+		sec-mst,mst-pwr-gpio = <&gpg3 1 0>;
+		sec-mst,mst-en-gpio = <&gpp6 4 0>;
+		sec-mst,mst-data-gpio = <&gpp3 2 0>;
+
+		pinctrl-names = "default";
+		pinctrl-0 = <&mst_pwr_en &mst_en &mst_data>;
+	};
+	
+	pinctrl@139B0000 {
+		mst_pwr_en: sec-mst,mst-pwr-gpio {
+			samsung,pins ="gpg3-1";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+		};
+	};
+	
+	pinctrl@139B0000 {
+		mst_en: sec-mst,mst-en-gpio {
+			samsung,pins ="gpp6-4";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+		};
+
+		mst_data: sec-mst,mst-data-gpio {
+			samsung,pins ="gpp3-2";
+			samsung,pin-function = <1>;
+			samsung,pin-pud = <1>;
+		};
+	};
+};
diff --git a/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_svcled.dtsi b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_svcled.dtsi
new file mode 100755
index 0000000000..d7b16d4465
--- /dev/null
+++ b/arch/arm64/boot/dts/exynos/dtbo/exynos7885-jackpotlte_svcled.dtsi
@@ -0,0 +1,23 @@
+/*
+ * SAMSUNG UNIVERSAL7885 board device tree source
+ *
+ * Copyright (c) 2013 Samsung Electronics Co., Ltd.
+ *		http://www.samsung.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+*/
+
+/ {
+	s2mu004_led {
+		status = "okay";
+		compatible = "s2mu004_led";
+		brightness = <100>;
+		lp_brightness = <100>;
+		nleds = <3>;
+		led_color = "RGB";
+		ratio = <18 7 45 0>;
+		ratio_low = <2 1 3 0>;
+	};
+};
diff --git a/arch/arm64/configs/exynos7885-jackpotlte_defconfig b/arch/arm64/configs/exynos7885-jackpotlte_defconfig
new file mode 100644
index 0000000000..f91265b774
--- /dev/null
+++ b/arch/arm64/configs/exynos7885-jackpotlte_defconfig
@@ -0,0 +1,753 @@
+# CONFIG_LOCALVERSION_AUTO is not set
+# CONFIG_USELIB is not set
+CONFIG_AUDIT=y
+CONFIG_NO_HZ=y
+CONFIG_HIGH_RES_TIMERS=y
+CONFIG_TASKSTATS=y
+CONFIG_TASK_DELAY_ACCT=y
+CONFIG_TASK_XACCT=y
+CONFIG_TASK_IO_ACCOUNTING=y
+CONFIG_IKCONFIG=y
+CONFIG_IKCONFIG_PROC=y
+CONFIG_LOG_BUF_SHIFT=20
+CONFIG_CGROUPS=y
+CONFIG_CGROUP_FREEZER=y
+CONFIG_CGROUP_DEVICE=y
+CONFIG_CPUSETS=y
+CONFIG_CGROUP_CPUACCT=y
+# CONFIG_CGROUP_SCHEDTUNE is not set
+CONFIG_MEMCG=y
+CONFIG_MEMCG_SWAP=y
+CONFIG_CGROUP_SCHED=y
+CONFIG_CFS_BANDWIDTH=y
+CONFIG_RT_GROUP_SCHED=y
+CONFIG_BLK_CGROUP=y
+CONFIG_CGROUP_BPF=y
+CONFIG_NAMESPACES=y
+CONFIG_BLK_DEV_INITRD=y
+CONFIG_CC_OPTIMIZE_FOR_PERFORMANCE_O3_OFAST_SUB_OPTIONS=y
+CONFIG_BPF_SYSCALL=y
+CONFIG_EMBEDDED=y
+# CONFIG_SLUB_DEBUG is not set
+# CONFIG_COMPAT_BRK is not set
+CONFIG_PROFILING=y
+CONFIG_CC_STACKPROTECTOR_STRONG=y
+CONFIG_LTO_CLANG=y
+CONFIG_LLVM_POLLY=y
+CONFIG_MODULES=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODVERSIONS=y
+# CONFIG_BLK_DEV_BSG is not set
+CONFIG_BLK_DEV_THROTTLING=y
+CONFIG_JOURNAL_DATA_TAG=y
+CONFIG_PARTITION_ADVANCED=y
+# CONFIG_IOSCHED_MAPLE is not set
+# CONFIG_CFQ_GROUP_IOSCHED is not set
+# CONFIG_IOSCHED_FIOPS is not set
+# CONFIG_IOSCHED_BFQ is not set
+# CONFIG_IOSCHED_ANXIETY is not set
+# CONFIG_IOSCHED_SIO is not set
+# CONFIG_IOSCHED_DEADLINE is not set
+CONFIG_SOC_EXYNOS7885=y
+CONFIG_ARCH_EXYNOS7=y
+# CONFIG_CAVIUM_ERRATUM_22375 is not set
+# CONFIG_CAVIUM_ERRATUM_23154 is not set
+# CONFIG_CAVIUM_ERRATUM_27456 is not set
+CONFIG_SCHED_MC=y
+CONFIG_DISABLE_CPU_SCHED_DOMAIN_BALANCE=y
+CONFIG_SCHED_HMP=y
+CONFIG_HMP_FAST_CPU_MASK="6-7"
+CONFIG_HMP_SLOW_CPU_MASK="0-5"
+CONFIG_HMP_VARIABLE_SCALE=y
+CONFIG_SCHED_HMP_TASK_BASED_SOFTLANDING=y
+CONFIG_SCHED_HMP_SELECTIVE_BOOST_WITH_NITP=y
+CONFIG_SCHED_SKIP_CORE_SELECTION_MASK=y
+CONFIG_NR_CPUS=8
+CONFIG_NR_CLUSTERS=3
+CONFIG_LITTLE_CPU_MASK=15
+CONFIG_BIG_CPU_MASK=240
+CONFIG_PREEMPT=y
+CONFIG_HZ_250=y
+CONFIG_KSM=y
+CONFIG_CMA_DEBUGFS=y
+CONFIG_ZPOOL=y
+CONFIG_ZSMALLOC=y
+CONFIG_PGTABLE_MAPPING=y
+CONFIG_DIRECT_RECLAIM_FILE_PAGES_ONLY=y
+CONFIG_INCREASE_MAXIMUM_SWAPPINESS=y
+CONFIG_FIX_INACTIVE_RATIO=y
+CONFIG_TIGHT_PGDAT_BALANCE=y
+# CONFIG_SWAP_ENABLE_READAHEAD is not set
+CONFIG_HPA=y
+# CONFIG_MMAP_READAROUND_LIMIT=16
+# CONFIG_FAULT_AROUND_4KB=y
+# CONFIG_MEM_BOOST_THRESHOLD_MB=200
+# CONFIG_UNMAP_KERNEL_AT_EL0=y
+CONFIG_ARMV8_DEPRECATED=y
+CONFIG_SWP_EMULATION=y
+CONFIG_CP15_BARRIER_EMULATION=y
+CONFIG_SETEND_EMULATION=y
+CONFIG_RANDOMIZE_BASE=y
+# CONFIG_EFI is not set
+CONFIG_EUREKA_CUSTOM_DT_NODES=y
+# CONFIG_CORE_DUMP_DEFAULT_ELF_HEADERS is not set
+CONFIG_COMPAT=y
+CONFIG_PM_AUTOSLEEP=y
+CONFIG_PM_WAKELOCKS=y
+CONFIG_PM_WAKELOCKS_LIMIT=0
+# CONFIG_PM_WAKELOCKS_GC is not set
+CONFIG_BOEFFLA_WL_BLOCKER=y
+CONFIG_CPU_IDLE=y
+CONFIG_ARM64_EXYNOS_CPUIDLE=y
+CONFIG_CPU_FREQ=y
+CONFIG_CPU_FREQ_DEFAULT_GOV_INTERACTIVE=y
+CONFIG_CPU_FREQ_GOV_PERFORMANCE=y
+CONFIG_CPU_FREQ_GOV_POWERSAVE=y
+CONFIG_CPU_FREQ_GOV_USERSPACE=y
+CONFIG_CPU_FREQ_GOV_ONDEMAND=y
+CONFIG_CPU_FREQ_GOV_ONDEMANDPLUS=y
+CONFIG_CPU_INDEX_QOS_CLUSTER1=6
+CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y
+CONFIG_CPU_FREQ_GOV_SCHEDUTIL=y
+CONFIG_FREQVAR_SCHEDTUNE=y
+CONFIG_CPU_FREQ_GOV_BLU_ACTIVE=y
+CONFIG_CPU_FREQ_GOV_DARKNESS=y
+CONFIG_CPU_FREQ_GOV_BIOSHOCK=y
+CONFIG_CPU_FREQ_GOV_INTELLIACTIVE=y
+CONFIG_CPU_FREQ_GOV_LIONHEART=y
+CONFIG_CPU_FREQ_GOV_SMARTMAX=y
+CONFIG_CPU_FREQ_GOV_SMARTMAX_EPS=y
+CONFIG_FINGERPRINT_BOOST=y
+CONFIG_ARM_EXYNOS_ACME=y
+CONFIG_ARM_EXYNOS_UFC=y
+CONFIG_NET=y
+CONFIG_PACKET=y
+CONFIG_UNIX=y
+CONFIG_XFRM_USER=y
+CONFIG_XFRM_STATISTICS=y
+CONFIG_NET_KEY=y
+CONFIG_INET=y
+CONFIG_IP_MULTICAST=y
+CONFIG_IP_ADVANCED_ROUTER=y
+CONFIG_IP_MULTIPLE_TABLES=y
+CONFIG_IP_PNP=y
+CONFIG_IP_PNP_DHCP=y
+CONFIG_IP_PNP_BOOTP=y
+CONFIG_IP_PNP_RARP=y
+CONFIG_NET_IPVTI=y
+CONFIG_INET_AH=y
+CONFIG_INET_ESP=y
+CONFIG_INET_IPCOMP=y
+# CONFIG_INET_LRO is not set
+CONFIG_INET_UDP_DIAG=y
+CONFIG_INET_DIAG_DESTROY=y
+CONFIG_TCP_CONG_ADVANCED=y
+CONFIG_TCP_CONG_BIC=y
+CONFIG_TCP_CONG_WESTWOOD=y
+CONFIG_TCP_CONG_HTCP=y
+CONFIG_DEFAULT_WESTWOOD=y
+CONFIG_IPV6_ROUTER_PREF=y
+CONFIG_IPV6_ROUTE_INFO=y
+CONFIG_IPV6_OPTIMISTIC_DAD=y
+CONFIG_INET6_AH=y
+CONFIG_INET6_ESP=y
+CONFIG_INET6_IPCOMP=y
+CONFIG_IPV6_MIP6=y
+CONFIG_IPV6_VTI=y
+CONFIG_IPV6_MULTIPLE_TABLES=y
+CONFIG_NETFILTER=y
+CONFIG_NF_CONNTRACK=y
+CONFIG_NF_CONNTRACK_SECMARK=y
+CONFIG_NF_CONNTRACK_PROCFS=y
+CONFIG_NF_CONNTRACK_EVENTS=y
+CONFIG_NF_CT_PROTO_DCCP=y
+CONFIG_NF_CT_PROTO_SCTP=y
+CONFIG_NF_CT_PROTO_UDPLITE=y
+CONFIG_NF_CONNTRACK_AMANDA=y
+CONFIG_NF_CONNTRACK_FTP=y
+CONFIG_NF_CONNTRACK_H323=y
+CONFIG_NF_CONNTRACK_IRC=y
+CONFIG_NF_CONNTRACK_NETBIOS_NS=y
+CONFIG_NF_CONNTRACK_PPTP=y
+CONFIG_NF_CONNTRACK_SANE=y
+CONFIG_NF_CONNTRACK_TFTP=y
+CONFIG_NF_CT_NETLINK=y
+CONFIG_NETFILTER_XT_TARGET_CLASSIFY=y
+CONFIG_NETFILTER_XT_TARGET_CONNMARK=y
+CONFIG_NETFILTER_XT_TARGET_CONNSECMARK=y
+CONFIG_NETFILTER_XT_TARGET_CT=y
+CONFIG_NETFILTER_XT_TARGET_IDLETIMER=y
+CONFIG_NETFILTER_XT_TARGET_LOG=y
+CONFIG_NETFILTER_XT_TARGET_MARK=y
+CONFIG_NETFILTER_XT_TARGET_NFLOG=y
+CONFIG_NETFILTER_XT_TARGET_NFQUEUE=y
+CONFIG_NETFILTER_XT_TARGET_TPROXY=y
+CONFIG_NETFILTER_XT_TARGET_TRACE=y
+CONFIG_NETFILTER_XT_TARGET_SECMARK=y
+CONFIG_NETFILTER_XT_TARGET_TCPMSS=y
+CONFIG_NETFILTER_XT_MATCH_BPF=y
+CONFIG_NETFILTER_XT_MATCH_COMMENT=y
+CONFIG_NETFILTER_XT_MATCH_CONNBYTES=y
+CONFIG_NETFILTER_XT_MATCH_CONNLABEL=y
+CONFIG_NETFILTER_XT_MATCH_CONNLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_CONNMARK=y
+CONFIG_NETFILTER_XT_MATCH_CONNTRACK=y
+CONFIG_NETFILTER_XT_MATCH_HASHLIMIT=y
+CONFIG_NETFILTER_XT_MATCH_HELPER=y
+CONFIG_NETFILTER_XT_MATCH_IPRANGE=y
+CONFIG_NETFILTER_XT_MATCH_LENGTH=y
+CONFIG_NETFILTER_XT_MATCH_LIMIT=y
+CONFIG_NETFILTER_XT_MATCH_MAC=y
+CONFIG_NETFILTER_XT_MATCH_MARK=y
+CONFIG_NETFILTER_XT_MATCH_OWNER=y
+CONFIG_NETFILTER_XT_MATCH_POLICY=y
+CONFIG_NETFILTER_XT_MATCH_PKTTYPE=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2=y
+CONFIG_NETFILTER_XT_MATCH_QUOTA2_LOG=y
+CONFIG_NETFILTER_XT_MATCH_SCTP=y
+CONFIG_NETFILTER_XT_MATCH_SOCKET=y
+CONFIG_NETFILTER_XT_MATCH_STATE=y
+CONFIG_NETFILTER_XT_MATCH_STATISTIC=y
+CONFIG_NETFILTER_XT_MATCH_STRING=y
+CONFIG_NETFILTER_XT_MATCH_TIME=y
+CONFIG_NETFILTER_XT_MATCH_U32=y
+CONFIG_NF_HISTORY=y
+CONFIG_NF_CONNTRACK_IPV4=y
+CONFIG_IP_NF_IPTABLES=y
+CONFIG_IP_NF_MATCH_AH=y
+CONFIG_IP_NF_MATCH_ECN=y
+CONFIG_IP_NF_MATCH_RPFILTER=y
+CONFIG_IP_NF_MATCH_TTL=y
+CONFIG_IP_NF_FILTER=y
+CONFIG_IP_NF_TARGET_REJECT=y
+CONFIG_IP_NF_NAT=y
+CONFIG_IP_NF_TARGET_MASQUERADE=y
+CONFIG_IP_NF_TARGET_NETMAP=y
+CONFIG_IP_NF_TARGET_REDIRECT=y
+CONFIG_IP_NF_MANGLE=y
+CONFIG_IP_NF_TARGET_TTL=y
+CONFIG_IP_NF_RAW=y
+CONFIG_IP_NF_SECURITY=y
+CONFIG_IP_NF_ARPTABLES=y
+CONFIG_IP_NF_ARPFILTER=y
+CONFIG_IP_NF_ARP_MANGLE=y
+CONFIG_NF_CONNTRACK_IPV6=y
+CONFIG_IP6_NF_IPTABLES=y
+CONFIG_IP6_NF_MATCH_RPFILTER=y
+CONFIG_IP6_NF_FILTER=y
+CONFIG_IP6_NF_TARGET_REJECT=y
+CONFIG_IP6_NF_MANGLE=y
+CONFIG_IP6_NF_RAW=y
+CONFIG_IP6_NF_NAT=y
+CONFIG_IP6_NF_TARGET_MASQUERADE=y
+CONFIG_PHONET=y
+CONFIG_NET_SCHED=y
+CONFIG_NET_SCH_HTB=y
+CONFIG_NET_SCH_PRIO=y
+CONFIG_NET_SCH_FQ_CODEL=y
+CONFIG_NET_SCH_INGRESS=y
+CONFIG_NET_CLS_BASIC=y
+CONFIG_NET_CLS_U32=y
+CONFIG_NET_CLS_BPF=y
+CONFIG_NET_EMATCH=y
+CONFIG_NET_EMATCH_U32=y
+CONFIG_NET_CLS_ACT=y
+CONFIG_NET_ACT_POLICE=y
+CONFIG_NET_ACT_GACT=y
+CONFIG_NET_ACT_MIRRED=y
+CONFIG_NET_ACT_BPF=y
+# CONFIG_KNOX_NCM is not set
+CONFIG_BPF_JIT=y
+CONFIG_CFG80211=y
+CONFIG_CFG80211_WEXT=y
+CONFIG_CFG80211_REG_NOT_UPDATED=y
+CONFIG_SAMSUNG_NFC=y
+CONFIG_ESE_P3_LSI=y
+CONFIG_ESE_SECURE=y
+CONFIG_ESE_SECURE_SPI_PORT=0
+CONFIG_SEC_NFC=y
+CONFIG_SEC_NFC_LOGGER=y
+CONFIG_UEVENT_HELPER_PATH="/sbin/hotplug"
+CONFIG_DEVTMPFS=y
+CONFIG_FW_LOADER_USER_HELPER_FALLBACK=y
+CONFIG_CMA_SIZE_MBYTES=20
+CONFIG_ZRAM=y
+CONFIG_BLK_DEV_LOOP=y
+CONFIG_BLK_DEV_LOOP_MIN_COUNT=16
+CONFIG_BLK_DEV_RAM=y
+CONFIG_BLK_DEV_RAM_SIZE=8192
+CONFIG_UID_SYS_STATS=y
+CONFIG_MEMORY_STATE_TIME=y
+CONFIG_USB_FAST_CHARGE=y
+CONFIG_MCU_IPC=y
+CONFIG_SHM_IPC=y
+CONFIG_USIM_DETECT=y
+CONFIG_SEC_SIPC_MODEM_IF=y
+# CONFIG_CP_ZEROCOPY is not set
+CONFIG_CP_RAM_LOGGING=y
+CONFIG_CP_UART_NOTI=y
+CONFIG_PMU_UART_SWITCH=y
+CONFIG_GNSS_SHMEM_IF=y
+CONFIG_SCSC_CORE=y
+CONFIG_SCSC_WLBT_CONFIG_PLATFORM="lassen_univ"
+CONFIG_SCSC_PLATFORM=y
+CONFIG_SCSC_MMAP=y
+CONFIG_SCSC_DEBUG=y
+CONFIG_SCSC_DEBUG_COMPATIBILITY=y
+CONFIG_SCSC_STATIC_RING=y
+CONFIG_SCSC_STATIC_RING_SIZE=4194304
+CONFIG_SCSC_BUILD_TYPE="User"
+CONFIG_SCSC_WIFILOGGER=y
+CONFIG_SCSC_BT=y
+CONFIG_SCSC_ANT=y
+CONFIG_VBUS_NOTIFIER=y
+CONFIG_USE_MUIC=y
+CONFIG_MUIC_NOTIFIER=y
+CONFIG_MUIC_MANAGER=y
+CONFIG_MUIC_SUPPORT_CCIC=y
+CONFIG_MUIC_S2MU004=y
+CONFIG_HV_MUIC_S2MU004_AFC=y
+CONFIG_NONE_WATERPROOF_MODEL=y
+CONFIG_MUIC_SUPPORT_PRSWAP=y
+CONFIG_SCSI=y
+CONFIG_BLK_DEV_SD=y
+CONFIG_MD=y
+CONFIG_BLK_DEV_DM=y
+CONFIG_DM_CRYPT=y
+CONFIG_DM_UEVENT=y
+CONFIG_DM_VERITY=y
+CONFIG_NETDEVICES=y
+CONFIG_TUN=y
+CONFIG_PPP=y
+CONFIG_PPP_BSDCOMP=y
+CONFIG_PPP_DEFLATE=y
+CONFIG_PPP_MPPE=y
+CONFIG_PPPOLAC=y
+CONFIG_PPPOPNS=y
+CONFIG_USB_RTL8150=y
+CONFIG_USB_RTL8152=y
+CONFIG_USB_USBNET=y
+CONFIG_USB_NET_CDC_EEM=y
+CONFIG_USB_NET_CDC_MBIM=y
+CONFIG_USB_NET_SMSC75XX=y
+CONFIG_USB_NET_SMSC95XX=y
+CONFIG_SCSC_WLAN=y
+# CONFIG_SCSC_WLAN_HANG_TEST is not set
+CONFIG_SCSC_WLAN_MAC_ADDRESS_FILENAME="/mnt/vendor/efs/wifi/.mac.info"
+CONFIG_SCSC_WLAN_AP_INFO_FILE=y
+CONFIG_SCSC_WLAN_MHS_STATIC_INTERFACE=y
+CONFIG_INPUT_EVDEV=y
+CONFIG_INPUT_KEYRESET=y
+CONFIG_INPUT_TOUCHSCREEN_TCLMV2=y
+CONFIG_KEYBOARD_GPIO=y
+CONFIG_KEYBOARD_SAMSUNG=y
+# CONFIG_INPUT_MOUSE is not set
+CONFIG_INPUT_JOYSTICK=y
+CONFIG_JOYSTICK_XPAD=y
+CONFIG_JOYSTICK_XPAD_FF=y
+CONFIG_JOYSTICK_XPAD_LEDS=y
+CONFIG_INPUT_TABLET=y
+CONFIG_TABLET_USB_ACECAD=y
+CONFIG_TABLET_USB_AIPTEK=y
+CONFIG_TABLET_USB_GTCO=y
+CONFIG_TABLET_USB_HANWANG=y
+CONFIG_TABLET_USB_KBTAB=y
+CONFIG_INPUT_TOUCHSCREEN=y
+CONFIG_TOUCHSCREEN_DUMP_MODE=y
+CONFIG_TOUCHSCREEN_SEC_TS_GLOVEMODE=y
+CONFIG_INPUT_MISC=y
+CONFIG_INPUT_KEYCHORD=y
+CONFIG_INPUT_UINPUT=y
+CONFIG_INPUT_GPIO=y
+CONFIG_FLIP_COVER=y
+# CONFIG_SERIO_SERPORT is not set
+# CONFIG_VT is not set
+# CONFIG_LEGACY_PTYS is not set
+# CONFIG_DEVMEM is not set
+# CONFIG_DEVKMEM is not set
+CONFIG_SERIAL_SAMSUNG=y
+CONFIG_SERIAL_SAMSUNG_CONSOLE=y
+CONFIG_S3C_LOWLEVEL_UART_PORT=2
+# CONFIG_HW_RANDOM_EXYNOS is not set
+CONFIG_EXYRNG_FIPS_COMPLIANCE=y
+CONFIG_EXYRNG_FAIL_POLICY_RESET=y
+CONFIG_EXYRNG_USE_CRYPTOMANAGER=y
+CONFIG_I2C_CHARDEV=y
+CONFIG_I2C_GPIO=y
+CONFIG_I2C_S3C2410=y
+CONFIG_SPI=y
+CONFIG_SPI_S3C64XX=y
+CONFIG_SENSORS_FP_SPI_NUMBER=1
+CONFIG_PINCTRL_EXYNOS=y
+CONFIG_GPIOLIB=y
+CONFIG_SENSORS_SEC_THERMISTOR=y
+CONFIG_THERMAL=y
+CONFIG_CPU_THERMAL=y
+CONFIG_GPU_THERMAL=y
+CONFIG_THERMAL_EMULATION=y
+CONFIG_EXYNOS_THERMAL=y
+CONFIG_WATCHDOG=y
+CONFIG_S3C2410_WATCHDOG=y
+CONFIG_MFD_S2MPU08=y
+CONFIG_MFD_S2MU004=y
+CONFIG_REGULATOR_FIXED_VOLTAGE=y
+CONFIG_REGULATOR_S2MPU08=y
+CONFIG_MEDIA_SUPPORT=y
+CONFIG_MEDIA_CAMERA_SUPPORT=y
+CONFIG_MEDIA_RADIO_SUPPORT=y
+CONFIG_V4L_PLATFORM_DRIVERS=y
+CONFIG_VIDEO_EXYNOS_G2D1SHOT=y
+CONFIG_VIDEO_EXYNOS_SCALER=y
+CONFIG_VIDEO_EXYNOS_MFC=y
+CONFIG_VIDEO_EXYNOS_SMFC=y
+CONFIG_USE_CSI_DMAOUT_FEATURE=y
+CONFIG_CAMERA_CIS_2P6_OBJ=y
+CONFIG_CAMERA_CIS_3P8SP_OBJ=y
+CONFIG_CAMERA_CIS_SR846_OBJ=y
+CONFIG_CAMERA_ACT_AK7372_OBJ=y
+CONFIG_CAMERA_FLASH_KTD2692_OBJ=y
+CONFIG_USE_SENSOR_GROUP=y
+CONFIG_CAMERA_EEPROM_SUPPORT_REAR=y
+CONFIG_CAMERA_EEPROM_SUPPORT_FRONT=y
+CONFIG_CAMERA_JACKPOT=y
+CONFIG_VIDEO_EXYNOS_FIMC_LEGACY=y
+CONFIG_VENDER_MCD_LEGACY=y
+CONFIG_RADIO_S5E7885=y
+CONFIG_RADIO_S610=y
+CONFIG_DDK_VERSION_OS="p"
+CONFIG_MALI_TMIX=y
+CONFIG_MALI_MIDGARD=y
+CONFIG_MALI_DMA_FENCE=y
+CONFIG_EXYNOS_SOC_NAME="7885"
+CONFIG_FB=y
+CONFIG_FB_SIMPLE=y
+CONFIG_EXYNOS_VIDEO=y
+CONFIG_EXYNOS_MIPI_DSI=y
+CONFIG_FB_WINDOW_UPDATE=y
+CONFIG_DECON_HIBER=y
+CONFIG_EXYNOS_DECON_LCD=y
+CONFIG_EXYNOS_DOZE=y
+CONFIG_LCD_HMT=y
+CONFIG_LOGGING_BIGDATA_BUG=y
+CONFIG_DISPLAY_USE_INFO=y
+CONFIG_EXYNOS_DECON_MDNIE=y
+CONFIG_EXYNOS_DECON_LCD_S6E3FA7_JACKPOT=y
+CONFIG_BACKLIGHT_LCD_SUPPORT=y
+CONFIG_LCD_CLASS_DEVICE=y
+CONFIG_BACKLIGHT_CLASS_DEVICE=y
+CONFIG_SOUND=y
+CONFIG_SND=y
+CONFIG_SND_DYNAMIC_MINORS=y
+CONFIG_SND_USB_AUDIO=y
+CONFIG_SND_SOC=y
+CONFIG_SND_SOC_SAMSUNG_EXYNOS7885=y
+CONFIG_SND_SOC_SAMSUNG_EXYNOS7885_COD3035=y
+CONFIG_SEC_SND_SYNCHRONIZED_IPC=y
+CONFIG_SND_SOC_FM=y
+CONFIG_SND_SOC_TFA9872=y
+CONFIG_SND_SOC_DBMDX=y
+CONFIG_SND_SOC_DBMDX_SND_CAPTURE=y
+CONFIG_HIDRAW=y
+CONFIG_UHID=y
+CONFIG_HID_A4TECH=y
+CONFIG_HID_ACRUX=y
+CONFIG_HID_ACRUX_FF=y
+CONFIG_HID_APPLE=y
+CONFIG_HID_BELKIN=y
+CONFIG_HID_CHERRY=y
+CONFIG_HID_CHICONY=y
+CONFIG_HID_PRODIKEYS=y
+CONFIG_HID_CYPRESS=y
+CONFIG_HID_DRAGONRISE=y
+CONFIG_DRAGONRISE_FF=y
+CONFIG_HID_EMS_FF=y
+CONFIG_HID_ELECOM=y
+CONFIG_HID_EZKEY=y
+CONFIG_HID_HOLTEK=y
+CONFIG_HID_KEYTOUCH=y
+CONFIG_HID_KYE=y
+CONFIG_HID_UCLOGIC=y
+CONFIG_HID_WALTOP=y
+CONFIG_HID_GYRATION=y
+CONFIG_HID_TWINHAN=y
+CONFIG_HID_KENSINGTON=y
+CONFIG_HID_LCPOWER=y
+CONFIG_HID_LOGITECH=y
+CONFIG_HID_LOGITECH_DJ=y
+CONFIG_LOGITECH_FF=y
+CONFIG_LOGIRUMBLEPAD2_FF=y
+CONFIG_LOGIG940_FF=y
+CONFIG_HID_MAGICMOUSE=y
+CONFIG_HID_MICROSOFT=y
+CONFIG_HID_MONTEREY=y
+CONFIG_HID_MULTITOUCH=y
+CONFIG_HID_NINTENDO=y
+CONFIG_HID_NTRIG=y
+CONFIG_HID_ORTEK=y
+CONFIG_HID_PANTHERLORD=y
+CONFIG_PANTHERLORD_FF=y
+CONFIG_HID_PETALYNX=y
+CONFIG_HID_PICOLCD=y
+CONFIG_HID_PLAYSTATION=y
+CONFIG_HID_PRIMAX=y
+CONFIG_HID_ROCCAT=y
+CONFIG_HID_SAITEK=y
+CONFIG_HID_SAMSUNG=y
+CONFIG_HID_SONY=y
+CONFIG_SONY_FF=y
+CONFIG_HID_SPEEDLINK=y
+CONFIG_HID_SUNPLUS=y
+CONFIG_HID_GREENASIA=y
+CONFIG_GREENASIA_FF=y
+CONFIG_HID_SMARTJOYPLUS=y
+CONFIG_SMARTJOYPLUS_FF=y
+CONFIG_HID_SYNAPTICS_BT=y
+CONFIG_HID_TIVO=y
+CONFIG_HID_TOPSEED=y
+CONFIG_HID_THRUSTMASTER=y
+CONFIG_HID_WACOM=y
+CONFIG_HID_WIIMOTE=y
+CONFIG_HID_ZEROPLUS=y
+CONFIG_HID_ZYDACRON=y
+CONFIG_HID_OVR=y
+CONFIG_HID_MADCATZ=y
+CONFIG_USB_HIDDEV=y
+CONFIG_USB_ANNOUNCE_NEW_DEVICES=y
+CONFIG_USB_XHCI_HCD=y
+CONFIG_USB_ACM=y
+CONFIG_USB_PRINTER=y
+CONFIG_USB_WDM=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_HOST_NOTIFY=y
+CONFIG_USB_NOTIFY_LAYER=y
+CONFIG_USB_NOTIFIER=y
+CONFIG_USB_STORAGE_DETECT=y
+CONFIG_USB_HMT_SAMSUNG_INPUT=y
+CONFIG_USB_EXTERNAL_NOTIFY=y
+CONFIG_USB_NOTIFY_PROC_LOG=y
+CONFIG_USB_HOST_SAMSUNG_FEATURE=y
+CONFIG_USB_HW_PARAM=y
+CONFIG_USB_TYPEC_MANAGER_NOTIFIER=y
+CONFIG_USB_DWC3=y
+CONFIG_USB_SERIAL=y
+CONFIG_USB_SERIAL_FTDI_SIO=y
+CONFIG_USB_SERIAL_PL2303=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_G_ANDROID=y
+CONFIG_USB_ANDROID_SAMSUNG_COMPOSITE=y
+CONFIG_USB_DUN_SUPPORT=y
+CONFIG_USB_NCM_SUPPORT_MTU_CHANGE=y
+CONFIG_USB_CONFIGFS=y
+CONFIG_USB_CONFIGFS_ACM=y
+CONFIG_USB_CONFIGFS_NCM=y
+CONFIG_USB_CONFIGFS_RNDIS=y
+CONFIG_USB_CONFIGFS_MASS_STORAGE=y
+CONFIG_USB_CONFIGFS_F_FS=y
+CONFIG_USB_CONFIGFS_F_DM=y
+CONFIG_USB_CONFIGFS_F_ADB=y
+CONFIG_USB_CONFIGFS_F_MTP=y
+CONFIG_USB_CONFIGFS_F_PTP=y
+CONFIG_USB_CONFIGFS_F_CONN_GADGET=y
+CONFIG_USB_CONFIGFS_F_ACC=y
+CONFIG_USB_CONFIGFS_F_AUDIO_SRC=y
+CONFIG_USB_CONFIGFS_UEVENT=y
+CONFIG_USB_RNDIS_MULTIPACKET=y
+CONFIG_USB_CONFIGFS_F_MIDI=y
+CONFIG_MMC=y
+CONFIG_MMC_BLOCK_DEFERRED_RESUME=y
+CONFIG_MMC_DATA_LOG=y
+CONFIG_MMC_DW=y
+CONFIG_MMC_DW_IDMAC=y
+CONFIG_MMC_DW_64BIT_DESC=y
+CONFIG_MMC_DW_EXYNOS=y
+CONFIG_MMC_DW_EXYNOS_FMP=y
+CONFIG_MMC_DW_EXYNOS_SMU=y
+CONFIG_MMC_DW_FORCE_32BIT_SFR_RW=y
+CONFIG_MMC_CQ_HCI=y
+CONFIG_MMC_SRPMB=y
+CONFIG_LEDS_KTD2692=y
+CONFIG_LEDS_S2MU004_RGB=y
+CONFIG_SWITCH=y
+CONFIG_RTC_CLASS=y
+CONFIG_RTC_HIGH_RES=y
+CONFIG_RTC_DRV_S2MPU08=y
+CONFIG_STAGING=y
+CONFIG_ASHMEM=y
+CONFIG_ANDROID_TIMED_GPIO=y
+CONFIG_ANDROID_LOW_MEMORY_KILLER=y
+CONFIG_SYNC=y
+CONFIG_SW_SYNC=y
+CONFIG_SW_SYNC_USER=y
+CONFIG_ANDROID_INTF_ALARM_DEV=y
+# CONFIG_SAMSUNG_LMKD_DEBUG is not set
+CONFIG_ION=y
+CONFIG_ION_EXYNOS=y
+# CONFIG_ION_EXYNOS_STAT_LOG is not set
+CONFIG_HPA_EXTRA=y
+# CONFIG_SEC_DEBUG_RESET_REASON is not set
+# CONFIG_SEC_DEBUG_AUTO_SUMMARY is not set
+# CONFIG_SEC_UPLOAD is not set
+# CONFIG_SEC_FD_DETECT is not set
+# CONFIG_SEC_DEBUG_INIT_LOG is not set
+CONFIG_SEC_PARAM=y
+CONFIG_CM_OFFSET=7340596
+CONFIG_FMM_LOCK_OFFSET=7340680
+# CONFIG_SEC_EVENT_LOG is not set
+# CONFIG_SEC_BOOTSTAT is not set
+CONFIG_ARGOS=y
+CONFIG_SAMSUNG_PRODUCT_SHIP=y
+# CONFIG_SEC_DEBUG_INIT_EXIT_PANIC is not set
+# CONFIG_SEC_PM_DEBUG is not set
+CONFIG_SEC_NAD=y
+CONFIG_SEC_SUPPORT_SECOND_NAD=y
+CONFIG_SEC_NAD_API=y
+CONFIG_SEC_NAD_BALANCER=y
+CONFIG_SEC_GPIO=y
+CONFIG_SEC_DEBUG_SUPPORT_FORCE_UPLOAD=y
+CONFIG_VNSWAP=y
+CONFIG_EXYNOS_IOMMU=y
+CONFIG_SOC_SAMSUNG=y
+CONFIG_EXYNOS_CHIPID=y
+CONFIG_EXYNOS_PMU=y
+CONFIG_EXYNOS_REBOOT=y
+CONFIG_ECT=y
+CONFIG_ECT_DUMP=y
+CONFIG_BYPASS_CPU_THROTTLING=y
+CONFIG_EXYNOS_PD=y
+CONFIG_EXYNOS_RGT=y
+CONFIG_CAL_IF=y
+CONFIG_CP_PMUCAL=y
+CONFIG_CMUCAL_QCH_IGNORE_SUPPORT=y
+CONFIG_USI=y
+CONFIG_EXYNOS_ACPM=y
+CONFIG_EXYNOS_DVFS_MANAGER=y
+CONFIG_STATE_NOTIFIER=y
+CONFIG_PM_DEVFREQ=y
+CONFIG_ARM_EXYNOS_DEVFREQ=y
+CONFIG_ARM_EXYNOS_DEVFREQ_DEBUG=y
+CONFIG_DEVFREQ_BOOST=y
+CONFIG_DEVFREQ_EXYNOS_MIF_BOOST_FREQ=1014000
+CONFIG_IIO=y
+CONFIG_IIO_BUFFER=y
+CONFIG_IIO_KFIFO_BUF=y
+CONFIG_IIO_TRIGGER=y
+CONFIG_EXYNOS_ADC=y
+CONFIG_PWM=y
+CONFIG_PWM_SAMSUNG=y
+CONFIG_BATTERY_SAMSUNG=y
+CONFIG_BATTERY_SWELLING=y
+CONFIG_CALC_TIME_TO_FULL=y
+CONFIG_BATTERY_AGE_FORECAST=y
+CONFIG_AFC_CHARGER_MODE=y
+CONFIG_BATTERY_NOTIFIER=y
+CONFIG_BATTERY_SAMSUNG_V2=y
+CONFIG_BATTERY_CISD=y
+CONFIG_FUELGAUGE_S2MU004=y
+CONFIG_CHARGER_S2MU004=y
+# CONFIG_PHY_EXYNOS_MIPI_VIDEO is not set
+CONFIG_PHY_EXYNOS_MIPI=y
+# CONFIG_PHY_EXYNOS_DP_VIDEO is not set
+CONFIG_PHY_EXYNOS_USBDRD3=y
+CONFIG_ANDROID=y
+CONFIG_ANDROID_BINDER_IPC=y
+# CONFIG_EXYNOS_SNAPSHOT_I2C is not set
+# CONFIG_EXYNOS_SNAPSHOT_SPI is not set
+# CONFIG_EXYNOS_CONSOLE_DEBUGGER is not set
+CONFIG_TRUSTONIC_TRUSTED_UI=y
+CONFIG_TRUSTONIC_TRUSTED_UI_FB_BLANK=y
+CONFIG_SECURE_OS_CONTROL=y
+CONFIG_SECURE_OS_BOOSTER_API=y
+CONFIG_USE_CCIC=y
+CONFIG_CCIC_S2MU004=y
+CONFIG_CCIC_VDM=y
+CONFIG_CCIC_NOTIFIER=y
+CONFIG_SENSORS_FINGERPRINT=y
+CONFIG_SENSORS_ET5XX=y
+CONFIG_SENSORS_SSP=y
+CONFIG_SENSORS_SSP_STM32=y
+CONFIG_SENSORS_SSP_ATUC128L5HAR=y
+CONFIG_SENSORS_SSP_ACCELOMETER=y
+CONFIG_SENSORS_SSP_GYROSCOPE=y
+CONFIG_SENSORS_SSP_MAGNETIC=y
+CONFIG_SENSORS_SSP_PROXIMITY=y
+CONFIG_SENSORS_SSP_LIGHT=y
+CONFIG_SENSORS_SSP_BAROMETER=y
+CONFIG_SENSORS_SSP_MOBEAM=y
+CONFIG_SENSORS_SSP_ACCELOMETER_LSM6DSL=y
+CONFIG_SENSORS_SSP_GYROSCOPE_LSM6DSL=y
+CONFIG_SENSORS_SSP_MAGNETIC_AK09918C=y
+CONFIG_SENSORS_SSP_PROXIMITY_AUTO_CAL_TMD3725=y
+CONFIG_SENSORS_SSP_LIGHT_TMD3725=y
+CONFIG_SENSORS_SSP_BAROMETER_LPS22H=y
+CONFIG_MOTOR_ZH915=y
+CONFIG_MOTOR_S2MU004=y
+CONFIG_EXT2_FS=y
+CONFIG_EXT2_FS_XATTR=y
+CONFIG_EXT2_FS_SECURITY=y
+CONFIG_EXT3_FS=y
+CONFIG_EXT4_FS_SECURITY=y
+CONFIG_EXT4_ENCRYPTION=y
+CONFIG_EXT4_PRIVATE_ENCRYPTION=y
+CONFIG_F2FS_FS=y
+CONFIG_F2FS_FS_SECURITY=y
+CONFIG_F2FS_FS_ENCRYPTION=y
+CONFIG_QUOTA=y
+CONFIG_QUOTA_NETLINK_INTERFACE=y
+# CONFIG_PRINT_QUOTA_WARNING is not set
+CONFIG_QFMT_V2=y
+CONFIG_FUSE_FS=y
+CONFIG_OVERLAY_FS=y
+CONFIG_MSDOS_FS=y
+CONFIG_VFAT_FS=y
+# CONFIG_SDFAT_DEBUG is not set
+# CONFIG_NTFS_FS=y
+# CONFIG_PROC_FSLOG is not set
+CONFIG_TMPFS=y
+CONFIG_TMPFS_POSIX_ACL=y
+# CONFIG_ECRYPT_FS=y
+# CONFIG_SDP=y
+# CONFIG_DLP=y
+# CONFIG_WTL_ENCRYPTION_FILTER=y
+# CONFIG_ECRYPTFS_FEK_INTEGRITY=y
+CONFIG_CRAMFS=y
+CONFIG_PSTORE_CONSOLE=y
+CONFIG_PRINTK_TIME=y
+CONFIG_PRINTK_PROCESS=y
+CONFIG_FRAME_WARN=0
+CONFIG_DEBUG_FS=y
+CONFIG_DEBUG_SECTION_MISMATCH=y
+CONFIG_MAGIC_SYSRQ=y
+CONFIG_PANIC_TIMEOUT=5
+# CONFIG_SCHED_DEBUG is not set
+CONFIG_SCHEDSTATS=y
+CONFIG_STACKTRACE=y
+CONFIG_STRICT_DEVMEM=y
+CONFIG_MACH_EXYNOS7885_JACKPOTLTE_GLOBAL=y
+CONFIG_SECURITY_PERF_EVENTS_RESTRICT=y
+CONFIG_SECURITY=y
+CONFIG_SECURITYFS=y
+CONFIG_SECURITY_NETWORK=y
+CONFIG_LSM_MMAP_MIN_ADDR=4096
+CONFIG_HARDENED_USERCOPY=y
+CONFIG_SECURITY_SELINUX=y
+CONFIG_SECURITY_SELINUX_BOOTPARAM=y
+# CONFIG_SELINUX_STATE_DT_NODE=y
+# CONFIG_INTEGRITY is not set
+CONFIG_CRYPTO_RSA=y
+CONFIG_CRYPTO_GCM=y
+CONFIG_CRYPTO_CHACHA20POLY1305=y
+CONFIG_CRYPTO_KEYWRAP=y
+CONFIG_CRYPTO_SHA512=y
+CONFIG_CRYPTO_TWOFISH=y
+CONFIG_CRYPTO_LZ4HC=y
+CONFIG_CRYPTO_ZSTD=y
+CONFIG_EXYNOS_SMU=y
+CONFIG_EXYNOS_FMP=y
+CONFIG_ASYMMETRIC_KEY_TYPE=y
+CONFIG_ASYMMETRIC_PUBLIC_KEY_SUBTYPE=y
+CONFIG_X509_CERTIFICATE_PARSER=y
+CONFIG_SYSTEM_TRUSTED_KEYRING=y
+CONFIG_SYSTEM_TRUSTED_KEYS="verity_dev_keys.x509"
+CONFIG_ARM64_CRYPTO=y
+CONFIG_CRYPTO_SHA1_ARM64_CE=y
+CONFIG_CRYPTO_SHA2_ARM64_CE=y
+CONFIG_CRYPTO_AES_ARM64_CE_BLK=y
+CONFIG_CRYPTO_CRC32_ARM64=y
diff --git a/kernel/trace/ring_buffer.c b/kernel/trace/ring_buffer.c
index 9a6c9f5535..5e0d1cedbf 100755
--- a/kernel/trace/ring_buffer.c
+++ b/kernel/trace/ring_buffer.c
@@ -463,8 +463,6 @@ struct ring_buffer_per_cpu {
 	unsigned long			read_bytes;
 	u64				write_stamp;
 	u64				read_stamp;
-	/* pages removed since last reset */
-	unsigned long			pages_removed;
 	/* ring buffer pages to update, > 0 to add, < 0 to remove */
 	long				nr_pages_to_update;
 	struct list_head		new_pages; /* new pages to add */
@@ -501,7 +499,6 @@ struct ring_buffer_iter {
 	struct buffer_page		*head_page;
 	struct buffer_page		*cache_reader_page;
 	unsigned long			cache_read;
-	unsigned long			cache_pages_removed;
 	u64				read_stamp;
 };
 
@@ -516,9 +513,8 @@ static void rb_wake_up_waiters(struct irq_work *work)
 	struct rb_irq_work *rbwork = container_of(work, struct rb_irq_work, work);
 
 	wake_up_all(&rbwork->waiters);
-	if (rbwork->full_waiters_pending || rbwork->wakeup_full) {
+	if (rbwork->wakeup_full) {
 		rbwork->wakeup_full = false;
-		rbwork->full_waiters_pending = false;
 		wake_up_all(&rbwork->full_waiters);
 	}
 }
@@ -1277,13 +1273,11 @@ static void rb_free_cpu_buffer(struct ring_buffer_per_cpu *cpu_buffer)
 	struct list_head *head = cpu_buffer->pages;
 	struct buffer_page *bpage, *tmp;
 
-	irq_work_sync(&cpu_buffer->irq_work.work);
-
 	free_buffer_page(cpu_buffer->reader_page);
 
-	if (head) {
-		rb_head_page_deactivate(cpu_buffer);
+	rb_head_page_deactivate(cpu_buffer);
 
+	if (head) {
 		list_for_each_entry_safe(bpage, tmp, head, list) {
 			list_del_init(&bpage->list);
 			free_buffer_page(bpage);
@@ -1292,8 +1286,6 @@ static void rb_free_cpu_buffer(struct ring_buffer_per_cpu *cpu_buffer)
 		free_buffer_page(bpage);
 	}
 
-	free_page((unsigned long)cpu_buffer->free_page);
-
 	kfree(cpu_buffer);
 }
 
@@ -1411,8 +1403,6 @@ ring_buffer_free(struct ring_buffer *buffer)
 	__unregister_cpu_notifier(&buffer->cpu_notify);
 #endif
 
-	irq_work_sync(&buffer->irq_work.work);
-
 	for_each_buffer_cpu(buffer, cpu)
 		rb_free_cpu_buffer(buffer->buffers[cpu]);
 
@@ -1486,8 +1476,6 @@ rb_remove_pages(struct ring_buffer_per_cpu *cpu_buffer, unsigned long nr_pages)
 		to_remove = rb_list_head(to_remove)->next;
 		head_bit |= (unsigned long)to_remove & RB_PAGE_HEAD;
 	}
-	/* Read iterators need to reset themselves when some pages removed */
-	cpu_buffer->pages_removed += nr_removed;
 
 	next_page = rb_list_head(to_remove)->next;
 
@@ -1509,6 +1497,12 @@ rb_remove_pages(struct ring_buffer_per_cpu *cpu_buffer, unsigned long nr_pages)
 		cpu_buffer->head_page = list_entry(next_page,
 						struct buffer_page, list);
 
+	/*
+	 * change read pointer to make sure any read iterators reset
+	 * themselves
+	 */
+	cpu_buffer->read = 0;
+
 	/* pages are removed, resume tracing and then free the pages */
 	atomic_dec(&cpu_buffer->record_disabled);
 	raw_spin_unlock_irq(&cpu_buffer->reader_lock);
@@ -1722,8 +1716,6 @@ int ring_buffer_resize(struct ring_buffer *buffer, unsigned long size,
 				err = -ENOMEM;
 				goto out_err;
 			}
-
-			cond_resched();
 		}
 
 		get_online_cpus();
@@ -2135,9 +2127,6 @@ rb_reset_tail(struct ring_buffer_per_cpu *cpu_buffer,
 		/* Mark the rest of the page with padding */
 		rb_event_set_padding(event);
 
-		/* Make sure the padding is visible before the write update */
-		smp_wmb();
-
 		/* Set the write back to the previous setting */
 		local_sub(length, &tail_page->write);
 		return;
@@ -2149,9 +2138,6 @@ rb_reset_tail(struct ring_buffer_per_cpu *cpu_buffer,
 	/* time delta must be non zero */
 	event->time_delta = 1;
 
-	/* Make sure the padding is visible before the tail_page->write update */
-	smp_wmb();
-
 	/* Set write to end of buffer */
 	length = (tail + length) - BUF_PAGE_SIZE;
 	local_sub(length, &tail_page->write);
@@ -2438,10 +2424,6 @@ rb_set_commit_to_write(struct ring_buffer_per_cpu *cpu_buffer)
 		if (RB_WARN_ON(cpu_buffer,
 			       rb_is_reader_page(cpu_buffer->tail_page)))
 			return;
-		/*
-		 * No need for a memory barrier here, as the update
-		 * of the tail_page did it for this page.
-		 */
 		local_set(&cpu_buffer->commit_page->page->commit,
 			  rb_page_write(cpu_buffer->commit_page));
 		rb_inc_page(cpu_buffer, &cpu_buffer->commit_page);
@@ -2453,8 +2435,6 @@ rb_set_commit_to_write(struct ring_buffer_per_cpu *cpu_buffer)
 	while (rb_commit_index(cpu_buffer) !=
 	       rb_page_write(cpu_buffer->commit_page)) {
 
-		/* Make sure the readers see the content of what is committed. */
-		smp_wmb();
 		local_set(&cpu_buffer->commit_page->page->commit,
 			  rb_page_write(cpu_buffer->commit_page));
 		RB_WARN_ON(cpu_buffer,
@@ -3499,7 +3479,6 @@ static void rb_iter_reset(struct ring_buffer_iter *iter)
 
 	iter->cache_reader_page = iter->head_page;
 	iter->cache_read = cpu_buffer->read;
-	iter->cache_pages_removed = cpu_buffer->pages_removed;
 
 	if (iter->head)
 		iter->read_stamp = cpu_buffer->read_stamp;
@@ -3749,38 +3728,6 @@ rb_get_reader_page(struct ring_buffer_per_cpu *cpu_buffer)
 	arch_spin_unlock(&cpu_buffer->lock);
 	local_irq_restore(flags);
 
-	/*
-	 * The writer has preempt disable, wait for it. But not forever
-	 * Although, 1 second is pretty much "forever"
-	 */
-#define USECS_WAIT	1000000
-        for (nr_loops = 0; nr_loops < USECS_WAIT; nr_loops++) {
-		/* If the write is past the end of page, a writer is still updating it */
-		if (likely(!reader || rb_page_write(reader) <= BUF_PAGE_SIZE))
-			break;
-
-		udelay(1);
-
-		/* Get the latest version of the reader write value */
-		smp_rmb();
-	}
-
-	/* The writer is not moving forward? Something is wrong */
-	if (RB_WARN_ON(cpu_buffer, nr_loops == USECS_WAIT))
-		reader = NULL;
-
-	/*
-	 * Make sure we see any padding after the write update
-	 * (see rb_reset_tail()).
-	 *
-	 * In addition, a writer may be writing on the reader page
-	 * if the page has not been fully filled, so the read barrier
-	 * is also needed to make sure we see the content of what is
-	 * committed by the writer (see rb_set_commit_to_write()).
-	 */
-	smp_rmb();
-
-
 	return reader;
 }
 
@@ -3932,13 +3879,12 @@ rb_iter_peek(struct ring_buffer_iter *iter, u64 *ts)
 	buffer = cpu_buffer->buffer;
 
 	/*
-	 * Check if someone performed a consuming read to the buffer
-	 * or removed some pages from the buffer. In these cases,
-	 * iterator was invalidated and we need to reset it.
+	 * Check if someone performed a consuming read to
+	 * the buffer. A consuming read invalidates the iterator
+	 * and we need to reset the iterator in this case.
 	 */
 	if (unlikely(iter->cache_read != cpu_buffer->read ||
-		     iter->cache_reader_page != cpu_buffer->reader_page ||
-		     iter->cache_pages_removed != cpu_buffer->pages_removed))
+		     iter->cache_reader_page != cpu_buffer->reader_page))
 		rb_iter_reset(iter);
 
  again:
@@ -4314,34 +4260,28 @@ unsigned long ring_buffer_size(struct ring_buffer *buffer, int cpu)
 }
 EXPORT_SYMBOL_GPL(ring_buffer_size);
 
-static void rb_clear_buffer_page(struct buffer_page *page)
-{
-	local_set(&page->write, 0);
-	local_set(&page->entries, 0);
-	rb_init_page(page->page);
-	page->read = 0;
-}
-
 static void
 rb_reset_cpu(struct ring_buffer_per_cpu *cpu_buffer)
 {
-	struct buffer_page *page;
-
 	rb_head_page_deactivate(cpu_buffer);
 
 	cpu_buffer->head_page
 		= list_entry(cpu_buffer->pages, struct buffer_page, list);
-	rb_clear_buffer_page(cpu_buffer->head_page);
-	list_for_each_entry(page, cpu_buffer->pages, list) {
-		rb_clear_buffer_page(page);
-	}
+	local_set(&cpu_buffer->head_page->write, 0);
+	local_set(&cpu_buffer->head_page->entries, 0);
+	local_set(&cpu_buffer->head_page->page->commit, 0);
+
+	cpu_buffer->head_page->read = 0;
 
 	cpu_buffer->tail_page = cpu_buffer->head_page;
 	cpu_buffer->commit_page = cpu_buffer->head_page;
 
 	INIT_LIST_HEAD(&cpu_buffer->reader_page->list);
 	INIT_LIST_HEAD(&cpu_buffer->new_pages);
-	rb_clear_buffer_page(cpu_buffer->reader_page);
+	local_set(&cpu_buffer->reader_page->write, 0);
+	local_set(&cpu_buffer->reader_page->entries, 0);
+	local_set(&cpu_buffer->reader_page->page->commit, 0);
+	cpu_buffer->reader_page->read = 0;
 
 	local_set(&cpu_buffer->entries_bytes, 0);
 	local_set(&cpu_buffer->overrun, 0);
@@ -4360,7 +4300,6 @@ rb_reset_cpu(struct ring_buffer_per_cpu *cpu_buffer)
 	cpu_buffer->last_overrun = 0;
 
 	rb_head_page_activate(cpu_buffer);
-	cpu_buffer->pages_removed = 0;
 }
 
 /**
@@ -4689,15 +4628,7 @@ int ring_buffer_read_page(struct ring_buffer *buffer,
 		unsigned int pos = 0;
 		unsigned int size;
 
-		/*
-		 * If a full page is expected, this can still be returned
-		 * if there's been a previous partial read and the
-		 * rest of the page can be read and the commit page is off
-		 * the reader page.
-		 */
-		if (full &&
-		    (!read || (len < (commit - read)) ||
-		     cpu_buffer->reader_page == cpu_buffer->commit_page))
+		if (full)
 			goto out_unlock;
 
 		if (len > (commit - read))
@@ -5173,3 +5104,4 @@ static __init int test_ringbuffer(void)
 
 late_initcall(test_ringbuffer);
 #endif /* CONFIG_RING_BUFFER_STARTUP_TEST */
+
diff --git a/security/sdp/dek_legacy.c b/security/sdp/dek_legacy.c
index 38eeb70e5f..9a1b272a89 100755
--- a/security/sdp/dek_legacy.c
+++ b/security/sdp/dek_legacy.c
@@ -102,7 +102,7 @@ int is_root(void) {
 	return 0;
 }
 
-int is_current_adbd() {
+int is_current_adbd(void) {
     DEK_LOGD("current->comm : %s\n", current->comm);
 #if 1
     if(is_root()) {
@@ -118,7 +118,7 @@ int is_current_adbd() {
 #endif
 }
 
-int is_current_epmd() {
+int is_current_epmd(void) {
     DEK_LOGD("current->comm : %s\n", current->comm);
 #if 1
     if(is_root()) {
diff --git a/sound/soc/codecs/tfa9872/Makefile b/sound/soc/codecs/tfa9872/Makefile
index fe324a932d..cd97e9a5f4 100755
--- a/sound/soc/codecs/tfa9872/Makefile
+++ b/sound/soc/codecs/tfa9872/Makefile
@@ -30,6 +30,8 @@ ifdef TFA_WRITE_CAL_TO_FILE
 ccflags-y               += -DTFA_WRITE_CAL_TO_FILE
 endif
 
+ccflags-y		+= $(call cc-disable-warning, enum-conversion)
+
 # objs
 snd-soc-tfa98xx-objs    := tfa98xx.o
 snd-soc-tfa98xx-objs    += tfa_container.o
@@ -43,6 +45,7 @@ snd-soc-tfa98xx-objs    += tfa_log.o
 CFLAGS_tfa98xx.o       += $(TFA98XX_FLAGS)
 CFLAGS_tfa_container.o += $(TFA98XX_FLAGS)
 CFLAGS_tfa_dsp.o       += $(TFA98XX_FLAGS)
+CFLAGS_tfa_dsp.o       += -Wno-enum-conversion
 CFLAGS_tfa_init.o      += $(TFA98XX_FLAGS)
 CFLAGS_tfa_debug.o     += $(TFA98XX_FLAGS)
 CFLAGS_tfa_cal.o       += $(TFA98XX_FLAGS)
diff --git a/sound/soc/codecs/tfa9872/tfa_init.c b/sound/soc/codecs/tfa9872/tfa_init.c
index 3aacdc137f..a695581784 100755
--- a/sound/soc/codecs/tfa9872/tfa_init.c
+++ b/sound/soc/codecs/tfa9872/tfa_init.c
@@ -562,7 +562,7 @@ tfa9896_tfa_dsp_write_tables(tfa98xx_handle_t dev_idx, int sample_rate)
 	enum tfa98xx_error error;
 
 	/* Not used for max1! */
-	sample_rate = sample_rate;
+//	sample_rate = sample_rate;
 
 	error = tfa9896_dsp_write_vsfwdelay_table(dev_idx);
 	if (error == TFA98XX_ERROR_OK)
@@ -678,7 +678,7 @@ tfa9897_tfa_dsp_write_tables(tfa98xx_handle_t dev_idx, int sample_rate)
 	enum tfa98xx_error error;
 
 	/* Not used for max1! */
-	sample_rate = sample_rate;
+//	sample_rate = sample_rate;
 
 	error = tfa9897_dsp_write_vsfwdelay_table(dev_idx);
 	if (error == TFA98XX_ERROR_OK)
diff --git a/drivers/mmc/host/dw_mmc-srpmb.c b/drivers/mmc/host/dw_mmc-srpmb.c
index e3bad04343..bd1c56dc13 100755
--- a/drivers/mmc/host/dw_mmc-srpmb.c
+++ b/drivers/mmc/host/dw_mmc-srpmb.c
@@ -112,7 +112,7 @@ static int mmc_rpmb_access(struct _mmc_rpmb_ctx *ctx, struct _mmc_rpmb_req *req)
 		}
 	}
 
-	wake_lock_stock(&ctx->wakelock);
+	wake_lock(&ctx->wakelock);
 	fops->get_card(bdev, 1);
 
 	/* Initialize mmc ioc command */
diff --git a/buildjackpotlte.sh b/buildjackpotlte.sh
new file mode 100755
index 0000000000..ab352152c8
--- /dev/null
+++ b/buildjackpotlte.sh
@@ -0,0 +1,18 @@
+ROOT_DIR=$(pwd)
+KERNEL_DIR=$ROOT_DIR
+
+PATH="$KERNEL_DIR/toolchain/bin:$KERNEL_DIR/toolchain/bin:${PATH}" \
+make -j$CORES O=out \
+ARCH=arm64 \
+LLVM_DIS=llvm-dis AR=llvm-ar NM=llvm-nm LD=ld.lld OBJDUMP=llvm-objdump STRIP=llvm-strip \
+CC=clang \
+LD_LIBRARY_PATH="$KERNEL_DIR/toolchain/lib:$LD_LIBRARY_PATH" \
+CLANG_TRIPLE=aarch64-linux-gnu- \
+CROSS_COMPILE=$KERNEL_DIR/toolchain/bin/aarch64-linux-gnu- \
+CROSS_COMPILE_ARM32=$KERNEL_DIR/toolchain/bin/arm-linux-gnu-
+
+cp out/arch/arm64/boot/Image kernel_zip/anykernel
+cp out/arch/arm64/boot/dtb.img kernel_zip/anykernel
+cp out/arch/arm64/boot/dtbo.img kernel_zip/anykernel
+cd $KERNEL_DIR/kernel_zip/anykernel/
+zip -r9 "eurekajackpotlte.zip" META-INF tools anykernel.sh Image dtb.img
